<div class="highlight"><pre><span class="cm">/*</span>
<span class="cm">Copyright (c) 2009, Yahoo! Inc. All rights reserved.</span>
<span class="cm">Code licensed under the BSD License:</span>
<span class="cm">http://developer.yahoo.net/yui/license.txt</span>
<span class="cm">version: 2.8.0r4</span>
<span class="cm">*/</span>
<span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">YAHOO</span><span class="o">==</span><span class="s2">&quot;undefined&quot;</span><span class="o">||!</span><span class="nx">YAHOO</span><span class="p">){</span><span class="kd">var</span> <span class="nx">YAHOO</span><span class="o">=</span><span class="p">{};}</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">namespace</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">A</span><span class="o">=</span><span class="nx">arguments</span><span class="p">,</span><span class="nx">E</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">C</span><span class="p">,</span><span class="nx">B</span><span class="p">,</span><span class="nx">D</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">C</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">C</span><span class="o">&lt;</span><span class="nx">A</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">C</span><span class="o">=</span><span class="nx">C</span><span class="o">+</span><span class="mi">1</span><span class="p">){</span><span class="nx">D</span><span class="o">=</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="o">+</span><span class="nx">A</span><span class="p">[</span><span class="nx">C</span><span class="p">]).</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">);</span><span class="nx">E</span><span class="o">=</span><span class="nx">YAHOO</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">B</span><span class="o">=</span><span class="p">(</span><span class="nx">D</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">==</span><span class="s2">&quot;YAHOO&quot;</span><span class="p">)</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="mi">0</span><span class="p">;</span><span class="nx">B</span><span class="o">&lt;</span><span class="nx">D</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">B</span><span class="o">=</span><span class="nx">B</span><span class="o">+</span><span class="mi">1</span><span class="p">){</span><span class="nx">E</span><span class="p">[</span><span class="nx">D</span><span class="p">[</span><span class="nx">B</span><span class="p">]]</span><span class="o">=</span><span class="nx">E</span><span class="p">[</span><span class="nx">D</span><span class="p">[</span><span class="nx">B</span><span class="p">]]</span><span class="o">||</span><span class="p">{};</span><span class="nx">E</span><span class="o">=</span><span class="nx">E</span><span class="p">[</span><span class="nx">D</span><span class="p">[</span><span class="nx">B</span><span class="p">]];}}</span><span class="k">return</span> <span class="nx">E</span><span class="p">;};</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">log</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">D</span><span class="p">,</span><span class="nx">A</span><span class="p">,</span><span class="nx">C</span><span class="p">){</span><span class="kd">var</span> <span class="nx">B</span><span class="o">=</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">widget</span><span class="p">.</span><span class="nx">Logger</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">B</span><span class="o">&amp;&amp;</span><span class="nx">B</span><span class="p">.</span><span class="nx">log</span><span class="p">){</span><span class="k">return</span> <span class="nx">B</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">D</span><span class="p">,</span><span class="nx">A</span><span class="p">,</span><span class="nx">C</span><span class="p">);}</span><span class="k">else</span><span class="p">{</span><span class="k">return</span> <span class="kc">false</span><span class="p">;}};</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">register</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">A</span><span class="p">,</span><span class="nx">E</span><span class="p">,</span><span class="nx">D</span><span class="p">){</span><span class="kd">var</span> <span class="nx">I</span><span class="o">=</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">modules</span><span class="p">,</span><span class="nx">B</span><span class="p">,</span><span class="nx">H</span><span class="p">,</span><span class="nx">G</span><span class="p">,</span><span class="nx">F</span><span class="p">,</span><span class="nx">C</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">I</span><span class="p">[</span><span class="nx">A</span><span class="p">]){</span><span class="nx">I</span><span class="p">[</span><span class="nx">A</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="nx">versions</span><span class="o">:</span><span class="p">[],</span><span class="nx">builds</span><span class="o">:</span><span class="p">[]};}</span><span class="nx">B</span><span class="o">=</span><span class="nx">I</span><span class="p">[</span><span class="nx">A</span><span class="p">];</span><span class="nx">H</span><span class="o">=</span><span class="nx">D</span><span class="p">.</span><span class="nx">version</span><span class="p">;</span><span class="nx">G</span><span class="o">=</span><span class="nx">D</span><span class="p">.</span><span class="nx">build</span><span class="p">;</span><span class="nx">F</span><span class="o">=</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">listeners</span><span class="p">;</span><span class="nx">B</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="nx">A</span><span class="p">;</span><span class="nx">B</span><span class="p">.</span><span class="nx">version</span><span class="o">=</span><span class="nx">H</span><span class="p">;</span><span class="nx">B</span><span class="p">.</span><span class="nx">build</span><span class="o">=</span><span class="nx">G</span><span class="p">;</span><span class="nx">B</span><span class="p">.</span><span class="nx">versions</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">H</span><span class="p">);</span><span class="nx">B</span><span class="p">.</span><span class="nx">builds</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">G</span><span class="p">);</span><span class="nx">B</span><span class="p">.</span><span class="nx">mainClass</span><span class="o">=</span><span class="nx">E</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">C</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">C</span><span class="o">&lt;</span><span class="nx">F</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">C</span><span class="o">=</span><span class="nx">C</span><span class="o">+</span><span class="mi">1</span><span class="p">){</span><span class="nx">F</span><span class="p">[</span><span class="nx">C</span><span class="p">](</span><span class="nx">B</span><span class="p">);}</span><span class="k">if</span><span class="p">(</span><span class="nx">E</span><span class="p">){</span><span class="nx">E</span><span class="p">.</span><span class="nx">VERSION</span><span class="o">=</span><span class="nx">H</span><span class="p">;</span><span class="nx">E</span><span class="p">.</span><span class="nx">BUILD</span><span class="o">=</span><span class="nx">G</span><span class="p">;}</span><span class="k">else</span><span class="p">{</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;mainClass is undefined for module &quot;</span><span class="o">+</span><span class="nx">A</span><span class="p">,</span><span class="s2">&quot;warn&quot;</span><span class="p">);}};</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">env</span><span class="o">=</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">env</span><span class="o">||</span><span class="p">{</span><span class="nx">modules</span><span class="o">:</span><span class="p">[],</span><span class="nx">listeners</span><span class="o">:</span><span class="p">[]};</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">getVersion</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">A</span><span class="p">){</span><span class="k">return</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">modules</span><span class="p">[</span><span class="nx">A</span><span class="p">]</span><span class="o">||</span><span class="kc">null</span><span class="p">;};</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">ua</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">D</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">H</span><span class="p">){</span><span class="kd">var</span> <span class="nx">I</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">return</span> <span class="nb">parseFloat</span><span class="p">(</span><span class="nx">H</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\./g</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">(</span><span class="nx">I</span><span class="o">++==</span><span class="mi">1</span><span class="p">)</span><span class="o">?</span><span class="s2">&quot;&quot;</span><span class="o">:</span><span class="s2">&quot;.&quot;</span><span class="p">;}));},</span><span class="nx">G</span><span class="o">=</span><span class="nx">navigator</span><span class="p">,</span><span class="nx">F</span><span class="o">=</span><span class="p">{</span><span class="nx">ie</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">opera</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">gecko</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">webkit</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">mobile</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">air</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">caja</span><span class="o">:</span><span class="nx">G</span><span class="p">.</span><span class="nx">cajaVersion</span><span class="p">,</span><span class="nx">secure</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="nx">os</span><span class="o">:</span><span class="kc">null</span><span class="p">},</span><span class="nx">C</span><span class="o">=</span><span class="nx">navigator</span><span class="o">&amp;&amp;</span><span class="nx">navigator</span><span class="p">.</span><span class="nx">userAgent</span><span class="p">,</span><span class="nx">E</span><span class="o">=</span><span class="nb">window</span><span class="o">&amp;&amp;</span><span class="nb">window</span><span class="p">.</span><span class="nx">location</span><span class="p">,</span><span class="nx">B</span><span class="o">=</span><span class="nx">E</span><span class="o">&amp;&amp;</span><span class="nx">E</span><span class="p">.</span><span class="nx">href</span><span class="p">,</span><span class="nx">A</span><span class="p">;</span><span class="nx">F</span><span class="p">.</span><span class="nx">secure</span><span class="o">=</span><span class="nx">B</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">B</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">().</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;https&quot;</span><span class="p">)</span><span class="o">===</span><span class="mi">0</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">C</span><span class="p">){</span><span class="k">if</span><span class="p">((</span><span class="sr">/windows|win32/i</span><span class="p">).</span><span class="nx">test</span><span class="p">(</span><span class="nx">C</span><span class="p">)){</span><span class="nx">F</span><span class="p">.</span><span class="nx">os</span><span class="o">=</span><span class="s2">&quot;windows&quot;</span><span class="p">;}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">((</span><span class="sr">/macintosh/i</span><span class="p">).</span><span class="nx">test</span><span class="p">(</span><span class="nx">C</span><span class="p">)){</span><span class="nx">F</span><span class="p">.</span><span class="nx">os</span><span class="o">=</span><span class="s2">&quot;macintosh&quot;</span><span class="p">;}}</span><span class="k">if</span><span class="p">((</span><span class="sr">/KHTML/</span><span class="p">).</span><span class="nx">test</span><span class="p">(</span><span class="nx">C</span><span class="p">)){</span><span class="nx">F</span><span class="p">.</span><span class="nx">webkit</span><span class="o">=</span><span class="mi">1</span><span class="p">;}</span><span class="nx">A</span><span class="o">=</span><span class="nx">C</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/AppleWebKit\/([^\s]*)/</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">A</span><span class="o">&amp;&amp;</span><span class="nx">A</span><span class="p">[</span><span class="mi">1</span><span class="p">]){</span><span class="nx">F</span><span class="p">.</span><span class="nx">webkit</span><span class="o">=</span><span class="nx">D</span><span class="p">(</span><span class="nx">A</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span><span class="k">if</span><span class="p">(</span><span class="sr">/ Mobile\//</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">C</span><span class="p">)){</span><span class="nx">F</span><span class="p">.</span><span class="nx">mobile</span><span class="o">=</span><span class="s2">&quot;Apple&quot;</span><span class="p">;}</span><span class="k">else</span><span class="p">{</span><span class="nx">A</span><span class="o">=</span><span class="nx">C</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/NokiaN[^\/]*/</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">A</span><span class="p">){</span><span class="nx">F</span><span class="p">.</span><span class="nx">mobile</span><span class="o">=</span><span class="nx">A</span><span class="p">[</span><span class="mi">0</span><span class="p">];}}</span><span class="nx">A</span><span class="o">=</span><span class="nx">C</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/AdobeAIR\/([^\s]*)/</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">A</span><span class="p">){</span><span class="nx">F</span><span class="p">.</span><span class="nx">air</span><span class="o">=</span><span class="nx">A</span><span class="p">[</span><span class="mi">0</span><span class="p">];}}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">F</span><span class="p">.</span><span class="nx">webkit</span><span class="p">){</span><span class="nx">A</span><span class="o">=</span><span class="nx">C</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/Opera[\s\/]([^\s]*)/</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">A</span><span class="o">&amp;&amp;</span><span class="nx">A</span><span class="p">[</span><span class="mi">1</span><span class="p">]){</span><span class="nx">F</span><span class="p">.</span><span class="nx">opera</span><span class="o">=</span><span class="nx">D</span><span class="p">(</span><span class="nx">A</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span><span class="nx">A</span><span class="o">=</span><span class="nx">C</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/Opera Mini[^;]*/</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">A</span><span class="p">){</span><span class="nx">F</span><span class="p">.</span><span class="nx">mobile</span><span class="o">=</span><span class="nx">A</span><span class="p">[</span><span class="mi">0</span><span class="p">];}}</span><span class="k">else</span><span class="p">{</span><span class="nx">A</span><span class="o">=</span><span class="nx">C</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/MSIE\s([^;]*)/</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">A</span><span class="o">&amp;&amp;</span><span class="nx">A</span><span class="p">[</span><span class="mi">1</span><span class="p">]){</span><span class="nx">F</span><span class="p">.</span><span class="nx">ie</span><span class="o">=</span><span class="nx">D</span><span class="p">(</span><span class="nx">A</span><span class="p">[</span><span class="mi">1</span><span class="p">]);}</span><span class="k">else</span><span class="p">{</span><span class="nx">A</span><span class="o">=</span><span class="nx">C</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/Gecko\/([^\s]*)/</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">A</span><span class="p">){</span><span class="nx">F</span><span class="p">.</span><span class="nx">gecko</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">A</span><span class="o">=</span><span class="nx">C</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/rv:([^\s\)]*)/</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">A</span><span class="o">&amp;&amp;</span><span class="nx">A</span><span class="p">[</span><span class="mi">1</span><span class="p">]){</span><span class="nx">F</span><span class="p">.</span><span class="nx">gecko</span><span class="o">=</span><span class="nx">D</span><span class="p">(</span><span class="nx">A</span><span class="p">[</span><span class="mi">1</span><span class="p">]);}}}}}}</span><span class="k">return</span> <span class="nx">F</span><span class="p">;}();(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">namespace</span><span class="p">(</span><span class="s2">&quot;util&quot;</span><span class="p">,</span><span class="s2">&quot;widget&quot;</span><span class="p">,</span><span class="s2">&quot;example&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;undefined&quot;</span><span class="o">!==</span><span class="k">typeof</span> <span class="nx">YAHOO_config</span><span class="p">){</span><span class="kd">var</span> <span class="nx">B</span><span class="o">=</span><span class="nx">YAHOO_config</span><span class="p">.</span><span class="nx">listener</span><span class="p">,</span><span class="nx">A</span><span class="o">=</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">listeners</span><span class="p">,</span><span class="nx">D</span><span class="o">=</span><span class="kc">true</span><span class="p">,</span><span class="nx">C</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">B</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">C</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">C</span><span class="o">&lt;</span><span class="nx">A</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">C</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">A</span><span class="p">[</span><span class="nx">C</span><span class="p">]</span><span class="o">==</span><span class="nx">B</span><span class="p">){</span><span class="nx">D</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">break</span><span class="p">;}}</span><span class="k">if</span><span class="p">(</span><span class="nx">D</span><span class="p">){</span><span class="nx">A</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">B</span><span class="p">);}}}})();</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="o">=</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="o">||</span><span class="p">{};(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">B</span><span class="o">=</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="p">,</span><span class="nx">A</span><span class="o">=</span><span class="nb">Object</span><span class="p">.</span><span class="nx">prototype</span><span class="p">,</span><span class="nx">H</span><span class="o">=</span><span class="s2">&quot;[object Array]&quot;</span><span class="p">,</span><span class="nx">C</span><span class="o">=</span><span class="s2">&quot;[object Function]&quot;</span><span class="p">,</span><span class="nx">G</span><span class="o">=</span><span class="s2">&quot;[object Object]&quot;</span><span class="p">,</span><span class="nx">E</span><span class="o">=</span><span class="p">[],</span><span class="nx">F</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;toString&quot;</span><span class="p">,</span><span class="s2">&quot;valueOf&quot;</span><span class="p">],</span><span class="nx">D</span><span class="o">=</span><span class="p">{</span><span class="nx">isArray</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">I</span><span class="p">){</span><span class="k">return</span> <span class="nx">A</span><span class="p">.</span><span class="nx">toString</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">I</span><span class="p">)</span><span class="o">===</span><span class="nx">H</span><span class="p">;},</span><span class="nx">isBoolean</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">I</span><span class="p">){</span><span class="k">return</span> <span class="k">typeof</span> <span class="nx">I</span><span class="o">===</span><span class="s2">&quot;boolean&quot;</span><span class="p">;},</span><span class="nx">isFunction</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">I</span><span class="p">){</span><span class="k">return</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">I</span><span class="o">===</span><span class="s2">&quot;function&quot;</span><span class="p">)</span><span class="o">||</span><span class="nx">A</span><span class="p">.</span><span class="nx">toString</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">I</span><span class="p">)</span><span class="o">===</span><span class="nx">C</span><span class="p">;},</span><span class="nx">isNull</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">I</span><span class="p">){</span><span class="k">return</span> <span class="nx">I</span><span class="o">===</span><span class="kc">null</span><span class="p">;},</span><span class="nx">isNumber</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">I</span><span class="p">){</span><span class="k">return</span> <span class="k">typeof</span> <span class="nx">I</span><span class="o">===</span><span class="s2">&quot;number&quot;</span><span class="o">&amp;&amp;</span><span class="nb">isFinite</span><span class="p">(</span><span class="nx">I</span><span class="p">);},</span><span class="nx">isObject</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">I</span><span class="p">){</span><span class="k">return</span><span class="p">(</span><span class="nx">I</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">I</span><span class="o">===</span><span class="s2">&quot;object&quot;</span><span class="o">||</span><span class="nx">B</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">I</span><span class="p">)))</span><span class="o">||</span><span class="kc">false</span><span class="p">;},</span><span class="nx">isString</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">I</span><span class="p">){</span><span class="k">return</span> <span class="k">typeof</span> <span class="nx">I</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="p">;},</span><span class="nx">isUndefined</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">I</span><span class="p">){</span><span class="k">return</span> <span class="k">typeof</span> <span class="nx">I</span><span class="o">===</span><span class="s2">&quot;undefined&quot;</span><span class="p">;},</span><span class="nx">_IEEnumFix</span><span class="o">:</span><span class="p">(</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">ua</span><span class="p">.</span><span class="nx">ie</span><span class="p">)</span><span class="o">?</span><span class="kd">function</span><span class="p">(</span><span class="nx">K</span><span class="p">,</span><span class="nx">J</span><span class="p">){</span><span class="kd">var</span> <span class="nx">I</span><span class="p">,</span><span class="nx">M</span><span class="p">,</span><span class="nx">L</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">I</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">I</span><span class="o">&lt;</span><span class="nx">F</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">I</span><span class="o">=</span><span class="nx">I</span><span class="o">+</span><span class="mi">1</span><span class="p">){</span><span class="nx">M</span><span class="o">=</span><span class="nx">F</span><span class="p">[</span><span class="nx">I</span><span class="p">];</span><span class="nx">L</span><span class="o">=</span><span class="nx">J</span><span class="p">[</span><span class="nx">M</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">B</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">L</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">L</span><span class="o">!=</span><span class="nx">A</span><span class="p">[</span><span class="nx">M</span><span class="p">]){</span><span class="nx">K</span><span class="p">[</span><span class="nx">M</span><span class="p">]</span><span class="o">=</span><span class="nx">L</span><span class="p">;}}}</span><span class="o">:</span><span class="kd">function</span><span class="p">(){},</span><span class="nx">extend</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">L</span><span class="p">,</span><span class="nx">M</span><span class="p">,</span><span class="nx">K</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">M</span><span class="o">||!</span><span class="nx">L</span><span class="p">){</span><span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;extend failed, please check that &quot;</span><span class="o">+</span><span class="s2">&quot;all dependencies are included.&quot;</span><span class="p">);}</span><span class="kd">var</span> <span class="nx">J</span><span class="o">=</span><span class="kd">function</span><span class="p">(){},</span><span class="nx">I</span><span class="p">;</span><span class="nx">J</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="nx">M</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">L</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="k">new</span> <span class="nx">J</span><span class="p">();</span><span class="nx">L</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">constructor</span><span class="o">=</span><span class="nx">L</span><span class="p">;</span><span class="nx">L</span><span class="p">.</span><span class="nx">superclass</span><span class="o">=</span><span class="nx">M</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">M</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">constructor</span><span class="o">==</span><span class="nx">A</span><span class="p">.</span><span class="nx">constructor</span><span class="p">){</span><span class="nx">M</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">constructor</span><span class="o">=</span><span class="nx">M</span><span class="p">;}</span><span class="k">if</span><span class="p">(</span><span class="nx">K</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">I</span> <span class="k">in</span> <span class="nx">K</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">B</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">K</span><span class="p">,</span><span class="nx">I</span><span class="p">)){</span><span class="nx">L</span><span class="p">.</span><span class="nx">prototype</span><span class="p">[</span><span class="nx">I</span><span class="p">]</span><span class="o">=</span><span class="nx">K</span><span class="p">[</span><span class="nx">I</span><span class="p">];}}</span><span class="nx">B</span><span class="p">.</span><span class="nx">_IEEnumFix</span><span class="p">(</span><span class="nx">L</span><span class="p">.</span><span class="nx">prototype</span><span class="p">,</span><span class="nx">K</span><span class="p">);}},</span><span class="nx">augmentObject</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">M</span><span class="p">,</span><span class="nx">L</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">L</span><span class="o">||!</span><span class="nx">M</span><span class="p">){</span><span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;Absorb failed, verify dependencies.&quot;</span><span class="p">);}</span><span class="kd">var</span> <span class="nx">I</span><span class="o">=</span><span class="nx">arguments</span><span class="p">,</span><span class="nx">K</span><span class="p">,</span><span class="nx">N</span><span class="p">,</span><span class="nx">J</span><span class="o">=</span><span class="nx">I</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">J</span><span class="o">&amp;&amp;</span><span class="nx">J</span><span class="o">!==</span><span class="kc">true</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">K</span><span class="o">=</span><span class="mi">2</span><span class="p">;</span><span class="nx">K</span><span class="o">&lt;</span><span class="nx">I</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">K</span><span class="o">=</span><span class="nx">K</span><span class="o">+</span><span class="mi">1</span><span class="p">){</span><span class="nx">M</span><span class="p">[</span><span class="nx">I</span><span class="p">[</span><span class="nx">K</span><span class="p">]]</span><span class="o">=</span><span class="nx">L</span><span class="p">[</span><span class="nx">I</span><span class="p">[</span><span class="nx">K</span><span class="p">]];}}</span><span class="k">else</span><span class="p">{</span><span class="k">for</span><span class="p">(</span><span class="nx">N</span> <span class="k">in</span> <span class="nx">L</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">J</span><span class="o">||!</span><span class="p">(</span><span class="nx">N</span> <span class="k">in</span> <span class="nx">M</span><span class="p">)){</span><span class="nx">M</span><span class="p">[</span><span class="nx">N</span><span class="p">]</span><span class="o">=</span><span class="nx">L</span><span class="p">[</span><span class="nx">N</span><span class="p">];}}</span><span class="nx">B</span><span class="p">.</span><span class="nx">_IEEnumFix</span><span class="p">(</span><span class="nx">M</span><span class="p">,</span><span class="nx">L</span><span class="p">);}},</span><span class="nx">augmentProto</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">L</span><span class="p">,</span><span class="nx">K</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">K</span><span class="o">||!</span><span class="nx">L</span><span class="p">){</span><span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;Augment failed, verify dependencies.&quot;</span><span class="p">);}</span><span class="kd">var</span> <span class="nx">I</span><span class="o">=</span><span class="p">[</span><span class="nx">L</span><span class="p">.</span><span class="nx">prototype</span><span class="p">,</span><span class="nx">K</span><span class="p">.</span><span class="nx">prototype</span><span class="p">],</span><span class="nx">J</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">J</span><span class="o">=</span><span class="mi">2</span><span class="p">;</span><span class="nx">J</span><span class="o">&lt;</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">J</span><span class="o">=</span><span class="nx">J</span><span class="o">+</span><span class="mi">1</span><span class="p">){</span><span class="nx">I</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">arguments</span><span class="p">[</span><span class="nx">J</span><span class="p">]);}</span><span class="nx">B</span><span class="p">.</span><span class="nx">augmentObject</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">I</span><span class="p">);},</span><span class="nx">dump</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">I</span><span class="p">,</span><span class="nx">N</span><span class="p">){</span><span class="kd">var</span> <span class="nx">K</span><span class="p">,</span><span class="nx">M</span><span class="p">,</span><span class="nx">P</span><span class="o">=</span><span class="p">[],</span><span class="nx">Q</span><span class="o">=</span><span class="s2">&quot;{...}&quot;</span><span class="p">,</span><span class="nx">J</span><span class="o">=</span><span class="s2">&quot;f(){...}&quot;</span><span class="p">,</span><span class="nx">O</span><span class="o">=</span><span class="s2">&quot;, &quot;</span><span class="p">,</span><span class="nx">L</span><span class="o">=</span><span class="s2">&quot; =&gt; &quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">B</span><span class="p">.</span><span class="nx">isObject</span><span class="p">(</span><span class="nx">I</span><span class="p">)){</span><span class="k">return</span> <span class="nx">I</span><span class="o">+</span><span class="s2">&quot;&quot;</span><span class="p">;}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">I</span> <span class="k">instanceof</span> <span class="nb">Date</span><span class="o">||</span><span class="p">(</span><span class="s2">&quot;nodeType&quot;</span> <span class="k">in</span> <span class="nx">I</span><span class="o">&amp;&amp;</span><span class="s2">&quot;tagName&quot;</span> <span class="k">in</span> <span class="nx">I</span><span class="p">)){</span><span class="k">return</span> <span class="nx">I</span><span class="p">;}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">B</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">I</span><span class="p">)){</span><span class="k">return</span> <span class="nx">J</span><span class="p">;}}}</span><span class="nx">N</span><span class="o">=</span><span class="p">(</span><span class="nx">B</span><span class="p">.</span><span class="nx">isNumber</span><span class="p">(</span><span class="nx">N</span><span class="p">))</span><span class="o">?</span><span class="nx">N</span><span class="o">:</span><span class="mi">3</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">B</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">I</span><span class="p">)){</span><span class="nx">P</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;[&quot;</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">K</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">M</span><span class="o">=</span><span class="nx">I</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">K</span><span class="o">&lt;</span><span class="nx">M</span><span class="p">;</span><span class="nx">K</span><span class="o">=</span><span class="nx">K</span><span class="o">+</span><span class="mi">1</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">B</span><span class="p">.</span><span class="nx">isObject</span><span class="p">(</span><span class="nx">I</span><span class="p">[</span><span class="nx">K</span><span class="p">])){</span><span class="nx">P</span><span class="p">.</span><span class="nx">push</span><span class="p">((</span><span class="nx">N</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">)</span><span class="o">?</span><span class="nx">B</span><span class="p">.</span><span class="nx">dump</span><span class="p">(</span><span class="nx">I</span><span class="p">[</span><span class="nx">K</span><span class="p">],</span><span class="nx">N</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="nx">Q</span><span class="p">);}</span><span class="k">else</span><span class="p">{</span><span class="nx">P</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">I</span><span class="p">[</span><span class="nx">K</span><span class="p">]);}</span><span class="nx">P</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">O</span><span class="p">);}</span><span class="k">if</span><span class="p">(</span><span class="nx">P</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">1</span><span class="p">){</span><span class="nx">P</span><span class="p">.</span><span class="nx">pop</span><span class="p">();}</span><span class="nx">P</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;]&quot;</span><span class="p">);}</span><span class="k">else</span><span class="p">{</span><span class="nx">P</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;{&quot;</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">K</span> <span class="k">in</span> <span class="nx">I</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">B</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">I</span><span class="p">,</span><span class="nx">K</span><span class="p">)){</span><span class="nx">P</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">K</span><span class="o">+</span><span class="nx">L</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">B</span><span class="p">.</span><span class="nx">isObject</span><span class="p">(</span><span class="nx">I</span><span class="p">[</span><span class="nx">K</span><span class="p">])){</span><span class="nx">P</span><span class="p">.</span><span class="nx">push</span><span class="p">((</span><span class="nx">N</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">)</span><span class="o">?</span><span class="nx">B</span><span class="p">.</span><span class="nx">dump</span><span class="p">(</span><span class="nx">I</span><span class="p">[</span><span class="nx">K</span><span class="p">],</span><span class="nx">N</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="nx">Q</span><span class="p">);}</span><span class="k">else</span><span class="p">{</span><span class="nx">P</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">I</span><span class="p">[</span><span class="nx">K</span><span class="p">]);}</span><span class="nx">P</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">O</span><span class="p">);}}</span><span class="k">if</span><span class="p">(</span><span class="nx">P</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">1</span><span class="p">){</span><span class="nx">P</span><span class="p">.</span><span class="nx">pop</span><span class="p">();}</span><span class="nx">P</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;}&quot;</span><span class="p">);}</span><span class="k">return</span> <span class="nx">P</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">);},</span><span class="nx">substitute</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">Y</span><span class="p">,</span><span class="nx">J</span><span class="p">,</span><span class="nx">R</span><span class="p">){</span><span class="kd">var</span> <span class="nx">N</span><span class="p">,</span><span class="nx">M</span><span class="p">,</span><span class="nx">L</span><span class="p">,</span><span class="nx">U</span><span class="p">,</span><span class="nx">V</span><span class="p">,</span><span class="nx">X</span><span class="p">,</span><span class="nx">T</span><span class="o">=</span><span class="p">[],</span><span class="nx">K</span><span class="p">,</span><span class="nx">O</span><span class="o">=</span><span class="s2">&quot;dump&quot;</span><span class="p">,</span><span class="nx">S</span><span class="o">=</span><span class="s2">&quot; &quot;</span><span class="p">,</span><span class="nx">I</span><span class="o">=</span><span class="s2">&quot;{&quot;</span><span class="p">,</span><span class="nx">W</span><span class="o">=</span><span class="s2">&quot;}&quot;</span><span class="p">,</span><span class="nx">Q</span><span class="p">,</span><span class="nx">P</span><span class="p">;</span><span class="k">for</span><span class="p">(;;){</span><span class="nx">N</span><span class="o">=</span><span class="nx">Y</span><span class="p">.</span><span class="nx">lastIndexOf</span><span class="p">(</span><span class="nx">I</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">N</span><span class="o">&lt;</span><span class="mi">0</span><span class="p">){</span><span class="k">break</span><span class="p">;}</span><span class="nx">M</span><span class="o">=</span><span class="nx">Y</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">W</span><span class="p">,</span><span class="nx">N</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">N</span><span class="o">+</span><span class="mi">1</span><span class="o">&gt;=</span><span class="nx">M</span><span class="p">){</span><span class="k">break</span><span class="p">;}</span><span class="nx">K</span><span class="o">=</span><span class="nx">Y</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="nx">N</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="nx">M</span><span class="p">);</span><span class="nx">U</span><span class="o">=</span><span class="nx">K</span><span class="p">;</span><span class="nx">X</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">L</span><span class="o">=</span><span class="nx">U</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">S</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">L</span><span class="o">&gt;-</span><span class="mi">1</span><span class="p">){</span><span class="nx">X</span><span class="o">=</span><span class="nx">U</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="nx">L</span><span class="o">+</span><span class="mi">1</span><span class="p">);</span><span class="nx">U</span><span class="o">=</span><span class="nx">U</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">L</span><span class="p">);}</span><span class="nx">V</span><span class="o">=</span><span class="nx">J</span><span class="p">[</span><span class="nx">U</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">R</span><span class="p">){</span><span class="nx">V</span><span class="o">=</span><span class="nx">R</span><span class="p">(</span><span class="nx">U</span><span class="p">,</span><span class="nx">V</span><span class="p">,</span><span class="nx">X</span><span class="p">);}</span><span class="k">if</span><span class="p">(</span><span class="nx">B</span><span class="p">.</span><span class="nx">isObject</span><span class="p">(</span><span class="nx">V</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="nx">B</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">V</span><span class="p">)){</span><span class="nx">V</span><span class="o">=</span><span class="nx">B</span><span class="p">.</span><span class="nx">dump</span><span class="p">(</span><span class="nx">V</span><span class="p">,</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">X</span><span class="p">,</span><span class="mi">10</span><span class="p">));}</span><span class="k">else</span><span class="p">{</span><span class="nx">X</span><span class="o">=</span><span class="nx">X</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">Q</span><span class="o">=</span><span class="nx">X</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">O</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">Q</span><span class="o">&gt;-</span><span class="mi">1</span><span class="p">){</span><span class="nx">X</span><span class="o">=</span><span class="nx">X</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">4</span><span class="p">);}</span><span class="nx">P</span><span class="o">=</span><span class="nx">V</span><span class="p">.</span><span class="nx">toString</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">P</span><span class="o">===</span><span class="nx">G</span><span class="o">||</span><span class="nx">Q</span><span class="o">&gt;-</span><span class="mi">1</span><span class="p">){</span><span class="nx">V</span><span class="o">=</span><span class="nx">B</span><span class="p">.</span><span class="nx">dump</span><span class="p">(</span><span class="nx">V</span><span class="p">,</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">X</span><span class="p">,</span><span class="mi">10</span><span class="p">));}</span><span class="k">else</span><span class="p">{</span><span class="nx">V</span><span class="o">=</span><span class="nx">P</span><span class="p">;}}}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">B</span><span class="p">.</span><span class="nx">isString</span><span class="p">(</span><span class="nx">V</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">B</span><span class="p">.</span><span class="nx">isNumber</span><span class="p">(</span><span class="nx">V</span><span class="p">)){</span><span class="nx">V</span><span class="o">=</span><span class="s2">&quot;~-&quot;</span><span class="o">+</span><span class="nx">T</span><span class="p">.</span><span class="nx">length</span><span class="o">+</span><span class="s2">&quot;-~&quot;</span><span class="p">;</span><span class="nx">T</span><span class="p">[</span><span class="nx">T</span><span class="p">.</span><span class="nx">length</span><span class="p">]</span><span class="o">=</span><span class="nx">K</span><span class="p">;}}</span><span class="nx">Y</span><span class="o">=</span><span class="nx">Y</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">N</span><span class="p">)</span><span class="o">+</span><span class="nx">V</span><span class="o">+</span><span class="nx">Y</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="nx">M</span><span class="o">+</span><span class="mi">1</span><span class="p">);}</span><span class="k">for</span><span class="p">(</span><span class="nx">N</span><span class="o">=</span><span class="nx">T</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">N</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="nx">N</span><span class="o">=</span><span class="nx">N</span><span class="o">-</span><span class="mi">1</span><span class="p">){</span><span class="nx">Y</span><span class="o">=</span><span class="nx">Y</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="s2">&quot;~-&quot;</span><span class="o">+</span><span class="nx">N</span><span class="o">+</span><span class="s2">&quot;-~&quot;</span><span class="p">),</span><span class="s2">&quot;{&quot;</span><span class="o">+</span><span class="nx">T</span><span class="p">[</span><span class="nx">N</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot;}&quot;</span><span class="p">,</span><span class="s2">&quot;g&quot;</span><span class="p">);}</span><span class="k">return</span> <span class="nx">Y</span><span class="p">;},</span><span class="nx">trim</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">I</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="k">return</span> <span class="nx">I</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^\s+|\s+$/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">);}</span><span class="k">catch</span><span class="p">(</span><span class="nx">J</span><span class="p">){</span><span class="k">return</span> <span class="nx">I</span><span class="p">;}},</span><span class="nx">merge</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">L</span><span class="o">=</span><span class="p">{},</span><span class="nx">J</span><span class="o">=</span><span class="nx">arguments</span><span class="p">,</span><span class="nx">I</span><span class="o">=</span><span class="nx">J</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">K</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">K</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">K</span><span class="o">&lt;</span><span class="nx">I</span><span class="p">;</span><span class="nx">K</span><span class="o">=</span><span class="nx">K</span><span class="o">+</span><span class="mi">1</span><span class="p">){</span><span class="nx">B</span><span class="p">.</span><span class="nx">augmentObject</span><span class="p">(</span><span class="nx">L</span><span class="p">,</span><span class="nx">J</span><span class="p">[</span><span class="nx">K</span><span class="p">],</span><span class="kc">true</span><span class="p">);}</span><span class="k">return</span> <span class="nx">L</span><span class="p">;},</span><span class="nx">later</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">P</span><span class="p">,</span><span class="nx">J</span><span class="p">,</span><span class="nx">Q</span><span class="p">,</span><span class="nx">L</span><span class="p">,</span><span class="nx">M</span><span class="p">){</span><span class="nx">P</span><span class="o">=</span><span class="nx">P</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="nx">J</span><span class="o">=</span><span class="nx">J</span><span class="o">||</span><span class="p">{};</span><span class="kd">var</span> <span class="nx">K</span><span class="o">=</span><span class="nx">Q</span><span class="p">,</span><span class="nx">O</span><span class="o">=</span><span class="nx">L</span><span class="p">,</span><span class="nx">N</span><span class="p">,</span><span class="nx">I</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">B</span><span class="p">.</span><span class="nx">isString</span><span class="p">(</span><span class="nx">Q</span><span class="p">)){</span><span class="nx">K</span><span class="o">=</span><span class="nx">J</span><span class="p">[</span><span class="nx">Q</span><span class="p">];}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">K</span><span class="p">){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="s2">&quot;method undefined&quot;</span><span class="p">);}</span><span class="k">if</span><span class="p">(</span><span class="nx">O</span><span class="o">&amp;&amp;!</span><span class="nx">B</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">O</span><span class="p">)){</span><span class="nx">O</span><span class="o">=</span><span class="p">[</span><span class="nx">L</span><span class="p">];}</span><span class="nx">N</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">K</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">J</span><span class="p">,</span><span class="nx">O</span><span class="o">||</span><span class="nx">E</span><span class="p">);};</span><span class="nx">I</span><span class="o">=</span><span class="p">(</span><span class="nx">M</span><span class="p">)</span><span class="o">?</span><span class="nx">setInterval</span><span class="p">(</span><span class="nx">N</span><span class="p">,</span><span class="nx">P</span><span class="p">)</span><span class="o">:</span><span class="nx">setTimeout</span><span class="p">(</span><span class="nx">N</span><span class="p">,</span><span class="nx">P</span><span class="p">);</span><span class="k">return</span><span class="p">{</span><span class="nx">interval</span><span class="o">:</span><span class="nx">M</span><span class="p">,</span><span class="nx">cancel</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">interval</span><span class="p">){</span><span class="nx">clearInterval</span><span class="p">(</span><span class="nx">I</span><span class="p">);}</span><span class="k">else</span><span class="p">{</span><span class="nx">clearTimeout</span><span class="p">(</span><span class="nx">I</span><span class="p">);}}};},</span><span class="nx">isValue</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">I</span><span class="p">){</span><span class="k">return</span><span class="p">(</span><span class="nx">B</span><span class="p">.</span><span class="nx">isObject</span><span class="p">(</span><span class="nx">I</span><span class="p">)</span><span class="o">||</span><span class="nx">B</span><span class="p">.</span><span class="nx">isString</span><span class="p">(</span><span class="nx">I</span><span class="p">)</span><span class="o">||</span><span class="nx">B</span><span class="p">.</span><span class="nx">isNumber</span><span class="p">(</span><span class="nx">I</span><span class="p">)</span><span class="o">||</span><span class="nx">B</span><span class="p">.</span><span class="nx">isBoolean</span><span class="p">(</span><span class="nx">I</span><span class="p">));}};</span><span class="nx">B</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="o">=</span><span class="p">(</span><span class="nx">A</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">)</span><span class="o">?</span><span class="kd">function</span><span class="p">(</span><span class="nx">I</span><span class="p">,</span><span class="nx">J</span><span class="p">){</span><span class="k">return</span> <span class="nx">I</span><span class="o">&amp;&amp;</span><span class="nx">I</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">J</span><span class="p">);}</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">I</span><span class="p">,</span><span class="nx">J</span><span class="p">){</span><span class="k">return</span> <span class="o">!</span><span class="nx">B</span><span class="p">.</span><span class="nx">isUndefined</span><span class="p">(</span><span class="nx">I</span><span class="p">[</span><span class="nx">J</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="nx">I</span><span class="p">.</span><span class="nx">constructor</span><span class="p">.</span><span class="nx">prototype</span><span class="p">[</span><span class="nx">J</span><span class="p">]</span><span class="o">!==</span><span class="nx">I</span><span class="p">[</span><span class="nx">J</span><span class="p">];};</span><span class="nx">D</span><span class="p">.</span><span class="nx">augmentObject</span><span class="p">(</span><span class="nx">B</span><span class="p">,</span><span class="nx">D</span><span class="p">,</span><span class="kc">true</span><span class="p">);</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Lang</span><span class="o">=</span><span class="nx">B</span><span class="p">;</span><span class="nx">B</span><span class="p">.</span><span class="nx">augment</span><span class="o">=</span><span class="nx">B</span><span class="p">.</span><span class="nx">augmentProto</span><span class="p">;</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">augment</span><span class="o">=</span><span class="nx">B</span><span class="p">.</span><span class="nx">augmentProto</span><span class="p">;</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">extend</span><span class="o">=</span><span class="nx">B</span><span class="p">.</span><span class="nx">extend</span><span class="p">;})();</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">register</span><span class="p">(</span><span class="s2">&quot;yahoo&quot;</span><span class="p">,</span><span class="nx">YAHOO</span><span class="p">,{</span><span class="nx">version</span><span class="o">:</span><span class="s2">&quot;2.8.0r4&quot;</span><span class="p">,</span><span class="nx">build</span><span class="o">:</span><span class="s2">&quot;2446&quot;</span><span class="p">});</span>
<span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">_id_counter</span><span class="o">=</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">_id_counter</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">E</span><span class="o">=</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">,</span><span class="nx">L</span><span class="o">=</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">ua</span><span class="p">,</span><span class="nx">A</span><span class="o">=</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">trim</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="p">{},</span><span class="nx">h</span><span class="o">=</span><span class="p">{},</span><span class="nx">N</span><span class="o">=</span><span class="sr">/^t(?:able|d|h)$/i</span><span class="p">,</span><span class="nx">X</span><span class="o">=</span><span class="sr">/color$/i</span><span class="p">,</span><span class="nx">K</span><span class="o">=</span><span class="nb">window</span><span class="p">.</span><span class="nb">document</span><span class="p">,</span><span class="nx">W</span><span class="o">=</span><span class="nx">K</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="s2">&quot;ownerDocument&quot;</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="s2">&quot;defaultView&quot;</span><span class="p">,</span><span class="nx">v</span><span class="o">=</span><span class="s2">&quot;documentElement&quot;</span><span class="p">,</span><span class="nx">t</span><span class="o">=</span><span class="s2">&quot;compatMode&quot;</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="s2">&quot;offsetLeft&quot;</span><span class="p">,</span><span class="nx">P</span><span class="o">=</span><span class="s2">&quot;offsetTop&quot;</span><span class="p">,</span><span class="nx">u</span><span class="o">=</span><span class="s2">&quot;offsetParent&quot;</span><span class="p">,</span><span class="nx">Z</span><span class="o">=</span><span class="s2">&quot;parentNode&quot;</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="s2">&quot;nodeType&quot;</span><span class="p">,</span><span class="nx">C</span><span class="o">=</span><span class="s2">&quot;tagName&quot;</span><span class="p">,</span><span class="nx">O</span><span class="o">=</span><span class="s2">&quot;scrollLeft&quot;</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="s2">&quot;scrollTop&quot;</span><span class="p">,</span><span class="nx">Q</span><span class="o">=</span><span class="s2">&quot;getBoundingClientRect&quot;</span><span class="p">,</span><span class="nx">w</span><span class="o">=</span><span class="s2">&quot;getComputedStyle&quot;</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="s2">&quot;currentStyle&quot;</span><span class="p">,</span><span class="nx">M</span><span class="o">=</span><span class="s2">&quot;CSS1Compat&quot;</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="s2">&quot;BackCompat&quot;</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="s2">&quot;class&quot;</span><span class="p">,</span><span class="nx">F</span><span class="o">=</span><span class="s2">&quot;className&quot;</span><span class="p">,</span><span class="nx">J</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">B</span><span class="o">=</span><span class="s2">&quot; &quot;</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="s2">&quot;(?:^|\\s)&quot;</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="s2">&quot;(?= |$)&quot;</span><span class="p">,</span><span class="nx">U</span><span class="o">=</span><span class="s2">&quot;g&quot;</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="s2">&quot;position&quot;</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="s2">&quot;fixed&quot;</span><span class="p">,</span><span class="nx">V</span><span class="o">=</span><span class="s2">&quot;relative&quot;</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="s2">&quot;left&quot;</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="s2">&quot;top&quot;</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="s2">&quot;medium&quot;</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="s2">&quot;borderLeftWidth&quot;</span><span class="p">,</span><span class="nx">R</span><span class="o">=</span><span class="s2">&quot;borderTopWidth&quot;</span><span class="p">,</span><span class="nx">D</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">opera</span><span class="p">,</span><span class="nx">I</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">webkit</span><span class="p">,</span><span class="nx">H</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">gecko</span><span class="p">,</span><span class="nx">T</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">ie</span><span class="p">;</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="o">=</span><span class="p">{</span><span class="nx">CUSTOM_ATTRIBUTES</span><span class="o">:</span><span class="p">(</span><span class="o">!</span><span class="nx">W</span><span class="p">.</span><span class="nx">hasAttribute</span><span class="p">)</span><span class="o">?</span><span class="p">{</span><span class="s2">&quot;for&quot;</span><span class="o">:</span><span class="s2">&quot;htmlFor&quot;</span><span class="p">,</span><span class="s2">&quot;class&quot;</span><span class="o">:</span><span class="nx">F</span><span class="p">}</span><span class="o">:</span><span class="p">{</span><span class="s2">&quot;htmlFor&quot;</span><span class="o">:</span><span class="s2">&quot;for&quot;</span><span class="p">,</span><span class="s2">&quot;className&quot;</span><span class="o">:</span><span class="nx">g</span><span class="p">},</span><span class="nx">DOT_ATTRIBUTES</span><span class="o">:</span><span class="p">{},</span><span class="nx">get</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">z</span><span class="p">){</span><span class="kd">var</span> <span class="nx">AB</span><span class="p">,</span><span class="nx">x</span><span class="p">,</span><span class="nx">AA</span><span class="p">,</span><span class="nx">y</span><span class="p">,</span><span class="nx">Y</span><span class="p">,</span><span class="nx">G</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">z</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">z</span><span class="p">[</span><span class="nx">l</span><span class="p">]</span><span class="o">||</span><span class="nx">z</span><span class="p">.</span><span class="nx">item</span><span class="p">){</span><span class="k">return</span> <span class="nx">z</span><span class="p">;}</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">z</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="p">){</span><span class="nx">AB</span><span class="o">=</span><span class="nx">z</span><span class="p">;</span><span class="nx">z</span><span class="o">=</span><span class="nx">K</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="nx">z</span><span class="p">);</span><span class="nx">G</span><span class="o">=</span><span class="p">(</span><span class="nx">z</span><span class="p">)</span><span class="o">?</span><span class="nx">z</span><span class="p">.</span><span class="nx">attributes</span><span class="o">:</span><span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">z</span><span class="o">&amp;&amp;</span><span class="nx">G</span><span class="o">&amp;&amp;</span><span class="nx">G</span><span class="p">.</span><span class="nx">id</span><span class="o">&amp;&amp;</span><span class="nx">G</span><span class="p">.</span><span class="nx">id</span><span class="p">.</span><span class="nx">value</span><span class="o">===</span><span class="nx">AB</span><span class="p">){</span><span class="k">return</span> <span class="nx">z</span><span class="p">;}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">z</span><span class="o">&amp;&amp;</span><span class="nx">K</span><span class="p">.</span><span class="nx">all</span><span class="p">){</span><span class="nx">z</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">x</span><span class="o">=</span><span class="nx">K</span><span class="p">.</span><span class="nx">all</span><span class="p">[</span><span class="nx">AB</span><span class="p">];</span><span class="k">for</span><span class="p">(</span><span class="nx">y</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">Y</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">y</span><span class="o">&lt;</span><span class="nx">Y</span><span class="p">;</span><span class="o">++</span><span class="nx">y</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="p">[</span><span class="nx">y</span><span class="p">].</span><span class="nx">id</span><span class="o">===</span><span class="nx">AB</span><span class="p">){</span><span class="k">return</span> <span class="nx">x</span><span class="p">[</span><span class="nx">y</span><span class="p">];}}}}</span><span class="k">return</span> <span class="nx">z</span><span class="p">;}</span><span class="k">if</span><span class="p">(</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Element</span><span class="o">&amp;&amp;</span><span class="nx">z</span> <span class="k">instanceof</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Element</span><span class="p">){</span><span class="nx">z</span><span class="o">=</span><span class="nx">z</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;element&quot;</span><span class="p">);}</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;length&quot;</span> <span class="k">in</span> <span class="nx">z</span><span class="p">){</span><span class="nx">AA</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="nx">y</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">Y</span><span class="o">=</span><span class="nx">z</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">y</span><span class="o">&lt;</span><span class="nx">Y</span><span class="p">;</span><span class="o">++</span><span class="nx">y</span><span class="p">){</span><span class="nx">AA</span><span class="p">[</span><span class="nx">AA</span><span class="p">.</span><span class="nx">length</span><span class="p">]</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">z</span><span class="p">[</span><span class="nx">y</span><span class="p">]);}</span><span class="k">return</span> <span class="nx">AA</span><span class="p">;}</span><span class="k">return</span> <span class="nx">z</span><span class="p">;}</span><span class="k">return</span> <span class="kc">null</span><span class="p">;},</span><span class="nx">getComputedStyle</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">Y</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nb">window</span><span class="p">[</span><span class="nx">w</span><span class="p">]){</span><span class="k">return</span> <span class="nx">G</span><span class="p">[</span><span class="nx">e</span><span class="p">][</span><span class="nx">n</span><span class="p">][</span><span class="nx">w</span><span class="p">](</span><span class="nx">G</span><span class="p">,</span><span class="kc">null</span><span class="p">)[</span><span class="nx">Y</span><span class="p">];}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">G</span><span class="p">[</span><span class="nx">a</span><span class="p">]){</span><span class="k">return</span> <span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">IE_ComputedStyle</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">Y</span><span class="p">);}}},</span><span class="nx">getStyle</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">Y</span><span class="p">){</span><span class="k">return</span> <span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">batch</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">_getStyle</span><span class="p">,</span><span class="nx">Y</span><span class="p">);},</span><span class="nx">_getStyle</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nb">window</span><span class="p">[</span><span class="nx">w</span><span class="p">]){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">y</span><span class="p">){</span><span class="nx">y</span><span class="o">=</span><span class="p">(</span><span class="nx">y</span><span class="o">===</span><span class="s2">&quot;float&quot;</span><span class="p">)</span><span class="o">?</span><span class="nx">y</span><span class="o">=</span><span class="s2">&quot;cssFloat&quot;</span><span class="o">:</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">_toCamel</span><span class="p">(</span><span class="nx">y</span><span class="p">);</span><span class="kd">var</span> <span class="nx">x</span><span class="o">=</span><span class="nx">G</span><span class="p">.</span><span class="nx">style</span><span class="p">[</span><span class="nx">y</span><span class="p">],</span><span class="nx">Y</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">x</span><span class="p">){</span><span class="nx">Y</span><span class="o">=</span><span class="nx">G</span><span class="p">[</span><span class="nx">e</span><span class="p">][</span><span class="nx">n</span><span class="p">][</span><span class="nx">w</span><span class="p">](</span><span class="nx">G</span><span class="p">,</span><span class="kc">null</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">Y</span><span class="p">){</span><span class="nx">x</span><span class="o">=</span><span class="nx">Y</span><span class="p">[</span><span class="nx">y</span><span class="p">];}}</span><span class="k">return</span> <span class="nx">x</span><span class="p">;};}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">W</span><span class="p">[</span><span class="nx">a</span><span class="p">]){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">y</span><span class="p">){</span><span class="kd">var</span> <span class="nx">x</span><span class="p">;</span><span class="k">switch</span><span class="p">(</span><span class="nx">y</span><span class="p">){</span><span class="k">case</span><span class="s2">&quot;opacity&quot;</span><span class="o">:</span><span class="nx">x</span><span class="o">=</span><span class="mi">100</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="nx">x</span><span class="o">=</span><span class="nx">G</span><span class="p">.</span><span class="nx">filters</span><span class="p">[</span><span class="s2">&quot;DXImageTransform.Microsoft.Alpha&quot;</span><span class="p">].</span><span class="nx">opacity</span><span class="p">;}</span><span class="k">catch</span><span class="p">(</span><span class="nx">z</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="nx">x</span><span class="o">=</span><span class="nx">G</span><span class="p">.</span><span class="nx">filters</span><span class="p">(</span><span class="s2">&quot;alpha&quot;</span><span class="p">).</span><span class="nx">opacity</span><span class="p">;}</span><span class="k">catch</span><span class="p">(</span><span class="nx">Y</span><span class="p">){}}</span><span class="k">return</span> <span class="nx">x</span><span class="o">/</span><span class="mi">100</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;float&quot;</span><span class="o">:</span><span class="nx">y</span><span class="o">=</span><span class="s2">&quot;styleFloat&quot;</span><span class="p">;</span><span class="k">default</span><span class="o">:</span><span class="nx">y</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">_toCamel</span><span class="p">(</span><span class="nx">y</span><span class="p">);</span><span class="nx">x</span><span class="o">=</span><span class="nx">G</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">?</span><span class="nx">G</span><span class="p">[</span><span class="nx">a</span><span class="p">][</span><span class="nx">y</span><span class="p">]</span><span class="o">:</span><span class="kc">null</span><span class="p">;</span><span class="k">return</span><span class="p">(</span><span class="nx">G</span><span class="p">.</span><span class="nx">style</span><span class="p">[</span><span class="nx">y</span><span class="p">]</span><span class="o">||</span><span class="nx">x</span><span class="p">);}};}}}(),</span><span class="nx">setStyle</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">Y</span><span class="p">,</span><span class="nx">x</span><span class="p">){</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">batch</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">_setStyle</span><span class="p">,{</span><span class="nx">prop</span><span class="o">:</span><span class="nx">Y</span><span class="p">,</span><span class="nx">val</span><span class="o">:</span><span class="nx">x</span><span class="p">});},</span><span class="nx">_setStyle</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nx">T</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">Y</span><span class="p">,</span><span class="nx">G</span><span class="p">){</span><span class="kd">var</span> <span class="nx">x</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">_toCamel</span><span class="p">(</span><span class="nx">G</span><span class="p">.</span><span class="nx">prop</span><span class="p">),</span><span class="nx">y</span><span class="o">=</span><span class="nx">G</span><span class="p">.</span><span class="nx">val</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">Y</span><span class="p">){</span><span class="k">switch</span><span class="p">(</span><span class="nx">x</span><span class="p">){</span><span class="k">case</span><span class="s2">&quot;opacity&quot;</span><span class="o">:</span><span class="k">if</span><span class="p">(</span><span class="nx">L</span><span class="p">.</span><span class="nx">isString</span><span class="p">(</span><span class="nx">Y</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">filter</span><span class="p">)){</span><span class="nx">Y</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">filter</span><span class="o">=</span><span class="s2">&quot;alpha(opacity=&quot;</span><span class="o">+</span><span class="nx">y</span><span class="o">*</span><span class="mi">100</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">Y</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">||!</span><span class="nx">Y</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">hasLayout</span><span class="p">){</span><span class="nx">Y</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">zoom</span><span class="o">=</span><span class="mi">1</span><span class="p">;}}</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;float&quot;</span><span class="o">:</span><span class="nx">x</span><span class="o">=</span><span class="s2">&quot;styleFloat&quot;</span><span class="p">;</span><span class="k">default</span><span class="o">:</span><span class="nx">Y</span><span class="p">.</span><span class="nx">style</span><span class="p">[</span><span class="nx">x</span><span class="p">]</span><span class="o">=</span><span class="nx">y</span><span class="p">;}}</span><span class="k">else</span><span class="p">{}};}</span><span class="k">else</span><span class="p">{</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">Y</span><span class="p">,</span><span class="nx">G</span><span class="p">){</span><span class="kd">var</span> <span class="nx">x</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">_toCamel</span><span class="p">(</span><span class="nx">G</span><span class="p">.</span><span class="nx">prop</span><span class="p">),</span><span class="nx">y</span><span class="o">=</span><span class="nx">G</span><span class="p">.</span><span class="nx">val</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">Y</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="o">==</span><span class="s2">&quot;float&quot;</span><span class="p">){</span><span class="nx">x</span><span class="o">=</span><span class="s2">&quot;cssFloat&quot;</span><span class="p">;}</span><span class="nx">Y</span><span class="p">.</span><span class="nx">style</span><span class="p">[</span><span class="nx">x</span><span class="p">]</span><span class="o">=</span><span class="nx">y</span><span class="p">;}</span><span class="k">else</span><span class="p">{}};}}(),</span><span class="nx">getXY</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">G</span><span class="p">){</span><span class="k">return</span> <span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">batch</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">_getXY</span><span class="p">);},</span><span class="nx">_canPosition</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">G</span><span class="p">){</span><span class="k">return</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">_getStyle</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="s2">&quot;display&quot;</span><span class="p">)</span><span class="o">!==</span><span class="s2">&quot;none&quot;</span><span class="o">&amp;&amp;</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">_inDoc</span><span class="p">(</span><span class="nx">G</span><span class="p">));},</span><span class="nx">_getXY</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nx">K</span><span class="p">[</span><span class="nx">v</span><span class="p">][</span><span class="nx">Q</span><span class="p">]){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">y</span><span class="p">){</span><span class="kd">var</span> <span class="nx">z</span><span class="p">,</span><span class="nx">Y</span><span class="p">,</span><span class="nx">AA</span><span class="p">,</span><span class="nx">AF</span><span class="p">,</span><span class="nx">AE</span><span class="p">,</span><span class="nx">AD</span><span class="p">,</span><span class="nx">AC</span><span class="p">,</span><span class="nx">G</span><span class="p">,</span><span class="nx">x</span><span class="p">,</span><span class="nx">AB</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">,</span><span class="nx">AG</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">_canPosition</span><span class="p">(</span><span class="nx">y</span><span class="p">)){</span><span class="nx">AA</span><span class="o">=</span><span class="nx">y</span><span class="p">[</span><span class="nx">Q</span><span class="p">]();</span><span class="nx">AF</span><span class="o">=</span><span class="nx">y</span><span class="p">[</span><span class="nx">e</span><span class="p">];</span><span class="nx">z</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">getDocumentScrollLeft</span><span class="p">(</span><span class="nx">AF</span><span class="p">);</span><span class="nx">Y</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">getDocumentScrollTop</span><span class="p">(</span><span class="nx">AF</span><span class="p">);</span><span class="nx">AG</span><span class="o">=</span><span class="p">[</span><span class="nx">AB</span><span class="p">(</span><span class="nx">AA</span><span class="p">[</span><span class="nx">j</span><span class="p">]),</span><span class="nx">AB</span><span class="p">(</span><span class="nx">AA</span><span class="p">[</span><span class="nx">o</span><span class="p">])];</span><span class="k">if</span><span class="p">(</span><span class="nx">T</span><span class="o">&amp;&amp;</span><span class="nx">m</span><span class="p">.</span><span class="nx">ie</span><span class="o">&lt;</span><span class="mi">8</span><span class="p">){</span><span class="nx">AE</span><span class="o">=</span><span class="mi">2</span><span class="p">;</span><span class="nx">AD</span><span class="o">=</span><span class="mi">2</span><span class="p">;</span><span class="nx">AC</span><span class="o">=</span><span class="nx">AF</span><span class="p">[</span><span class="nx">t</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">ie</span><span class="o">===</span><span class="mi">6</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">AC</span><span class="o">!==</span><span class="nx">c</span><span class="p">){</span><span class="nx">AE</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">AD</span><span class="o">=</span><span class="mi">0</span><span class="p">;}}</span><span class="k">if</span><span class="p">((</span><span class="nx">AC</span><span class="o">===</span><span class="nx">c</span><span class="p">)){</span><span class="nx">G</span><span class="o">=</span><span class="nx">S</span><span class="p">(</span><span class="nx">AF</span><span class="p">[</span><span class="nx">v</span><span class="p">],</span><span class="nx">q</span><span class="p">);</span><span class="nx">x</span><span class="o">=</span><span class="nx">S</span><span class="p">(</span><span class="nx">AF</span><span class="p">[</span><span class="nx">v</span><span class="p">],</span><span class="nx">R</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">G</span><span class="o">!==</span><span class="nx">r</span><span class="p">){</span><span class="nx">AE</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="mi">10</span><span class="p">);}</span><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="o">!==</span><span class="nx">r</span><span class="p">){</span><span class="nx">AD</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span><span class="mi">10</span><span class="p">);}}</span><span class="nx">AG</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">-=</span><span class="nx">AE</span><span class="p">;</span><span class="nx">AG</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">-=</span><span class="nx">AD</span><span class="p">;}</span><span class="k">if</span><span class="p">((</span><span class="nx">Y</span><span class="o">||</span><span class="nx">z</span><span class="p">)){</span><span class="nx">AG</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+=</span><span class="nx">z</span><span class="p">;</span><span class="nx">AG</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+=</span><span class="nx">Y</span><span class="p">;}</span><span class="nx">AG</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">AB</span><span class="p">(</span><span class="nx">AG</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span><span class="nx">AG</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">AB</span><span class="p">(</span><span class="nx">AG</span><span class="p">[</span><span class="mi">1</span><span class="p">]);}</span><span class="k">else</span><span class="p">{}</span><span class="k">return</span> <span class="nx">AG</span><span class="p">;};}</span><span class="k">else</span><span class="p">{</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">y</span><span class="p">){</span><span class="kd">var</span> <span class="nx">x</span><span class="p">,</span><span class="nx">Y</span><span class="p">,</span><span class="nx">AA</span><span class="p">,</span><span class="nx">AB</span><span class="p">,</span><span class="nx">AC</span><span class="p">,</span><span class="nx">z</span><span class="o">=</span><span class="kc">false</span><span class="p">,</span><span class="nx">G</span><span class="o">=</span><span class="nx">y</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">_canPosition</span><span class="p">(</span><span class="nx">y</span><span class="p">)){</span><span class="nx">z</span><span class="o">=</span><span class="p">[</span><span class="nx">y</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="nx">y</span><span class="p">[</span><span class="nx">P</span><span class="p">]];</span><span class="nx">x</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">getDocumentScrollLeft</span><span class="p">(</span><span class="nx">y</span><span class="p">[</span><span class="nx">e</span><span class="p">]);</span><span class="nx">Y</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">getDocumentScrollTop</span><span class="p">(</span><span class="nx">y</span><span class="p">[</span><span class="nx">e</span><span class="p">]);</span><span class="nx">AC</span><span class="o">=</span><span class="p">((</span><span class="nx">H</span><span class="o">||</span><span class="nx">m</span><span class="p">.</span><span class="nx">webkit</span><span class="o">&gt;</span><span class="mi">519</span><span class="p">)</span><span class="o">?</span><span class="kc">true</span><span class="o">:</span><span class="kc">false</span><span class="p">);</span><span class="k">while</span><span class="p">((</span><span class="nx">G</span><span class="o">=</span><span class="nx">G</span><span class="p">[</span><span class="nx">u</span><span class="p">])){</span><span class="nx">z</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+=</span><span class="nx">G</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="nx">z</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+=</span><span class="nx">G</span><span class="p">[</span><span class="nx">P</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">AC</span><span class="p">){</span><span class="nx">z</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">_calcBorders</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">z</span><span class="p">);}}</span><span class="k">if</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">_getStyle</span><span class="p">(</span><span class="nx">y</span><span class="p">,</span><span class="nx">p</span><span class="p">)</span><span class="o">!==</span><span class="nx">f</span><span class="p">){</span><span class="nx">G</span><span class="o">=</span><span class="nx">y</span><span class="p">;</span><span class="k">while</span><span class="p">((</span><span class="nx">G</span><span class="o">=</span><span class="nx">G</span><span class="p">[</span><span class="nx">Z</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="nx">G</span><span class="p">[</span><span class="nx">C</span><span class="p">]){</span><span class="nx">AA</span><span class="o">=</span><span class="nx">G</span><span class="p">[</span><span class="nx">i</span><span class="p">];</span><span class="nx">AB</span><span class="o">=</span><span class="nx">G</span><span class="p">[</span><span class="nx">O</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">H</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">_getStyle</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="s2">&quot;overflow&quot;</span><span class="p">)</span><span class="o">!==</span><span class="s2">&quot;visible&quot;</span><span class="p">)){</span><span class="nx">z</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">_calcBorders</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">z</span><span class="p">);}</span><span class="k">if</span><span class="p">(</span><span class="nx">AA</span><span class="o">||</span><span class="nx">AB</span><span class="p">){</span><span class="nx">z</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">-=</span><span class="nx">AB</span><span class="p">;</span><span class="nx">z</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">-=</span><span class="nx">AA</span><span class="p">;}}</span><span class="nx">z</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+=</span><span class="nx">x</span><span class="p">;</span><span class="nx">z</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+=</span><span class="nx">Y</span><span class="p">;}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">D</span><span class="p">){</span><span class="nx">z</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">-=</span><span class="nx">x</span><span class="p">;</span><span class="nx">z</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">-=</span><span class="nx">Y</span><span class="p">;}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">I</span><span class="o">||</span><span class="nx">H</span><span class="p">){</span><span class="nx">z</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+=</span><span class="nx">x</span><span class="p">;</span><span class="nx">z</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+=</span><span class="nx">Y</span><span class="p">;}}}</span><span class="nx">z</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">z</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span><span class="nx">z</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">z</span><span class="p">[</span><span class="mi">1</span><span class="p">]);}</span><span class="k">else</span><span class="p">{}</span><span class="k">return</span> <span class="nx">z</span><span class="p">;};}}(),</span><span class="nx">getX</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">G</span><span class="p">){</span><span class="kd">var</span> <span class="nx">Y</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">x</span><span class="p">){</span><span class="k">return</span> <span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">getXY</span><span class="p">(</span><span class="nx">x</span><span class="p">)[</span><span class="mi">0</span><span class="p">];};</span><span class="k">return</span> <span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">batch</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">Y</span><span class="p">,</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">,</span><span class="kc">true</span><span class="p">);},</span><span class="nx">getY</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">G</span><span class="p">){</span><span class="kd">var</span> <span class="nx">Y</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">x</span><span class="p">){</span><span class="k">return</span> <span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">getXY</span><span class="p">(</span><span class="nx">x</span><span class="p">)[</span><span class="mi">1</span><span class="p">];};</span><span class="k">return</span> <span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">batch</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">Y</span><span class="p">,</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">,</span><span class="kc">true</span><span class="p">);},</span><span class="nx">setXY</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">x</span><span class="p">,</span><span class="nx">Y</span><span class="p">){</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">batch</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">_setXY</span><span class="p">,{</span><span class="nx">pos</span><span class="o">:</span><span class="nx">x</span><span class="p">,</span><span class="nx">noRetry</span><span class="o">:</span><span class="nx">Y</span><span class="p">});},</span><span class="nx">_setXY</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">z</span><span class="p">){</span><span class="kd">var</span> <span class="nx">AA</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">_getStyle</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">p</span><span class="p">),</span><span class="nx">y</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">setStyle</span><span class="p">,</span><span class="nx">AD</span><span class="o">=</span><span class="nx">z</span><span class="p">.</span><span class="nx">pos</span><span class="p">,</span><span class="nx">Y</span><span class="o">=</span><span class="nx">z</span><span class="p">.</span><span class="nx">noRetry</span><span class="p">,</span><span class="nx">AB</span><span class="o">=</span><span class="p">[</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">getComputedStyle</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">j</span><span class="p">),</span><span class="mi">10</span><span class="p">),</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">getComputedStyle</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">o</span><span class="p">),</span><span class="mi">10</span><span class="p">)],</span><span class="nx">AC</span><span class="p">,</span><span class="nx">x</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">AA</span><span class="o">==</span><span class="s2">&quot;static&quot;</span><span class="p">){</span><span class="nx">AA</span><span class="o">=</span><span class="nx">V</span><span class="p">;</span><span class="nx">y</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">p</span><span class="p">,</span><span class="nx">AA</span><span class="p">);}</span><span class="nx">AC</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">_getXY</span><span class="p">(</span><span class="nx">G</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">AD</span><span class="o">||</span><span class="nx">AC</span><span class="o">===</span><span class="kc">false</span><span class="p">){</span><span class="k">return</span> <span class="kc">false</span><span class="p">;}</span><span class="k">if</span><span class="p">(</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">AB</span><span class="p">[</span><span class="mi">0</span><span class="p">])){</span><span class="nx">AB</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="p">(</span><span class="nx">AA</span><span class="o">==</span><span class="nx">V</span><span class="p">)</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nx">G</span><span class="p">[</span><span class="nx">b</span><span class="p">];}</span><span class="k">if</span><span class="p">(</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">AB</span><span class="p">[</span><span class="mi">1</span><span class="p">])){</span><span class="nx">AB</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="p">(</span><span class="nx">AA</span><span class="o">==</span><span class="nx">V</span><span class="p">)</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nx">G</span><span class="p">[</span><span class="nx">P</span><span class="p">];}</span><span class="k">if</span><span class="p">(</span><span class="nx">AD</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">!==</span><span class="kc">null</span><span class="p">){</span><span class="nx">y</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">AD</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">-</span><span class="nx">AC</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="nx">AB</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">);}</span><span class="k">if</span><span class="p">(</span><span class="nx">AD</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">!==</span><span class="kc">null</span><span class="p">){</span><span class="nx">y</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="nx">AD</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">-</span><span class="nx">AC</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="nx">AB</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">);}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">Y</span><span class="p">){</span><span class="nx">x</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">_getXY</span><span class="p">(</span><span class="nx">G</span><span class="p">);</span><span class="k">if</span><span class="p">((</span><span class="nx">AD</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">!==</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="nx">x</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">!=</span><span class="nx">AD</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span><span class="o">||</span><span class="p">(</span><span class="nx">AD</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">!==</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="nx">x</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">!=</span><span class="nx">AD</span><span class="p">[</span><span class="mi">1</span><span class="p">])){</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">_setXY</span><span class="p">(</span><span class="nx">G</span><span class="p">,{</span><span class="nx">pos</span><span class="o">:</span><span class="nx">AD</span><span class="p">,</span><span class="nx">noRetry</span><span class="o">:</span><span class="kc">true</span><span class="p">});}}},</span><span class="nx">setX</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">Y</span><span class="p">,</span><span class="nx">G</span><span class="p">){</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">setXY</span><span class="p">(</span><span class="nx">Y</span><span class="p">,[</span><span class="nx">G</span><span class="p">,</span><span class="kc">null</span><span class="p">]);},</span><span class="nx">setY</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">Y</span><span class="p">){</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">setXY</span><span class="p">(</span><span class="nx">G</span><span class="p">,[</span><span class="kc">null</span><span class="p">,</span><span class="nx">Y</span><span class="p">]);},</span><span class="nx">getRegion</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">G</span><span class="p">){</span><span class="kd">var</span> <span class="nx">Y</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">x</span><span class="p">){</span><span class="kd">var</span> <span class="nx">y</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">_canPosition</span><span class="p">(</span><span class="nx">x</span><span class="p">)){</span><span class="nx">y</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">Region</span><span class="p">.</span><span class="nx">getRegion</span><span class="p">(</span><span class="nx">x</span><span class="p">);}</span><span class="k">else</span><span class="p">{}</span><span class="k">return</span> <span class="nx">y</span><span class="p">;};</span><span class="k">return</span> <span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">batch</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">Y</span><span class="p">,</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">,</span><span class="kc">true</span><span class="p">);},</span><span class="nx">getClientWidth</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">getViewportWidth</span><span class="p">();},</span><span class="nx">getClientHeight</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">getViewportHeight</span><span class="p">();},</span><span class="nx">getElementsByClassName</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">AB</span><span class="p">,</span><span class="nx">AF</span><span class="p">,</span><span class="nx">AC</span><span class="p">,</span><span class="nx">AE</span><span class="p">,</span><span class="nx">x</span><span class="p">,</span><span class="nx">AD</span><span class="p">){</span><span class="nx">AF</span><span class="o">=</span><span class="nx">AF</span><span class="o">||</span><span class="s2">&quot;*&quot;</span><span class="p">;</span><span class="nx">AC</span><span class="o">=</span><span class="p">(</span><span class="nx">AC</span><span class="p">)</span><span class="o">?</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">AC</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="o">||</span><span class="nx">K</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">AC</span><span class="p">){</span><span class="k">return</span><span class="p">[];}</span><span class="kd">var</span> <span class="nx">Y</span><span class="o">=</span><span class="p">[],</span><span class="nx">G</span><span class="o">=</span><span class="nx">AC</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="nx">AF</span><span class="p">),</span><span class="nx">z</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">hasClass</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">y</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">AA</span><span class="o">=</span><span class="nx">G</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">y</span><span class="o">&lt;</span><span class="nx">AA</span><span class="p">;</span><span class="o">++</span><span class="nx">y</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">z</span><span class="p">(</span><span class="nx">G</span><span class="p">[</span><span class="nx">y</span><span class="p">],</span><span class="nx">AB</span><span class="p">)){</span><span class="nx">Y</span><span class="p">[</span><span class="nx">Y</span><span class="p">.</span><span class="nx">length</span><span class="p">]</span><span class="o">=</span><span class="nx">G</span><span class="p">[</span><span class="nx">y</span><span class="p">];}}</span><span class="k">if</span><span class="p">(</span><span class="nx">AE</span><span class="p">){</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">batch</span><span class="p">(</span><span class="nx">Y</span><span class="p">,</span><span class="nx">AE</span><span class="p">,</span><span class="nx">x</span><span class="p">,</span><span class="nx">AD</span><span class="p">);}</span><span class="k">return</span> <span class="nx">Y</span><span class="p">;},</span><span class="nx">hasClass</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">Y</span><span class="p">,</span><span class="nx">G</span><span class="p">){</span><span class="k">return</span> <span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">batch</span><span class="p">(</span><span class="nx">Y</span><span class="p">,</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">_hasClass</span><span class="p">,</span><span class="nx">G</span><span class="p">);},</span><span class="nx">_hasClass</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span><span class="nx">Y</span><span class="p">){</span><span class="kd">var</span> <span class="nx">G</span><span class="o">=</span><span class="kc">false</span><span class="p">,</span><span class="nx">y</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="o">&amp;&amp;</span><span class="nx">Y</span><span class="p">){</span><span class="nx">y</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">_getAttribute</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span><span class="nx">F</span><span class="p">)</span><span class="o">||</span><span class="nx">J</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">Y</span><span class="p">.</span><span class="nx">exec</span><span class="p">){</span><span class="nx">G</span><span class="o">=</span><span class="nx">Y</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">y</span><span class="p">);}</span><span class="k">else</span><span class="p">{</span><span class="nx">G</span><span class="o">=</span><span class="nx">Y</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">B</span><span class="o">+</span><span class="nx">y</span><span class="o">+</span><span class="nx">B</span><span class="p">).</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">B</span><span class="o">+</span><span class="nx">Y</span><span class="o">+</span><span class="nx">B</span><span class="p">)</span><span class="o">&gt;-</span><span class="mi">1</span><span class="p">;}}</span><span class="k">else</span><span class="p">{}</span><span class="k">return</span> <span class="nx">G</span><span class="p">;},</span><span class="nx">addClass</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">Y</span><span class="p">,</span><span class="nx">G</span><span class="p">){</span><span class="k">return</span> <span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">batch</span><span class="p">(</span><span class="nx">Y</span><span class="p">,</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">_addClass</span><span class="p">,</span><span class="nx">G</span><span class="p">);},</span><span class="nx">_addClass</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span><span class="nx">Y</span><span class="p">){</span><span class="kd">var</span> <span class="nx">G</span><span class="o">=</span><span class="kc">false</span><span class="p">,</span><span class="nx">y</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="o">&amp;&amp;</span><span class="nx">Y</span><span class="p">){</span><span class="nx">y</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">_getAttribute</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span><span class="nx">F</span><span class="p">)</span><span class="o">||</span><span class="nx">J</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">_hasClass</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span><span class="nx">Y</span><span class="p">)){</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span><span class="nx">F</span><span class="p">,</span><span class="nx">A</span><span class="p">(</span><span class="nx">y</span><span class="o">+</span><span class="nx">B</span><span class="o">+</span><span class="nx">Y</span><span class="p">));</span><span class="nx">G</span><span class="o">=</span><span class="kc">true</span><span class="p">;}}</span><span class="k">else</span><span class="p">{}</span><span class="k">return</span> <span class="nx">G</span><span class="p">;},</span><span class="nx">removeClass</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">Y</span><span class="p">,</span><span class="nx">G</span><span class="p">){</span><span class="k">return</span> <span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">batch</span><span class="p">(</span><span class="nx">Y</span><span class="p">,</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">_removeClass</span><span class="p">,</span><span class="nx">G</span><span class="p">);},</span><span class="nx">_removeClass</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">y</span><span class="p">,</span><span class="nx">x</span><span class="p">){</span><span class="kd">var</span> <span class="nx">Y</span><span class="o">=</span><span class="kc">false</span><span class="p">,</span><span class="nx">AA</span><span class="p">,</span><span class="nx">z</span><span class="p">,</span><span class="nx">G</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">y</span><span class="o">&amp;&amp;</span><span class="nx">x</span><span class="p">){</span><span class="nx">AA</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">_getAttribute</span><span class="p">(</span><span class="nx">y</span><span class="p">,</span><span class="nx">F</span><span class="p">)</span><span class="o">||</span><span class="nx">J</span><span class="p">;</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="nx">y</span><span class="p">,</span><span class="nx">F</span><span class="p">,</span><span class="nx">AA</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">_getClassRegex</span><span class="p">(</span><span class="nx">x</span><span class="p">),</span><span class="nx">J</span><span class="p">));</span><span class="nx">z</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">_getAttribute</span><span class="p">(</span><span class="nx">y</span><span class="p">,</span><span class="nx">F</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">AA</span><span class="o">!==</span><span class="nx">z</span><span class="p">){</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="nx">y</span><span class="p">,</span><span class="nx">F</span><span class="p">,</span><span class="nx">A</span><span class="p">(</span><span class="nx">z</span><span class="p">));</span><span class="nx">Y</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">_getAttribute</span><span class="p">(</span><span class="nx">y</span><span class="p">,</span><span class="nx">F</span><span class="p">)</span><span class="o">===</span><span class="s2">&quot;&quot;</span><span class="p">){</span><span class="nx">G</span><span class="o">=</span><span class="p">(</span><span class="nx">y</span><span class="p">.</span><span class="nx">hasAttribute</span><span class="o">&amp;&amp;</span><span class="nx">y</span><span class="p">.</span><span class="nx">hasAttribute</span><span class="p">(</span><span class="nx">g</span><span class="p">))</span><span class="o">?</span><span class="nx">g</span><span class="o">:</span><span class="nx">F</span><span class="p">;</span>
<span class="nx">y</span><span class="p">.</span><span class="nx">removeAttribute</span><span class="p">(</span><span class="nx">G</span><span class="p">);}}}</span><span class="k">else</span><span class="p">{}</span><span class="k">return</span> <span class="nx">Y</span><span class="p">;},</span><span class="nx">replaceClass</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span><span class="nx">Y</span><span class="p">,</span><span class="nx">G</span><span class="p">){</span><span class="k">return</span> <span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">batch</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">_replaceClass</span><span class="p">,{</span><span class="nx">from</span><span class="o">:</span><span class="nx">Y</span><span class="p">,</span><span class="nx">to</span><span class="o">:</span><span class="nx">G</span><span class="p">});},</span><span class="nx">_replaceClass</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">y</span><span class="p">,</span><span class="nx">x</span><span class="p">){</span><span class="kd">var</span> <span class="nx">Y</span><span class="p">,</span><span class="nx">AB</span><span class="p">,</span><span class="nx">AA</span><span class="p">,</span><span class="nx">G</span><span class="o">=</span><span class="kc">false</span><span class="p">,</span><span class="nx">z</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">y</span><span class="o">&amp;&amp;</span><span class="nx">x</span><span class="p">){</span><span class="nx">AB</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">from</span><span class="p">;</span><span class="nx">AA</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">to</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">AA</span><span class="p">){</span><span class="nx">G</span><span class="o">=</span><span class="kc">false</span><span class="p">;}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">AB</span><span class="p">){</span><span class="nx">G</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">_addClass</span><span class="p">(</span><span class="nx">y</span><span class="p">,</span><span class="nx">x</span><span class="p">.</span><span class="nx">to</span><span class="p">);}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">AB</span><span class="o">!==</span><span class="nx">AA</span><span class="p">){</span><span class="nx">z</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">_getAttribute</span><span class="p">(</span><span class="nx">y</span><span class="p">,</span><span class="nx">F</span><span class="p">)</span><span class="o">||</span><span class="nx">J</span><span class="p">;</span><span class="nx">Y</span><span class="o">=</span><span class="p">(</span><span class="nx">B</span><span class="o">+</span><span class="nx">z</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">_getClassRegex</span><span class="p">(</span><span class="nx">AB</span><span class="p">),</span><span class="nx">B</span><span class="o">+</span><span class="nx">AA</span><span class="p">)).</span><span class="nx">split</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">_getClassRegex</span><span class="p">(</span><span class="nx">AA</span><span class="p">));</span><span class="nx">Y</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">B</span><span class="o">+</span><span class="nx">AA</span><span class="p">);</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="nx">y</span><span class="p">,</span><span class="nx">F</span><span class="p">,</span><span class="nx">A</span><span class="p">(</span><span class="nx">Y</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="nx">J</span><span class="p">)));</span><span class="nx">G</span><span class="o">=</span><span class="kc">true</span><span class="p">;}}}}</span><span class="k">else</span><span class="p">{}</span><span class="k">return</span> <span class="nx">G</span><span class="p">;},</span><span class="nx">generateId</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">x</span><span class="p">){</span><span class="nx">x</span><span class="o">=</span><span class="nx">x</span><span class="o">||</span><span class="s2">&quot;yui-gen&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">Y</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">y</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">y</span><span class="o">&amp;&amp;</span><span class="nx">y</span><span class="p">.</span><span class="nx">id</span><span class="p">){</span><span class="k">return</span> <span class="nx">y</span><span class="p">.</span><span class="nx">id</span><span class="p">;}</span><span class="kd">var</span> <span class="nx">z</span><span class="o">=</span><span class="nx">x</span><span class="o">+</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">_id_counter</span><span class="o">++</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">y</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">y</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">y</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">getElementById</span><span class="p">(</span><span class="nx">z</span><span class="p">)){</span><span class="k">return</span> <span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">generateId</span><span class="p">(</span><span class="nx">y</span><span class="p">,</span><span class="nx">z</span><span class="o">+</span><span class="nx">x</span><span class="p">);}</span><span class="nx">y</span><span class="p">.</span><span class="nx">id</span><span class="o">=</span><span class="nx">z</span><span class="p">;}</span><span class="k">return</span> <span class="nx">z</span><span class="p">;};</span><span class="k">return</span> <span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">batch</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">Y</span><span class="p">,</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">,</span><span class="kc">true</span><span class="p">)</span><span class="o">||</span><span class="nx">Y</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">,</span><span class="nx">arguments</span><span class="p">);},</span><span class="nx">isAncestor</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">Y</span><span class="p">,</span><span class="nx">x</span><span class="p">){</span><span class="nx">Y</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">Y</span><span class="p">);</span><span class="nx">x</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">x</span><span class="p">);</span><span class="kd">var</span> <span class="nx">G</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">if</span><span class="p">((</span><span class="nx">Y</span><span class="o">&amp;&amp;</span><span class="nx">x</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">Y</span><span class="p">[</span><span class="nx">l</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">x</span><span class="p">[</span><span class="nx">l</span><span class="p">])){</span><span class="k">if</span><span class="p">(</span><span class="nx">Y</span><span class="p">.</span><span class="nx">contains</span><span class="o">&amp;&amp;</span><span class="nx">Y</span><span class="o">!==</span><span class="nx">x</span><span class="p">){</span><span class="nx">G</span><span class="o">=</span><span class="nx">Y</span><span class="p">.</span><span class="nx">contains</span><span class="p">(</span><span class="nx">x</span><span class="p">);}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">Y</span><span class="p">.</span><span class="nx">compareDocumentPosition</span><span class="p">){</span><span class="nx">G</span><span class="o">=!!</span><span class="p">(</span><span class="nx">Y</span><span class="p">.</span><span class="nx">compareDocumentPosition</span><span class="p">(</span><span class="nx">x</span><span class="p">)</span><span class="o">&amp;</span><span class="mi">16</span><span class="p">);}}}</span><span class="k">else</span><span class="p">{}</span><span class="k">return</span> <span class="nx">G</span><span class="p">;},</span><span class="nx">inDocument</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">Y</span><span class="p">){</span><span class="k">return</span> <span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">_inDoc</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">G</span><span class="p">),</span><span class="nx">Y</span><span class="p">);},</span><span class="nx">_inDoc</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">Y</span><span class="p">,</span><span class="nx">x</span><span class="p">){</span><span class="kd">var</span> <span class="nx">G</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">Y</span><span class="o">&amp;&amp;</span><span class="nx">Y</span><span class="p">[</span><span class="nx">C</span><span class="p">]){</span><span class="nx">x</span><span class="o">=</span><span class="nx">x</span><span class="o">||</span><span class="nx">Y</span><span class="p">[</span><span class="nx">e</span><span class="p">];</span><span class="nx">G</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">isAncestor</span><span class="p">(</span><span class="nx">x</span><span class="p">[</span><span class="nx">v</span><span class="p">],</span><span class="nx">Y</span><span class="p">);}</span><span class="k">else</span><span class="p">{}</span><span class="k">return</span> <span class="nx">G</span><span class="p">;},</span><span class="nx">getElementsBy</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">Y</span><span class="p">,</span><span class="nx">AF</span><span class="p">,</span><span class="nx">AB</span><span class="p">,</span><span class="nx">AD</span><span class="p">,</span><span class="nx">y</span><span class="p">,</span><span class="nx">AC</span><span class="p">,</span><span class="nx">AE</span><span class="p">){</span><span class="nx">AF</span><span class="o">=</span><span class="nx">AF</span><span class="o">||</span><span class="s2">&quot;*&quot;</span><span class="p">;</span><span class="nx">AB</span><span class="o">=</span><span class="p">(</span><span class="nx">AB</span><span class="p">)</span><span class="o">?</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">AB</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="o">||</span><span class="nx">K</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">AB</span><span class="p">){</span><span class="k">return</span><span class="p">[];}</span><span class="kd">var</span> <span class="nx">x</span><span class="o">=</span><span class="p">[],</span><span class="nx">G</span><span class="o">=</span><span class="nx">AB</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="nx">AF</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">z</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">AA</span><span class="o">=</span><span class="nx">G</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">z</span><span class="o">&lt;</span><span class="nx">AA</span><span class="p">;</span><span class="o">++</span><span class="nx">z</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">Y</span><span class="p">(</span><span class="nx">G</span><span class="p">[</span><span class="nx">z</span><span class="p">])){</span><span class="k">if</span><span class="p">(</span><span class="nx">AE</span><span class="p">){</span><span class="nx">x</span><span class="o">=</span><span class="nx">G</span><span class="p">[</span><span class="nx">z</span><span class="p">];</span><span class="k">break</span><span class="p">;}</span><span class="k">else</span><span class="p">{</span><span class="nx">x</span><span class="p">[</span><span class="nx">x</span><span class="p">.</span><span class="nx">length</span><span class="p">]</span><span class="o">=</span><span class="nx">G</span><span class="p">[</span><span class="nx">z</span><span class="p">];}}}</span><span class="k">if</span><span class="p">(</span><span class="nx">AD</span><span class="p">){</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">batch</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span><span class="nx">AD</span><span class="p">,</span><span class="nx">y</span><span class="p">,</span><span class="nx">AC</span><span class="p">);}</span><span class="k">return</span> <span class="nx">x</span><span class="p">;},</span><span class="nx">getElementBy</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span><span class="nx">G</span><span class="p">,</span><span class="nx">Y</span><span class="p">){</span><span class="k">return</span> <span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">getElementsBy</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span><span class="nx">G</span><span class="p">,</span><span class="nx">Y</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="kc">true</span><span class="p">);},</span><span class="nx">batch</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span><span class="nx">AB</span><span class="p">,</span><span class="nx">AA</span><span class="p">,</span><span class="nx">z</span><span class="p">){</span><span class="kd">var</span> <span class="nx">y</span><span class="o">=</span><span class="p">[],</span><span class="nx">Y</span><span class="o">=</span><span class="p">(</span><span class="nx">z</span><span class="p">)</span><span class="o">?</span><span class="nx">AA</span><span class="o">:</span><span class="nb">window</span><span class="p">;</span><span class="nx">x</span><span class="o">=</span><span class="p">(</span><span class="nx">x</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">x</span><span class="p">[</span><span class="nx">C</span><span class="p">]</span><span class="o">||</span><span class="nx">x</span><span class="p">.</span><span class="nx">item</span><span class="p">))</span><span class="o">?</span><span class="nx">x</span><span class="o">:</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">x</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="o">&amp;&amp;</span><span class="nx">AB</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="p">[</span><span class="nx">C</span><span class="p">]</span><span class="o">||</span><span class="nx">x</span><span class="p">.</span><span class="nx">length</span><span class="o">===</span><span class="kc">undefined</span><span class="p">){</span><span class="k">return</span> <span class="nx">AB</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">Y</span><span class="p">,</span><span class="nx">x</span><span class="p">,</span><span class="nx">AA</span><span class="p">);}</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">G</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">G</span><span class="o">&lt;</span><span class="nx">x</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="o">++</span><span class="nx">G</span><span class="p">){</span><span class="nx">y</span><span class="p">[</span><span class="nx">y</span><span class="p">.</span><span class="nx">length</span><span class="p">]</span><span class="o">=</span><span class="nx">AB</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">Y</span><span class="p">,</span><span class="nx">x</span><span class="p">[</span><span class="nx">G</span><span class="p">],</span><span class="nx">AA</span><span class="p">);}}</span><span class="k">else</span><span class="p">{</span><span class="k">return</span> <span class="kc">false</span><span class="p">;}</span><span class="k">return</span> <span class="nx">y</span><span class="p">;},</span><span class="nx">getDocumentHeight</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">Y</span><span class="o">=</span><span class="p">(</span><span class="nx">K</span><span class="p">[</span><span class="nx">t</span><span class="p">]</span><span class="o">!=</span><span class="nx">M</span><span class="o">||</span><span class="nx">I</span><span class="p">)</span><span class="o">?</span><span class="nx">K</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">scrollHeight</span><span class="o">:</span><span class="nx">W</span><span class="p">.</span><span class="nx">scrollHeight</span><span class="p">,</span><span class="nx">G</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">Y</span><span class="p">,</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">getViewportHeight</span><span class="p">());</span><span class="k">return</span> <span class="nx">G</span><span class="p">;},</span><span class="nx">getDocumentWidth</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">Y</span><span class="o">=</span><span class="p">(</span><span class="nx">K</span><span class="p">[</span><span class="nx">t</span><span class="p">]</span><span class="o">!=</span><span class="nx">M</span><span class="o">||</span><span class="nx">I</span><span class="p">)</span><span class="o">?</span><span class="nx">K</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">scrollWidth</span><span class="o">:</span><span class="nx">W</span><span class="p">.</span><span class="nx">scrollWidth</span><span class="p">,</span><span class="nx">G</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">Y</span><span class="p">,</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">getViewportWidth</span><span class="p">());</span><span class="k">return</span> <span class="nx">G</span><span class="p">;},</span><span class="nx">getViewportHeight</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">G</span><span class="o">=</span><span class="nx">self</span><span class="p">.</span><span class="nx">innerHeight</span><span class="p">,</span><span class="nx">Y</span><span class="o">=</span><span class="nx">K</span><span class="p">[</span><span class="nx">t</span><span class="p">];</span><span class="k">if</span><span class="p">((</span><span class="nx">Y</span><span class="o">||</span><span class="nx">T</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">D</span><span class="p">){</span><span class="nx">G</span><span class="o">=</span><span class="p">(</span><span class="nx">Y</span><span class="o">==</span><span class="nx">M</span><span class="p">)</span><span class="o">?</span><span class="nx">W</span><span class="p">.</span><span class="nx">clientHeight</span><span class="o">:</span><span class="nx">K</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">clientHeight</span><span class="p">;}</span><span class="k">return</span> <span class="nx">G</span><span class="p">;},</span><span class="nx">getViewportWidth</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">G</span><span class="o">=</span><span class="nx">self</span><span class="p">.</span><span class="nx">innerWidth</span><span class="p">,</span><span class="nx">Y</span><span class="o">=</span><span class="nx">K</span><span class="p">[</span><span class="nx">t</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">Y</span><span class="o">||</span><span class="nx">T</span><span class="p">){</span><span class="nx">G</span><span class="o">=</span><span class="p">(</span><span class="nx">Y</span><span class="o">==</span><span class="nx">M</span><span class="p">)</span><span class="o">?</span><span class="nx">W</span><span class="p">.</span><span class="nx">clientWidth</span><span class="o">:</span><span class="nx">K</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">clientWidth</span><span class="p">;}</span><span class="k">return</span> <span class="nx">G</span><span class="p">;},</span><span class="nx">getAncestorBy</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">Y</span><span class="p">){</span><span class="k">while</span><span class="p">((</span><span class="nx">G</span><span class="o">=</span><span class="nx">G</span><span class="p">[</span><span class="nx">Z</span><span class="p">])){</span><span class="k">if</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">_testElement</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">Y</span><span class="p">)){</span><span class="k">return</span> <span class="nx">G</span><span class="p">;}}</span><span class="k">return</span> <span class="kc">null</span><span class="p">;},</span><span class="nx">getAncestorByClassName</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">Y</span><span class="p">,</span><span class="nx">G</span><span class="p">){</span><span class="nx">Y</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">Y</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">Y</span><span class="p">){</span><span class="k">return</span> <span class="kc">null</span><span class="p">;}</span><span class="kd">var</span> <span class="nx">x</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">y</span><span class="p">){</span><span class="k">return</span> <span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">hasClass</span><span class="p">(</span><span class="nx">y</span><span class="p">,</span><span class="nx">G</span><span class="p">);};</span><span class="k">return</span> <span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">getAncestorBy</span><span class="p">(</span><span class="nx">Y</span><span class="p">,</span><span class="nx">x</span><span class="p">);},</span><span class="nx">getAncestorByTagName</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">Y</span><span class="p">,</span><span class="nx">G</span><span class="p">){</span><span class="nx">Y</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">Y</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">Y</span><span class="p">){</span><span class="k">return</span> <span class="kc">null</span><span class="p">;}</span><span class="kd">var</span> <span class="nx">x</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">y</span><span class="p">){</span><span class="k">return</span> <span class="nx">y</span><span class="p">[</span><span class="nx">C</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">y</span><span class="p">[</span><span class="nx">C</span><span class="p">].</span><span class="nx">toUpperCase</span><span class="p">()</span><span class="o">==</span><span class="nx">G</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">();};</span><span class="k">return</span> <span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">getAncestorBy</span><span class="p">(</span><span class="nx">Y</span><span class="p">,</span><span class="nx">x</span><span class="p">);},</span><span class="nx">getPreviousSiblingBy</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">Y</span><span class="p">){</span><span class="k">while</span><span class="p">(</span><span class="nx">G</span><span class="p">){</span><span class="nx">G</span><span class="o">=</span><span class="nx">G</span><span class="p">.</span><span class="nx">previousSibling</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">_testElement</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">Y</span><span class="p">)){</span><span class="k">return</span> <span class="nx">G</span><span class="p">;}}</span><span class="k">return</span> <span class="kc">null</span><span class="p">;},</span><span class="nx">getPreviousSibling</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">G</span><span class="p">){</span><span class="nx">G</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">G</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">G</span><span class="p">){</span><span class="k">return</span> <span class="kc">null</span><span class="p">;}</span><span class="k">return</span> <span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">getPreviousSiblingBy</span><span class="p">(</span><span class="nx">G</span><span class="p">);},</span><span class="nx">getNextSiblingBy</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">Y</span><span class="p">){</span><span class="k">while</span><span class="p">(</span><span class="nx">G</span><span class="p">){</span><span class="nx">G</span><span class="o">=</span><span class="nx">G</span><span class="p">.</span><span class="nx">nextSibling</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">_testElement</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">Y</span><span class="p">)){</span><span class="k">return</span> <span class="nx">G</span><span class="p">;}}</span><span class="k">return</span> <span class="kc">null</span><span class="p">;},</span><span class="nx">getNextSibling</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">G</span><span class="p">){</span><span class="nx">G</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">G</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">G</span><span class="p">){</span><span class="k">return</span> <span class="kc">null</span><span class="p">;}</span><span class="k">return</span> <span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">getNextSiblingBy</span><span class="p">(</span><span class="nx">G</span><span class="p">);},</span><span class="nx">getFirstChildBy</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">x</span><span class="p">){</span><span class="kd">var</span> <span class="nx">Y</span><span class="o">=</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">_testElement</span><span class="p">(</span><span class="nx">G</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">,</span><span class="nx">x</span><span class="p">))</span><span class="o">?</span><span class="nx">G</span><span class="p">.</span><span class="nx">firstChild</span><span class="o">:</span><span class="kc">null</span><span class="p">;</span><span class="k">return</span> <span class="nx">Y</span><span class="o">||</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">getNextSiblingBy</span><span class="p">(</span><span class="nx">G</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">,</span><span class="nx">x</span><span class="p">);},</span><span class="nx">getFirstChild</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">Y</span><span class="p">){</span><span class="nx">G</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">G</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">G</span><span class="p">){</span><span class="k">return</span> <span class="kc">null</span><span class="p">;}</span><span class="k">return</span> <span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">getFirstChildBy</span><span class="p">(</span><span class="nx">G</span><span class="p">);},</span><span class="nx">getLastChildBy</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">x</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">G</span><span class="p">){</span><span class="k">return</span> <span class="kc">null</span><span class="p">;}</span><span class="kd">var</span> <span class="nx">Y</span><span class="o">=</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">_testElement</span><span class="p">(</span><span class="nx">G</span><span class="p">.</span><span class="nx">lastChild</span><span class="p">,</span><span class="nx">x</span><span class="p">))</span><span class="o">?</span><span class="nx">G</span><span class="p">.</span><span class="nx">lastChild</span><span class="o">:</span><span class="kc">null</span><span class="p">;</span><span class="k">return</span> <span class="nx">Y</span><span class="o">||</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">getPreviousSiblingBy</span><span class="p">(</span><span class="nx">G</span><span class="p">.</span><span class="nx">lastChild</span><span class="p">,</span><span class="nx">x</span><span class="p">);},</span><span class="nx">getLastChild</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">G</span><span class="p">){</span><span class="nx">G</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">G</span><span class="p">);</span><span class="k">return</span> <span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">getLastChildBy</span><span class="p">(</span><span class="nx">G</span><span class="p">);},</span><span class="nx">getChildrenBy</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">Y</span><span class="p">,</span><span class="nx">y</span><span class="p">){</span><span class="kd">var</span> <span class="nx">x</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">getFirstChildBy</span><span class="p">(</span><span class="nx">Y</span><span class="p">,</span><span class="nx">y</span><span class="p">),</span><span class="nx">G</span><span class="o">=</span><span class="nx">x</span><span class="o">?</span><span class="p">[</span><span class="nx">x</span><span class="p">]</span><span class="o">:</span><span class="p">[];</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">getNextSiblingBy</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">z</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">y</span><span class="o">||</span><span class="nx">y</span><span class="p">(</span><span class="nx">z</span><span class="p">)){</span><span class="nx">G</span><span class="p">[</span><span class="nx">G</span><span class="p">.</span><span class="nx">length</span><span class="p">]</span><span class="o">=</span><span class="nx">z</span><span class="p">;}</span><span class="k">return</span> <span class="kc">false</span><span class="p">;});</span><span class="k">return</span> <span class="nx">G</span><span class="p">;},</span><span class="nx">getChildren</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">G</span><span class="p">){</span><span class="nx">G</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">G</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">G</span><span class="p">){}</span><span class="k">return</span> <span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">getChildrenBy</span><span class="p">(</span><span class="nx">G</span><span class="p">);},</span><span class="nx">getDocumentScrollLeft</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">G</span><span class="p">){</span><span class="nx">G</span><span class="o">=</span><span class="nx">G</span><span class="o">||</span><span class="nx">K</span><span class="p">;</span><span class="k">return</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">G</span><span class="p">[</span><span class="nx">v</span><span class="p">].</span><span class="nx">scrollLeft</span><span class="p">,</span><span class="nx">G</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">scrollLeft</span><span class="p">);},</span><span class="nx">getDocumentScrollTop</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">G</span><span class="p">){</span><span class="nx">G</span><span class="o">=</span><span class="nx">G</span><span class="o">||</span><span class="nx">K</span><span class="p">;</span><span class="k">return</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">G</span><span class="p">[</span><span class="nx">v</span><span class="p">].</span><span class="nx">scrollTop</span><span class="p">,</span><span class="nx">G</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">scrollTop</span><span class="p">);},</span><span class="nx">insertBefore</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">Y</span><span class="p">,</span><span class="nx">G</span><span class="p">){</span><span class="nx">Y</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">Y</span><span class="p">);</span><span class="nx">G</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">G</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">Y</span><span class="o">||!</span><span class="nx">G</span><span class="o">||!</span><span class="nx">G</span><span class="p">[</span><span class="nx">Z</span><span class="p">]){</span><span class="k">return</span> <span class="kc">null</span><span class="p">;}</span><span class="k">return</span> <span class="nx">G</span><span class="p">[</span><span class="nx">Z</span><span class="p">].</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">Y</span><span class="p">,</span><span class="nx">G</span><span class="p">);},</span><span class="nx">insertAfter</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">Y</span><span class="p">,</span><span class="nx">G</span><span class="p">){</span><span class="nx">Y</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">Y</span><span class="p">);</span><span class="nx">G</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">G</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">Y</span><span class="o">||!</span><span class="nx">G</span><span class="o">||!</span><span class="nx">G</span><span class="p">[</span><span class="nx">Z</span><span class="p">]){</span><span class="k">return</span> <span class="kc">null</span><span class="p">;}</span><span class="k">if</span><span class="p">(</span><span class="nx">G</span><span class="p">.</span><span class="nx">nextSibling</span><span class="p">){</span><span class="k">return</span> <span class="nx">G</span><span class="p">[</span><span class="nx">Z</span><span class="p">].</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">Y</span><span class="p">,</span><span class="nx">G</span><span class="p">.</span><span class="nx">nextSibling</span><span class="p">);}</span><span class="k">else</span><span class="p">{</span><span class="k">return</span> <span class="nx">G</span><span class="p">[</span><span class="nx">Z</span><span class="p">].</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">Y</span><span class="p">);}},</span><span class="nx">getClientRegion</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">x</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">getDocumentScrollTop</span><span class="p">(),</span><span class="nx">Y</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">getDocumentScrollLeft</span><span class="p">(),</span><span class="nx">y</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">getViewportWidth</span><span class="p">()</span><span class="o">+</span><span class="nx">Y</span><span class="p">,</span><span class="nx">G</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">getViewportHeight</span><span class="p">()</span><span class="o">+</span><span class="nx">x</span><span class="p">;</span><span class="k">return</span> <span class="k">new</span> <span class="nx">E</span><span class="p">.</span><span class="nx">Region</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span><span class="nx">y</span><span class="p">,</span><span class="nx">G</span><span class="p">,</span><span class="nx">Y</span><span class="p">);},</span><span class="nx">setAttribute</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">Y</span><span class="p">,</span><span class="nx">G</span><span class="p">,</span><span class="nx">x</span><span class="p">){</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">batch</span><span class="p">(</span><span class="nx">Y</span><span class="p">,</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">_setAttribute</span><span class="p">,{</span><span class="nx">attr</span><span class="o">:</span><span class="nx">G</span><span class="p">,</span><span class="nx">val</span><span class="o">:</span><span class="nx">x</span><span class="p">});},</span><span class="nx">_setAttribute</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span><span class="nx">Y</span><span class="p">){</span><span class="kd">var</span> <span class="nx">G</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">_toCamel</span><span class="p">(</span><span class="nx">Y</span><span class="p">.</span><span class="nx">attr</span><span class="p">),</span><span class="nx">y</span><span class="o">=</span><span class="nx">Y</span><span class="p">.</span><span class="nx">val</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="o">&amp;&amp;</span><span class="nx">x</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">DOT_ATTRIBUTES</span><span class="p">[</span><span class="nx">G</span><span class="p">]){</span><span class="nx">x</span><span class="p">[</span><span class="nx">G</span><span class="p">]</span><span class="o">=</span><span class="nx">y</span><span class="p">;}</span><span class="k">else</span><span class="p">{</span><span class="nx">G</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">CUSTOM_ATTRIBUTES</span><span class="p">[</span><span class="nx">G</span><span class="p">]</span><span class="o">||</span><span class="nx">G</span><span class="p">;</span><span class="nx">x</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">y</span><span class="p">);}}</span><span class="k">else</span><span class="p">{}},</span><span class="nx">getAttribute</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">Y</span><span class="p">,</span><span class="nx">G</span><span class="p">){</span><span class="k">return</span> <span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">batch</span><span class="p">(</span><span class="nx">Y</span><span class="p">,</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">_getAttribute</span><span class="p">,</span><span class="nx">G</span><span class="p">);},</span><span class="nx">_getAttribute</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">Y</span><span class="p">,</span><span class="nx">G</span><span class="p">){</span><span class="kd">var</span> <span class="nx">x</span><span class="p">;</span><span class="nx">G</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">CUSTOM_ATTRIBUTES</span><span class="p">[</span><span class="nx">G</span><span class="p">]</span><span class="o">||</span><span class="nx">G</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">Y</span><span class="o">&amp;&amp;</span><span class="nx">Y</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">){</span><span class="nx">x</span><span class="o">=</span><span class="nx">Y</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="mi">2</span><span class="p">);}</span><span class="k">else</span><span class="p">{}</span><span class="k">return</span> <span class="nx">x</span><span class="p">;},</span><span class="nx">_toCamel</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">Y</span><span class="p">){</span><span class="kd">var</span> <span class="nx">x</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="kd">function</span> <span class="nx">G</span><span class="p">(</span><span class="nx">y</span><span class="p">,</span><span class="nx">z</span><span class="p">){</span><span class="k">return</span> <span class="nx">z</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">();}</span><span class="k">return</span> <span class="nx">x</span><span class="p">[</span><span class="nx">Y</span><span class="p">]</span><span class="o">||</span><span class="p">(</span><span class="nx">x</span><span class="p">[</span><span class="nx">Y</span><span class="p">]</span><span class="o">=</span><span class="nx">Y</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;-&quot;</span><span class="p">)</span><span class="o">===-</span><span class="mi">1</span><span class="o">?</span><span class="nx">Y</span><span class="o">:</span><span class="nx">Y</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/-([a-z])/gi</span><span class="p">,</span><span class="nx">G</span><span class="p">));},</span><span class="nx">_getClassRegex</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">Y</span><span class="p">){</span><span class="kd">var</span> <span class="nx">G</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">Y</span><span class="o">!==</span><span class="kc">undefined</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">Y</span><span class="p">.</span><span class="nx">exec</span><span class="p">){</span><span class="nx">G</span><span class="o">=</span><span class="nx">Y</span><span class="p">;}</span><span class="k">else</span><span class="p">{</span><span class="nx">G</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="nx">Y</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">G</span><span class="p">){</span><span class="nx">Y</span><span class="o">=</span><span class="nx">Y</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">_patterns</span><span class="p">.</span><span class="nx">CLASS_RE_TOKENS</span><span class="p">,</span><span class="s2">&quot;\\$1&quot;</span><span class="p">);</span><span class="nx">G</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="nx">Y</span><span class="p">]</span><span class="o">=</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="nx">s</span><span class="o">+</span><span class="nx">Y</span><span class="o">+</span><span class="nx">k</span><span class="p">,</span><span class="nx">U</span><span class="p">);}}}</span><span class="k">return</span> <span class="nx">G</span><span class="p">;},</span><span class="nx">_patterns</span><span class="o">:</span><span class="p">{</span><span class="nx">ROOT_TAG</span><span class="o">:</span><span class="sr">/^body|html$/i</span><span class="p">,</span><span class="nx">CLASS_RE_TOKENS</span><span class="o">:</span><span class="sr">/([\.\(\)\^\$\*\+\?\|\[\]\{\}\\])/g</span><span class="p">},</span><span class="nx">_testElement</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">Y</span><span class="p">){</span><span class="k">return</span> <span class="nx">G</span><span class="o">&amp;&amp;</span><span class="nx">G</span><span class="p">[</span><span class="nx">l</span><span class="p">]</span><span class="o">==</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="o">!</span><span class="nx">Y</span><span class="o">||</span><span class="nx">Y</span><span class="p">(</span><span class="nx">G</span><span class="p">));},</span><span class="nx">_calcBorders</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span><span class="nx">y</span><span class="p">){</span><span class="kd">var</span> <span class="nx">Y</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">[</span><span class="nx">w</span><span class="p">](</span><span class="nx">x</span><span class="p">,</span><span class="nx">R</span><span class="p">),</span><span class="mi">10</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">G</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">[</span><span class="nx">w</span><span class="p">](</span><span class="nx">x</span><span class="p">,</span><span class="nx">q</span><span class="p">),</span><span class="mi">10</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">H</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">N</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">x</span><span class="p">[</span><span class="nx">C</span><span class="p">])){</span><span class="nx">Y</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">G</span><span class="o">=</span><span class="mi">0</span><span class="p">;}}</span><span class="nx">y</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+=</span><span class="nx">G</span><span class="p">;</span><span class="nx">y</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+=</span><span class="nx">Y</span><span class="p">;</span><span class="k">return</span> <span class="nx">y</span><span class="p">;}};</span><span class="kd">var</span> <span class="nx">S</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">[</span><span class="nx">w</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">opera</span><span class="p">){</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">[</span><span class="nx">w</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">Y</span><span class="p">,</span><span class="nx">G</span><span class="p">){</span><span class="kd">var</span> <span class="nx">x</span><span class="o">=</span><span class="nx">S</span><span class="p">(</span><span class="nx">Y</span><span class="p">,</span><span class="nx">G</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">X</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">G</span><span class="p">)){</span><span class="nx">x</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">Color</span><span class="p">.</span><span class="nx">toRGB</span><span class="p">(</span><span class="nx">x</span><span class="p">);}</span><span class="k">return</span> <span class="nx">x</span><span class="p">;};}</span><span class="k">if</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">webkit</span><span class="p">){</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">[</span><span class="nx">w</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">Y</span><span class="p">,</span><span class="nx">G</span><span class="p">){</span><span class="kd">var</span> <span class="nx">x</span><span class="o">=</span><span class="nx">S</span><span class="p">(</span><span class="nx">Y</span><span class="p">,</span><span class="nx">G</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="o">===</span><span class="s2">&quot;rgba(0, 0, 0, 0)&quot;</span><span class="p">){</span><span class="nx">x</span><span class="o">=</span><span class="s2">&quot;transparent&quot;</span><span class="p">;}</span><span class="k">return</span> <span class="nx">x</span><span class="p">;};}</span><span class="k">if</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">ie</span><span class="o">&amp;&amp;</span><span class="nx">m</span><span class="p">.</span><span class="nx">ie</span><span class="o">&gt;=</span><span class="mi">8</span><span class="o">&amp;&amp;</span><span class="nx">K</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">.</span><span class="nx">hasAttribute</span><span class="p">){</span><span class="nx">E</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">DOT_ATTRIBUTES</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="kc">true</span><span class="p">;}})();</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Region</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">C</span><span class="p">,</span><span class="nx">D</span><span class="p">,</span><span class="nx">A</span><span class="p">,</span><span class="nx">B</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">top</span><span class="o">=</span><span class="nx">C</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="nx">C</span><span class="p">;</span><span class="k">this</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">C</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">right</span><span class="o">=</span><span class="nx">D</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">bottom</span><span class="o">=</span><span class="nx">A</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="nx">B</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">x</span><span class="o">=</span><span class="nx">B</span><span class="p">;</span><span class="k">this</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">B</span><span class="p">;</span>
<span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">right</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">left</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">bottom</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">top</span><span class="p">;};</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Region</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">contains</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">A</span><span class="p">){</span><span class="k">return</span><span class="p">(</span><span class="nx">A</span><span class="p">.</span><span class="nx">left</span><span class="o">&gt;=</span><span class="k">this</span><span class="p">.</span><span class="nx">left</span><span class="o">&amp;&amp;</span><span class="nx">A</span><span class="p">.</span><span class="nx">right</span><span class="o">&lt;=</span><span class="k">this</span><span class="p">.</span><span class="nx">right</span><span class="o">&amp;&amp;</span><span class="nx">A</span><span class="p">.</span><span class="nx">top</span><span class="o">&gt;=</span><span class="k">this</span><span class="p">.</span><span class="nx">top</span><span class="o">&amp;&amp;</span><span class="nx">A</span><span class="p">.</span><span class="nx">bottom</span><span class="o">&lt;=</span><span class="k">this</span><span class="p">.</span><span class="nx">bottom</span><span class="p">);};</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Region</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getArea</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">((</span><span class="k">this</span><span class="p">.</span><span class="nx">bottom</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">top</span><span class="p">)</span><span class="o">*</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">right</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">left</span><span class="p">));};</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Region</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">intersect</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">){</span><span class="kd">var</span> <span class="nx">C</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">top</span><span class="p">,</span><span class="nx">E</span><span class="p">.</span><span class="nx">top</span><span class="p">),</span><span class="nx">D</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">right</span><span class="p">,</span><span class="nx">E</span><span class="p">.</span><span class="nx">right</span><span class="p">),</span><span class="nx">A</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">bottom</span><span class="p">,</span><span class="nx">E</span><span class="p">.</span><span class="nx">bottom</span><span class="p">),</span><span class="nx">B</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">left</span><span class="p">,</span><span class="nx">E</span><span class="p">.</span><span class="nx">left</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">A</span><span class="o">&gt;=</span><span class="nx">C</span><span class="o">&amp;&amp;</span><span class="nx">D</span><span class="o">&gt;=</span><span class="nx">B</span><span class="p">){</span><span class="k">return</span> <span class="k">new</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Region</span><span class="p">(</span><span class="nx">C</span><span class="p">,</span><span class="nx">D</span><span class="p">,</span><span class="nx">A</span><span class="p">,</span><span class="nx">B</span><span class="p">);}</span><span class="k">else</span><span class="p">{</span><span class="k">return</span> <span class="kc">null</span><span class="p">;}};</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Region</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">union</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">){</span><span class="kd">var</span> <span class="nx">C</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">top</span><span class="p">,</span><span class="nx">E</span><span class="p">.</span><span class="nx">top</span><span class="p">),</span><span class="nx">D</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">right</span><span class="p">,</span><span class="nx">E</span><span class="p">.</span><span class="nx">right</span><span class="p">),</span><span class="nx">A</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">bottom</span><span class="p">,</span><span class="nx">E</span><span class="p">.</span><span class="nx">bottom</span><span class="p">),</span><span class="nx">B</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">left</span><span class="p">,</span><span class="nx">E</span><span class="p">.</span><span class="nx">left</span><span class="p">);</span><span class="k">return</span> <span class="k">new</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Region</span><span class="p">(</span><span class="nx">C</span><span class="p">,</span><span class="nx">D</span><span class="p">,</span><span class="nx">A</span><span class="p">,</span><span class="nx">B</span><span class="p">);};</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Region</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">(</span><span class="s2">&quot;Region {&quot;</span><span class="o">+</span><span class="s2">&quot;top: &quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">top</span><span class="o">+</span><span class="s2">&quot;, right: &quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">right</span><span class="o">+</span><span class="s2">&quot;, bottom: &quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">bottom</span><span class="o">+</span><span class="s2">&quot;, left: &quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">left</span><span class="o">+</span><span class="s2">&quot;, height: &quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="o">+</span><span class="s2">&quot;, width: &quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="o">+</span><span class="s2">&quot;}&quot;</span><span class="p">);};</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Region</span><span class="p">.</span><span class="nx">getRegion</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">D</span><span class="p">){</span><span class="kd">var</span> <span class="nx">F</span><span class="o">=</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">getXY</span><span class="p">(</span><span class="nx">D</span><span class="p">),</span><span class="nx">C</span><span class="o">=</span><span class="nx">F</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">E</span><span class="o">=</span><span class="nx">F</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="nx">D</span><span class="p">.</span><span class="nx">offsetWidth</span><span class="p">,</span><span class="nx">A</span><span class="o">=</span><span class="nx">F</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="nx">D</span><span class="p">.</span><span class="nx">offsetHeight</span><span class="p">,</span><span class="nx">B</span><span class="o">=</span><span class="nx">F</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">return</span> <span class="k">new</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Region</span><span class="p">(</span><span class="nx">C</span><span class="p">,</span><span class="nx">E</span><span class="p">,</span><span class="nx">A</span><span class="p">,</span><span class="nx">B</span><span class="p">);};</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Point</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">A</span><span class="p">,</span><span class="nx">B</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">A</span><span class="p">)){</span><span class="nx">B</span><span class="o">=</span><span class="nx">A</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="nx">A</span><span class="o">=</span><span class="nx">A</span><span class="p">[</span><span class="mi">0</span><span class="p">];}</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Point</span><span class="p">.</span><span class="nx">superclass</span><span class="p">.</span><span class="nx">constructor</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">B</span><span class="p">,</span><span class="nx">A</span><span class="p">,</span><span class="nx">B</span><span class="p">,</span><span class="nx">A</span><span class="p">);};</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Point</span><span class="p">,</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Region</span><span class="p">);(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">B</span><span class="o">=</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">,</span><span class="nx">A</span><span class="o">=</span><span class="s2">&quot;clientTop&quot;</span><span class="p">,</span><span class="nx">F</span><span class="o">=</span><span class="s2">&quot;clientLeft&quot;</span><span class="p">,</span><span class="nx">J</span><span class="o">=</span><span class="s2">&quot;parentNode&quot;</span><span class="p">,</span><span class="nx">K</span><span class="o">=</span><span class="s2">&quot;right&quot;</span><span class="p">,</span><span class="nx">W</span><span class="o">=</span><span class="s2">&quot;hasLayout&quot;</span><span class="p">,</span><span class="nx">I</span><span class="o">=</span><span class="s2">&quot;px&quot;</span><span class="p">,</span><span class="nx">U</span><span class="o">=</span><span class="s2">&quot;opacity&quot;</span><span class="p">,</span><span class="nx">L</span><span class="o">=</span><span class="s2">&quot;auto&quot;</span><span class="p">,</span><span class="nx">D</span><span class="o">=</span><span class="s2">&quot;borderLeftWidth&quot;</span><span class="p">,</span><span class="nx">G</span><span class="o">=</span><span class="s2">&quot;borderTopWidth&quot;</span><span class="p">,</span><span class="nx">P</span><span class="o">=</span><span class="s2">&quot;borderRightWidth&quot;</span><span class="p">,</span><span class="nx">V</span><span class="o">=</span><span class="s2">&quot;borderBottomWidth&quot;</span><span class="p">,</span><span class="nx">S</span><span class="o">=</span><span class="s2">&quot;visible&quot;</span><span class="p">,</span><span class="nx">Q</span><span class="o">=</span><span class="s2">&quot;transparent&quot;</span><span class="p">,</span><span class="nx">N</span><span class="o">=</span><span class="s2">&quot;height&quot;</span><span class="p">,</span><span class="nx">E</span><span class="o">=</span><span class="s2">&quot;width&quot;</span><span class="p">,</span><span class="nx">H</span><span class="o">=</span><span class="s2">&quot;style&quot;</span><span class="p">,</span><span class="nx">T</span><span class="o">=</span><span class="s2">&quot;currentStyle&quot;</span><span class="p">,</span><span class="nx">R</span><span class="o">=</span><span class="sr">/^width|height$/</span><span class="p">,</span><span class="nx">O</span><span class="o">=</span><span class="sr">/^(\d[.\d]*)+(em|ex|px|gd|rem|vw|vh|vm|ch|mm|cm|in|pt|pc|deg|rad|ms|s|hz|khz|%){1}?/i</span><span class="p">,</span><span class="nx">M</span><span class="o">=</span><span class="p">{</span><span class="nx">get</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">X</span><span class="p">,</span><span class="nx">Z</span><span class="p">){</span><span class="kd">var</span> <span class="nx">Y</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">X</span><span class="p">[</span><span class="nx">T</span><span class="p">][</span><span class="nx">Z</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">Z</span><span class="o">===</span><span class="nx">U</span><span class="p">){</span><span class="nx">Y</span><span class="o">=</span><span class="nx">B</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">getStyle</span><span class="p">(</span><span class="nx">X</span><span class="p">,</span><span class="nx">U</span><span class="p">);}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="o">||</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">indexOf</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">I</span><span class="p">)</span><span class="o">&gt;-</span><span class="mi">1</span><span class="p">)){</span><span class="nx">Y</span><span class="o">=</span><span class="nx">a</span><span class="p">;}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">B</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">IE_COMPUTED</span><span class="p">[</span><span class="nx">Z</span><span class="p">]){</span><span class="nx">Y</span><span class="o">=</span><span class="nx">B</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">IE_COMPUTED</span><span class="p">[</span><span class="nx">Z</span><span class="p">](</span><span class="nx">X</span><span class="p">,</span><span class="nx">Z</span><span class="p">);}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">O</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">)){</span><span class="nx">Y</span><span class="o">=</span><span class="nx">B</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">IE</span><span class="p">.</span><span class="nx">ComputedStyle</span><span class="p">.</span><span class="nx">getPixel</span><span class="p">(</span><span class="nx">X</span><span class="p">,</span><span class="nx">Z</span><span class="p">);}</span><span class="k">else</span><span class="p">{</span><span class="nx">Y</span><span class="o">=</span><span class="nx">a</span><span class="p">;}}}}</span><span class="k">return</span> <span class="nx">Y</span><span class="p">;},</span><span class="nx">getOffset</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">Z</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">Z</span><span class="p">[</span><span class="nx">T</span><span class="p">][</span><span class="nx">e</span><span class="p">],</span><span class="nx">X</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">0</span><span class="p">).</span><span class="nx">toUpperCase</span><span class="p">()</span><span class="o">+</span><span class="nx">e</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">1</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="s2">&quot;offset&quot;</span><span class="o">+</span><span class="nx">X</span><span class="p">,</span><span class="nx">Y</span><span class="o">=</span><span class="s2">&quot;pixel&quot;</span><span class="o">+</span><span class="nx">X</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">==</span><span class="nx">L</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="nx">Z</span><span class="p">[</span><span class="nx">c</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">===</span><span class="kc">undefined</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">;}</span><span class="nx">a</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">R</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">e</span><span class="p">)){</span><span class="nx">Z</span><span class="p">[</span><span class="nx">H</span><span class="p">][</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">Z</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">&gt;</span><span class="nx">d</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">d</span><span class="o">-</span><span class="p">(</span><span class="nx">Z</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">-</span><span class="nx">d</span><span class="p">);}</span><span class="nx">Z</span><span class="p">[</span><span class="nx">H</span><span class="p">][</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="nx">L</span><span class="p">;}}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">Z</span><span class="p">[</span><span class="nx">H</span><span class="p">][</span><span class="nx">Y</span><span class="p">]</span><span class="o">&amp;&amp;!</span><span class="nx">Z</span><span class="p">[</span><span class="nx">H</span><span class="p">][</span><span class="nx">e</span><span class="p">]){</span><span class="nx">Z</span><span class="p">[</span><span class="nx">H</span><span class="p">][</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">;}</span><span class="nx">a</span><span class="o">=</span><span class="nx">Z</span><span class="p">[</span><span class="nx">H</span><span class="p">][</span><span class="nx">Y</span><span class="p">];}</span><span class="k">return</span> <span class="nx">a</span><span class="o">+</span><span class="nx">I</span><span class="p">;},</span><span class="nx">getBorderWidth</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">X</span><span class="p">,</span><span class="nx">Z</span><span class="p">){</span><span class="kd">var</span> <span class="nx">Y</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">X</span><span class="p">[</span><span class="nx">T</span><span class="p">][</span><span class="nx">W</span><span class="p">]){</span><span class="nx">X</span><span class="p">[</span><span class="nx">H</span><span class="p">].</span><span class="nx">zoom</span><span class="o">=</span><span class="mi">1</span><span class="p">;}</span><span class="k">switch</span><span class="p">(</span><span class="nx">Z</span><span class="p">){</span><span class="k">case</span> <span class="nx">G</span><span class="o">:</span><span class="nx">Y</span><span class="o">=</span><span class="nx">X</span><span class="p">[</span><span class="nx">A</span><span class="p">];</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="nx">V</span><span class="o">:</span><span class="nx">Y</span><span class="o">=</span><span class="nx">X</span><span class="p">.</span><span class="nx">offsetHeight</span><span class="o">-</span><span class="nx">X</span><span class="p">.</span><span class="nx">clientHeight</span><span class="o">-</span><span class="nx">X</span><span class="p">[</span><span class="nx">A</span><span class="p">];</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="nx">D</span><span class="o">:</span><span class="nx">Y</span><span class="o">=</span><span class="nx">X</span><span class="p">[</span><span class="nx">F</span><span class="p">];</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="nx">P</span><span class="o">:</span><span class="nx">Y</span><span class="o">=</span><span class="nx">X</span><span class="p">.</span><span class="nx">offsetWidth</span><span class="o">-</span><span class="nx">X</span><span class="p">.</span><span class="nx">clientWidth</span><span class="o">-</span><span class="nx">X</span><span class="p">[</span><span class="nx">F</span><span class="p">];</span><span class="k">break</span><span class="p">;}</span><span class="k">return</span> <span class="nx">Y</span><span class="o">+</span><span class="nx">I</span><span class="p">;},</span><span class="nx">getPixel</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">Y</span><span class="p">,</span><span class="nx">X</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">Y</span><span class="p">[</span><span class="nx">T</span><span class="p">][</span><span class="nx">K</span><span class="p">],</span><span class="nx">Z</span><span class="o">=</span><span class="nx">Y</span><span class="p">[</span><span class="nx">T</span><span class="p">][</span><span class="nx">X</span><span class="p">];</span><span class="nx">Y</span><span class="p">[</span><span class="nx">H</span><span class="p">][</span><span class="nx">K</span><span class="p">]</span><span class="o">=</span><span class="nx">Z</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">Y</span><span class="p">[</span><span class="nx">H</span><span class="p">].</span><span class="nx">pixelRight</span><span class="p">;</span><span class="nx">Y</span><span class="p">[</span><span class="nx">H</span><span class="p">][</span><span class="nx">K</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="o">+</span><span class="nx">I</span><span class="p">;},</span><span class="nx">getMargin</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">Y</span><span class="p">,</span><span class="nx">X</span><span class="p">){</span><span class="kd">var</span> <span class="nx">Z</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">Y</span><span class="p">[</span><span class="nx">T</span><span class="p">][</span><span class="nx">X</span><span class="p">]</span><span class="o">==</span><span class="nx">L</span><span class="p">){</span><span class="nx">Z</span><span class="o">=</span><span class="mi">0</span><span class="o">+</span><span class="nx">I</span><span class="p">;}</span><span class="k">else</span><span class="p">{</span><span class="nx">Z</span><span class="o">=</span><span class="nx">B</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">IE</span><span class="p">.</span><span class="nx">ComputedStyle</span><span class="p">.</span><span class="nx">getPixel</span><span class="p">(</span><span class="nx">Y</span><span class="p">,</span><span class="nx">X</span><span class="p">);}</span><span class="k">return</span> <span class="nx">Z</span><span class="p">;},</span><span class="nx">getVisibility</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">Y</span><span class="p">,</span><span class="nx">X</span><span class="p">){</span><span class="kd">var</span> <span class="nx">Z</span><span class="p">;</span><span class="k">while</span><span class="p">((</span><span class="nx">Z</span><span class="o">=</span><span class="nx">Y</span><span class="p">[</span><span class="nx">T</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="nx">Z</span><span class="p">[</span><span class="nx">X</span><span class="p">]</span><span class="o">==</span><span class="s2">&quot;inherit&quot;</span><span class="p">){</span><span class="nx">Y</span><span class="o">=</span><span class="nx">Y</span><span class="p">[</span><span class="nx">J</span><span class="p">];}</span><span class="k">return</span><span class="p">(</span><span class="nx">Z</span><span class="p">)</span><span class="o">?</span><span class="nx">Z</span><span class="p">[</span><span class="nx">X</span><span class="p">]</span><span class="o">:</span><span class="nx">S</span><span class="p">;},</span><span class="nx">getColor</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">Y</span><span class="p">,</span><span class="nx">X</span><span class="p">){</span><span class="k">return</span> <span class="nx">B</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">Color</span><span class="p">.</span><span class="nx">toRGB</span><span class="p">(</span><span class="nx">Y</span><span class="p">[</span><span class="nx">T</span><span class="p">][</span><span class="nx">X</span><span class="p">])</span><span class="o">||</span><span class="nx">Q</span><span class="p">;},</span><span class="nx">getBorderColor</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">Y</span><span class="p">,</span><span class="nx">X</span><span class="p">){</span><span class="kd">var</span> <span class="nx">Z</span><span class="o">=</span><span class="nx">Y</span><span class="p">[</span><span class="nx">T</span><span class="p">],</span><span class="nx">a</span><span class="o">=</span><span class="nx">Z</span><span class="p">[</span><span class="nx">X</span><span class="p">]</span><span class="o">||</span><span class="nx">Z</span><span class="p">.</span><span class="nx">color</span><span class="p">;</span><span class="k">return</span> <span class="nx">B</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">Color</span><span class="p">.</span><span class="nx">toRGB</span><span class="p">(</span><span class="nx">B</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">Color</span><span class="p">.</span><span class="nx">toHex</span><span class="p">(</span><span class="nx">a</span><span class="p">));}},</span><span class="nx">C</span><span class="o">=</span><span class="p">{};</span><span class="nx">C</span><span class="p">.</span><span class="nx">top</span><span class="o">=</span><span class="nx">C</span><span class="p">.</span><span class="nx">right</span><span class="o">=</span><span class="nx">C</span><span class="p">.</span><span class="nx">bottom</span><span class="o">=</span><span class="nx">C</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="nx">C</span><span class="p">[</span><span class="nx">E</span><span class="p">]</span><span class="o">=</span><span class="nx">C</span><span class="p">[</span><span class="nx">N</span><span class="p">]</span><span class="o">=</span><span class="nx">M</span><span class="p">.</span><span class="nx">getOffset</span><span class="p">;</span><span class="nx">C</span><span class="p">.</span><span class="nx">color</span><span class="o">=</span><span class="nx">M</span><span class="p">.</span><span class="nx">getColor</span><span class="p">;</span><span class="nx">C</span><span class="p">[</span><span class="nx">G</span><span class="p">]</span><span class="o">=</span><span class="nx">C</span><span class="p">[</span><span class="nx">P</span><span class="p">]</span><span class="o">=</span><span class="nx">C</span><span class="p">[</span><span class="nx">V</span><span class="p">]</span><span class="o">=</span><span class="nx">C</span><span class="p">[</span><span class="nx">D</span><span class="p">]</span><span class="o">=</span><span class="nx">M</span><span class="p">.</span><span class="nx">getBorderWidth</span><span class="p">;</span><span class="nx">C</span><span class="p">.</span><span class="nx">marginTop</span><span class="o">=</span><span class="nx">C</span><span class="p">.</span><span class="nx">marginRight</span><span class="o">=</span><span class="nx">C</span><span class="p">.</span><span class="nx">marginBottom</span><span class="o">=</span><span class="nx">C</span><span class="p">.</span><span class="nx">marginLeft</span><span class="o">=</span><span class="nx">M</span><span class="p">.</span><span class="nx">getMargin</span><span class="p">;</span><span class="nx">C</span><span class="p">.</span><span class="nx">visibility</span><span class="o">=</span><span class="nx">M</span><span class="p">.</span><span class="nx">getVisibility</span><span class="p">;</span><span class="nx">C</span><span class="p">.</span><span class="nx">borderColor</span><span class="o">=</span><span class="nx">C</span><span class="p">.</span><span class="nx">borderTopColor</span><span class="o">=</span><span class="nx">C</span><span class="p">.</span><span class="nx">borderRightColor</span><span class="o">=</span><span class="nx">C</span><span class="p">.</span><span class="nx">borderBottomColor</span><span class="o">=</span><span class="nx">C</span><span class="p">.</span><span class="nx">borderLeftColor</span><span class="o">=</span><span class="nx">M</span><span class="p">.</span><span class="nx">getBorderColor</span><span class="p">;</span><span class="nx">B</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">IE_COMPUTED</span><span class="o">=</span><span class="nx">C</span><span class="p">;</span><span class="nx">B</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">IE_ComputedStyle</span><span class="o">=</span><span class="nx">M</span><span class="p">;})();(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">C</span><span class="o">=</span><span class="s2">&quot;toString&quot;</span><span class="p">,</span><span class="nx">A</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">,</span><span class="nx">B</span><span class="o">=</span><span class="nb">RegExp</span><span class="p">,</span><span class="nx">D</span><span class="o">=</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">;</span><span class="nx">D</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">Color</span><span class="o">=</span><span class="p">{</span><span class="nx">KEYWORDS</span><span class="o">:</span><span class="p">{</span><span class="nx">black</span><span class="o">:</span><span class="s2">&quot;000&quot;</span><span class="p">,</span><span class="nx">silver</span><span class="o">:</span><span class="s2">&quot;c0c0c0&quot;</span><span class="p">,</span><span class="nx">gray</span><span class="o">:</span><span class="s2">&quot;808080&quot;</span><span class="p">,</span><span class="nx">white</span><span class="o">:</span><span class="s2">&quot;fff&quot;</span><span class="p">,</span><span class="nx">maroon</span><span class="o">:</span><span class="s2">&quot;800000&quot;</span><span class="p">,</span><span class="nx">red</span><span class="o">:</span><span class="s2">&quot;f00&quot;</span><span class="p">,</span><span class="nx">purple</span><span class="o">:</span><span class="s2">&quot;800080&quot;</span><span class="p">,</span><span class="nx">fuchsia</span><span class="o">:</span><span class="s2">&quot;f0f&quot;</span><span class="p">,</span><span class="nx">green</span><span class="o">:</span><span class="s2">&quot;008000&quot;</span><span class="p">,</span><span class="nx">lime</span><span class="o">:</span><span class="s2">&quot;0f0&quot;</span><span class="p">,</span><span class="nx">olive</span><span class="o">:</span><span class="s2">&quot;808000&quot;</span><span class="p">,</span><span class="nx">yellow</span><span class="o">:</span><span class="s2">&quot;ff0&quot;</span><span class="p">,</span><span class="nx">navy</span><span class="o">:</span><span class="s2">&quot;000080&quot;</span><span class="p">,</span><span class="nx">blue</span><span class="o">:</span><span class="s2">&quot;00f&quot;</span><span class="p">,</span><span class="nx">teal</span><span class="o">:</span><span class="s2">&quot;008080&quot;</span><span class="p">,</span><span class="nx">aqua</span><span class="o">:</span><span class="s2">&quot;0ff&quot;</span><span class="p">},</span><span class="nx">re_RGB</span><span class="o">:</span><span class="sr">/^rgb\(([0-9]+)\s*,\s*([0-9]+)\s*,\s*([0-9]+)\)$/i</span><span class="p">,</span><span class="nx">re_hex</span><span class="o">:</span><span class="sr">/^#?([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})$/i</span><span class="p">,</span><span class="nx">re_hex3</span><span class="o">:</span><span class="sr">/([0-9A-F])/gi</span><span class="p">,</span><span class="nx">toRGB</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">D</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">Color</span><span class="p">.</span><span class="nx">re_RGB</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">E</span><span class="p">)){</span><span class="nx">E</span><span class="o">=</span><span class="nx">D</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">Color</span><span class="p">.</span><span class="nx">toHex</span><span class="p">(</span><span class="nx">E</span><span class="p">);}</span><span class="k">if</span><span class="p">(</span><span class="nx">D</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">Color</span><span class="p">.</span><span class="nx">re_hex</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">E</span><span class="p">)){</span><span class="nx">E</span><span class="o">=</span><span class="s2">&quot;rgb(&quot;</span><span class="o">+</span><span class="p">[</span><span class="nx">A</span><span class="p">(</span><span class="nx">B</span><span class="p">.</span><span class="nx">$1</span><span class="p">,</span><span class="mi">16</span><span class="p">),</span><span class="nx">A</span><span class="p">(</span><span class="nx">B</span><span class="p">.</span><span class="nx">$2</span><span class="p">,</span><span class="mi">16</span><span class="p">),</span><span class="nx">A</span><span class="p">(</span><span class="nx">B</span><span class="p">.</span><span class="nx">$3</span><span class="p">,</span><span class="mi">16</span><span class="p">)].</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;, &quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="p">;}</span><span class="k">return</span> <span class="nx">E</span><span class="p">;},</span><span class="nx">toHex</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">H</span><span class="p">){</span><span class="nx">H</span><span class="o">=</span><span class="nx">D</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">Color</span><span class="p">.</span><span class="nx">KEYWORDS</span><span class="p">[</span><span class="nx">H</span><span class="p">]</span><span class="o">||</span><span class="nx">H</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">D</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">Color</span><span class="p">.</span><span class="nx">re_RGB</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">H</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">G</span><span class="o">=</span><span class="p">(</span><span class="nx">B</span><span class="p">.</span><span class="nx">$1</span><span class="p">.</span><span class="nx">length</span><span class="o">===</span><span class="mi">1</span><span class="p">)</span><span class="o">?</span><span class="s2">&quot;0&quot;</span><span class="o">+</span><span class="nx">B</span><span class="p">.</span><span class="nx">$1</span><span class="o">:</span><span class="nb">Number</span><span class="p">(</span><span class="nx">B</span><span class="p">.</span><span class="nx">$1</span><span class="p">),</span><span class="nx">F</span><span class="o">=</span><span class="p">(</span><span class="nx">B</span><span class="p">.</span><span class="nx">$2</span><span class="p">.</span><span class="nx">length</span><span class="o">===</span><span class="mi">1</span><span class="p">)</span><span class="o">?</span><span class="s2">&quot;0&quot;</span><span class="o">+</span><span class="nx">B</span><span class="p">.</span><span class="nx">$2</span><span class="o">:</span><span class="nb">Number</span><span class="p">(</span><span class="nx">B</span><span class="p">.</span><span class="nx">$2</span><span class="p">),</span><span class="nx">E</span><span class="o">=</span><span class="p">(</span><span class="nx">B</span><span class="p">.</span><span class="nx">$3</span><span class="p">.</span><span class="nx">length</span><span class="o">===</span><span class="mi">1</span><span class="p">)</span><span class="o">?</span><span class="s2">&quot;0&quot;</span><span class="o">+</span><span class="nx">B</span><span class="p">.</span><span class="nx">$3</span><span class="o">:</span><span class="nb">Number</span><span class="p">(</span><span class="nx">B</span><span class="p">.</span><span class="nx">$3</span><span class="p">);</span><span class="nx">H</span><span class="o">=</span><span class="p">[</span><span class="nx">G</span><span class="p">[</span><span class="nx">C</span><span class="p">](</span><span class="mi">16</span><span class="p">),</span><span class="nx">F</span><span class="p">[</span><span class="nx">C</span><span class="p">](</span><span class="mi">16</span><span class="p">),</span><span class="nx">E</span><span class="p">[</span><span class="nx">C</span><span class="p">](</span><span class="mi">16</span><span class="p">)].</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">);}</span><span class="k">if</span><span class="p">(</span><span class="nx">H</span><span class="p">.</span><span class="nx">length</span><span class="o">&lt;</span><span class="mi">6</span><span class="p">){</span><span class="nx">H</span><span class="o">=</span><span class="nx">H</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">D</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">Color</span><span class="p">.</span><span class="nx">re_hex3</span><span class="p">,</span><span class="s2">&quot;$1$1&quot;</span><span class="p">);}</span><span class="k">if</span><span class="p">(</span><span class="nx">H</span><span class="o">!==</span><span class="s2">&quot;transparent&quot;</span><span class="o">&amp;&amp;</span><span class="nx">H</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;#&quot;</span><span class="p">)</span><span class="o">&lt;</span><span class="mi">0</span><span class="p">){</span><span class="nx">H</span><span class="o">=</span><span class="s2">&quot;#&quot;</span><span class="o">+</span><span class="nx">H</span><span class="p">;}</span><span class="k">return</span> <span class="nx">H</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">();}};}());</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">register</span><span class="p">(</span><span class="s2">&quot;dom&quot;</span><span class="p">,</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Dom</span><span class="p">,{</span><span class="nx">version</span><span class="o">:</span><span class="s2">&quot;2.8.0r4&quot;</span><span class="p">,</span><span class="nx">build</span><span class="o">:</span><span class="s2">&quot;2446&quot;</span><span class="p">});</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">CustomEvent</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">D</span><span class="p">,</span><span class="nx">C</span><span class="p">,</span><span class="nx">B</span><span class="p">,</span><span class="nx">A</span><span class="p">,</span><span class="nx">E</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="nx">D</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">scope</span><span class="o">=</span><span class="nx">C</span><span class="o">||</span><span class="nb">window</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">silent</span><span class="o">=</span><span class="nx">B</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">fireOnce</span><span class="o">=</span><span class="nx">E</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">fired</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">firedWith</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">signature</span><span class="o">=</span><span class="nx">A</span><span class="o">||</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">CustomEvent</span><span class="p">.</span><span class="nx">LIST</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">subscribers</span><span class="o">=</span><span class="p">[];</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">silent</span><span class="p">){}</span><span class="kd">var</span> <span class="nx">F</span><span class="o">=</span><span class="s2">&quot;_YUICEOnSubscribe&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">D</span><span class="o">!==</span><span class="nx">F</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">subscribeEvent</span><span class="o">=</span><span class="k">new</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">CustomEvent</span><span class="p">(</span><span class="nx">F</span><span class="p">,</span><span class="k">this</span><span class="p">,</span><span class="kc">true</span><span class="p">);}</span><span class="k">this</span><span class="p">.</span><span class="nx">lastError</span><span class="o">=</span><span class="kc">null</span><span class="p">;};</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">CustomEvent</span><span class="p">.</span><span class="nx">LIST</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">CustomEvent</span><span class="p">.</span><span class="nx">FLAT</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">CustomEvent</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">subscribe</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">B</span><span class="p">,</span><span class="nx">C</span><span class="p">,</span><span class="nx">D</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">B</span><span class="p">){</span><span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;Invalid callback for subscriber to &#39;&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="o">+</span><span class="s2">&quot;&#39;&quot;</span><span class="p">);}</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">subscribeEvent</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">subscribeEvent</span><span class="p">.</span><span class="nx">fire</span><span class="p">(</span><span class="nx">B</span><span class="p">,</span><span class="nx">C</span><span class="p">,</span><span class="nx">D</span><span class="p">);}</span><span class="kd">var</span> <span class="nx">A</span><span class="o">=</span><span class="k">new</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Subscriber</span><span class="p">(</span><span class="nx">B</span><span class="p">,</span><span class="nx">C</span><span class="p">,</span><span class="nx">D</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">fireOnce</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">fired</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">notify</span><span class="p">(</span><span class="nx">A</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">firedWith</span><span class="p">);}</span><span class="k">else</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">subscribers</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">A</span><span class="p">);}},</span><span class="nx">unsubscribe</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">D</span><span class="p">,</span><span class="nx">F</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">D</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">unsubscribeAll</span><span class="p">();}</span><span class="kd">var</span> <span class="nx">E</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">B</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">A</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">subscribers</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">B</span><span class="o">&lt;</span><span class="nx">A</span><span class="p">;</span><span class="o">++</span><span class="nx">B</span><span class="p">){</span><span class="kd">var</span> <span class="nx">C</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">subscribers</span><span class="p">[</span><span class="nx">B</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">C</span><span class="o">&amp;&amp;</span><span class="nx">C</span><span class="p">.</span><span class="nx">contains</span><span class="p">(</span><span class="nx">D</span><span class="p">,</span><span class="nx">F</span><span class="p">)){</span><span class="k">this</span><span class="p">.</span><span class="nx">_delete</span><span class="p">(</span><span class="nx">B</span><span class="p">);</span><span class="nx">E</span><span class="o">=</span><span class="kc">true</span><span class="p">;}}</span><span class="k">return</span> <span class="nx">E</span><span class="p">;},</span><span class="nx">fire</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">lastError</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="kd">var</span> <span class="nx">H</span><span class="o">=</span><span class="p">[],</span><span class="nx">A</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">subscribers</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="kd">var</span> <span class="nx">D</span><span class="o">=</span><span class="p">[].</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="mi">0</span><span class="p">),</span><span class="nx">C</span><span class="o">=</span><span class="kc">true</span><span class="p">,</span><span class="nx">F</span><span class="p">,</span><span class="nx">B</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">fireOnce</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">fired</span><span class="p">){</span><span class="k">return</span> <span class="kc">true</span><span class="p">;}</span><span class="k">else</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">firedWith</span><span class="o">=</span><span class="nx">D</span><span class="p">;}}</span><span class="k">this</span><span class="p">.</span><span class="nx">fired</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">A</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">silent</span><span class="p">){</span><span class="k">return</span> <span class="kc">true</span><span class="p">;}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">silent</span><span class="p">){}</span><span class="kd">var</span> <span class="nx">E</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">subscribers</span><span class="p">.</span><span class="nx">slice</span><span class="p">();</span><span class="k">for</span><span class="p">(</span><span class="nx">F</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">F</span><span class="o">&lt;</span><span class="nx">A</span><span class="p">;</span><span class="o">++</span><span class="nx">F</span><span class="p">){</span><span class="kd">var</span> <span class="nx">G</span><span class="o">=</span><span class="nx">E</span><span class="p">[</span><span class="nx">F</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">G</span><span class="p">){</span><span class="nx">B</span><span class="o">=</span><span class="kc">true</span><span class="p">;}</span><span class="k">else</span><span class="p">{</span><span class="nx">C</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">notify</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">D</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="kc">false</span><span class="o">===</span><span class="nx">C</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">silent</span><span class="p">){}</span><span class="k">break</span><span class="p">;}}}</span><span class="k">return</span><span class="p">(</span><span class="nx">C</span><span class="o">!==</span><span class="kc">false</span><span class="p">);},</span><span class="nx">notify</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">F</span><span class="p">,</span><span class="nx">C</span><span class="p">){</span><span class="kd">var</span> <span class="nx">B</span><span class="p">,</span><span class="nx">H</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">E</span><span class="o">=</span><span class="nx">F</span><span class="p">.</span><span class="nx">getScope</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">scope</span><span class="p">),</span><span class="nx">A</span><span class="o">=</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Event</span><span class="p">.</span><span class="nx">throwErrors</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">silent</span><span class="p">){}</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">signature</span><span class="o">==</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">CustomEvent</span><span class="p">.</span><span class="nx">FLAT</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">C</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">){</span><span class="nx">H</span><span class="o">=</span><span class="nx">C</span><span class="p">[</span><span class="mi">0</span><span class="p">];}</span><span class="k">try</span><span class="p">{</span><span class="nx">B</span><span class="o">=</span><span class="nx">F</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="nx">H</span><span class="p">,</span><span class="nx">F</span><span class="p">.</span><span class="nx">obj</span><span class="p">);}</span><span class="k">catch</span><span class="p">(</span><span class="nx">G</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">lastError</span><span class="o">=</span><span class="nx">G</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">A</span><span class="p">){</span><span class="k">throw</span> <span class="nx">G</span><span class="p">;}}}</span><span class="k">else</span><span class="p">{</span><span class="k">try</span><span class="p">{</span><span class="nx">B</span><span class="o">=</span><span class="nx">F</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="nx">C</span><span class="p">,</span><span class="nx">F</span><span class="p">.</span><span class="nx">obj</span><span class="p">);}</span><span class="k">catch</span><span class="p">(</span><span class="nx">D</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">lastError</span><span class="o">=</span><span class="nx">D</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">A</span><span class="p">){</span><span class="k">throw</span> <span class="nx">D</span><span class="p">;}}}</span><span class="k">return</span> <span class="nx">B</span><span class="p">;},</span><span class="nx">unsubscribeAll</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">A</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">subscribers</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">B</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">B</span><span class="o">=</span><span class="nx">A</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">B</span><span class="o">&gt;-</span><span class="mi">1</span><span class="p">;</span><span class="nx">B</span><span class="o">--</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_delete</span><span class="p">(</span><span class="nx">B</span><span class="p">);}</span><span class="k">this</span><span class="p">.</span><span class="nx">subscribers</span><span class="o">=</span><span class="p">[];</span><span class="k">return</span> <span class="nx">A</span><span class="p">;},</span><span class="nx">_delete</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">A</span><span class="p">){</span><span class="kd">var</span> <span class="nx">B</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">subscribers</span><span class="p">[</span><span class="nx">A</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">B</span><span class="p">){</span><span class="k">delete</span> <span class="nx">B</span><span class="p">.</span><span class="nx">fn</span><span class="p">;</span><span class="k">delete</span> <span class="nx">B</span><span class="p">.</span><span class="nx">obj</span><span class="p">;}</span><span class="k">this</span><span class="p">.</span><span class="nx">subscribers</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">A</span><span class="p">,</span><span class="mi">1</span><span class="p">);},</span><span class="nx">toString</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;CustomEvent: &quot;</span><span class="o">+</span><span class="s2">&quot;&#39;&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="o">+</span><span class="s2">&quot;&#39;, &quot;</span><span class="o">+</span><span class="s2">&quot;context: &quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">scope</span><span class="p">;}};</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Subscriber</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">A</span><span class="p">,</span><span class="nx">B</span><span class="p">,</span><span class="nx">C</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">fn</span><span class="o">=</span><span class="nx">A</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">obj</span><span class="o">=</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">isUndefined</span><span class="p">(</span><span class="nx">B</span><span class="p">)</span><span class="o">?</span><span class="kc">null</span><span class="o">:</span><span class="nx">B</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">overrideContext</span><span class="o">=</span><span class="nx">C</span><span class="p">;};</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Subscriber</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getScope</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">A</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">overrideContext</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">overrideContext</span><span class="o">===</span><span class="kc">true</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">obj</span><span class="p">;}</span><span class="k">else</span><span class="p">{</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">overrideContext</span><span class="p">;}}</span><span class="k">return</span> <span class="nx">A</span><span class="p">;};</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Subscriber</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">contains</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">A</span><span class="p">,</span><span class="nx">B</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">B</span><span class="p">){</span><span class="k">return</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">fn</span><span class="o">==</span><span class="nx">A</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">obj</span><span class="o">==</span><span class="nx">B</span><span class="p">);}</span><span class="k">else</span><span class="p">{</span><span class="k">return</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">fn</span><span class="o">==</span><span class="nx">A</span><span class="p">);}};</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Subscriber</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;Subscriber { obj: &quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">obj</span><span class="o">+</span><span class="s2">&quot;, overrideContext: &quot;</span><span class="o">+</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">overrideContext</span><span class="o">||</span><span class="s2">&quot;no&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; }&quot;</span><span class="p">;};</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Event</span><span class="p">){</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Event</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">G</span><span class="o">=</span><span class="kc">false</span><span class="p">,</span><span class="nx">H</span><span class="o">=</span><span class="p">[],</span><span class="nx">J</span><span class="o">=</span><span class="p">[],</span><span class="nx">A</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">E</span><span class="o">=</span><span class="p">[],</span><span class="nx">B</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">C</span><span class="o">=</span><span class="p">{</span><span class="mi">63232</span><span class="o">:</span><span class="mi">38</span><span class="p">,</span><span class="mi">63233</span><span class="o">:</span><span class="mi">40</span><span class="p">,</span><span class="mi">63234</span><span class="o">:</span><span class="mi">37</span><span class="p">,</span><span class="mi">63235</span><span class="o">:</span><span class="mi">39</span><span class="p">,</span><span class="mi">63276</span><span class="o">:</span><span class="mi">33</span><span class="p">,</span><span class="mi">63277</span><span class="o">:</span><span class="mi">34</span><span class="p">,</span><span class="mi">25</span><span class="o">:</span><span class="mi">9</span><span class="p">},</span><span class="nx">D</span><span class="o">=</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">ua</span><span class="p">.</span><span class="nx">ie</span><span class="p">,</span><span class="nx">F</span><span class="o">=</span><span class="s2">&quot;focusin&quot;</span><span class="p">,</span><span class="nx">I</span><span class="o">=</span><span class="s2">&quot;focusout&quot;</span><span class="p">;</span><span class="k">return</span><span class="p">{</span><span class="nx">POLL_RETRYS</span><span class="o">:</span><span class="mi">500</span><span class="p">,</span><span class="nx">POLL_INTERVAL</span><span class="o">:</span><span class="mi">40</span><span class="p">,</span><span class="nx">EL</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">TYPE</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">FN</span><span class="o">:</span><span class="mi">2</span><span class="p">,</span><span class="nx">WFN</span><span class="o">:</span><span class="mi">3</span><span class="p">,</span><span class="nx">UNLOAD_OBJ</span><span class="o">:</span><span class="mi">3</span><span class="p">,</span><span class="nx">ADJ_SCOPE</span><span class="o">:</span><span class="mi">4</span><span class="p">,</span><span class="nx">OBJ</span><span class="o">:</span><span class="mi">5</span><span class="p">,</span><span class="nx">OVERRIDE</span><span class="o">:</span><span class="mi">6</span><span class="p">,</span><span class="nx">CAPTURE</span><span class="o">:</span><span class="mi">7</span><span class="p">,</span><span class="nx">lastError</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">isSafari</span><span class="o">:</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">ua</span><span class="p">.</span><span class="nx">webkit</span><span class="p">,</span><span class="nx">webkit</span><span class="o">:</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">ua</span><span class="p">.</span><span class="nx">webkit</span><span class="p">,</span><span class="nx">isIE</span><span class="o">:</span><span class="nx">D</span><span class="p">,</span><span class="nx">_interval</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">_dri</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">_specialTypes</span><span class="o">:</span><span class="p">{</span><span class="nx">focusin</span><span class="o">:</span><span class="p">(</span><span class="nx">D</span><span class="o">?</span><span class="s2">&quot;focusin&quot;</span><span class="o">:</span><span class="s2">&quot;focus&quot;</span><span class="p">),</span><span class="nx">focusout</span><span class="o">:</span><span class="p">(</span><span class="nx">D</span><span class="o">?</span><span class="s2">&quot;focusout&quot;</span><span class="o">:</span><span class="s2">&quot;blur&quot;</span><span class="p">)},</span><span class="nx">DOMReady</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="nx">throwErrors</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="nx">startInterval</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">_interval</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_interval</span><span class="o">=</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">later</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">POLL_INTERVAL</span><span class="p">,</span><span class="k">this</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_tryPreloadAttach</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="kc">true</span><span class="p">);}},</span><span class="nx">onAvailable</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">Q</span><span class="p">,</span><span class="nx">M</span><span class="p">,</span><span class="nx">O</span><span class="p">,</span><span class="nx">P</span><span class="p">,</span><span class="nx">N</span><span class="p">){</span><span class="kd">var</span> <span class="nx">K</span><span class="o">=</span><span class="p">(</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">isString</span><span class="p">(</span><span class="nx">Q</span><span class="p">))</span><span class="o">?</span><span class="p">[</span><span class="nx">Q</span><span class="p">]</span><span class="o">:</span><span class="nx">Q</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">L</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">L</span><span class="o">&lt;</span><span class="nx">K</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">L</span><span class="o">=</span><span class="nx">L</span><span class="o">+</span><span class="mi">1</span><span class="p">){</span><span class="nx">E</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">id</span><span class="o">:</span><span class="nx">K</span><span class="p">[</span><span class="nx">L</span><span class="p">],</span><span class="nx">fn</span><span class="o">:</span><span class="nx">M</span><span class="p">,</span><span class="nx">obj</span><span class="o">:</span><span class="nx">O</span><span class="p">,</span><span class="nx">overrideContext</span><span class="o">:</span><span class="nx">P</span><span class="p">,</span><span class="nx">checkReady</span><span class="o">:</span><span class="nx">N</span><span class="p">});}</span><span class="nx">A</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">POLL_RETRYS</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">startInterval</span><span class="p">();},</span><span class="nx">onContentReady</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">N</span><span class="p">,</span><span class="nx">K</span><span class="p">,</span><span class="nx">L</span><span class="p">,</span><span class="nx">M</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">onAvailable</span><span class="p">(</span><span class="nx">N</span><span class="p">,</span><span class="nx">K</span><span class="p">,</span><span class="nx">L</span><span class="p">,</span><span class="nx">M</span><span class="p">,</span><span class="kc">true</span><span class="p">);},</span><span class="nx">onDOMReady</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">DOMReadyEvent</span><span class="p">.</span><span class="nx">subscribe</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">DOMReadyEvent</span><span class="p">,</span><span class="nx">arguments</span><span class="p">);},</span><span class="nx">_addListener</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">M</span><span class="p">,</span><span class="nx">K</span><span class="p">,</span><span class="nx">V</span><span class="p">,</span><span class="nx">P</span><span class="p">,</span><span class="nx">T</span><span class="p">,</span><span class="nx">Y</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">V</span><span class="o">||!</span><span class="nx">V</span><span class="p">.</span><span class="nx">call</span><span class="p">){</span><span class="k">return</span> <span class="kc">false</span><span class="p">;}</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_isValidCollection</span><span class="p">(</span><span class="nx">M</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">W</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">Q</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">S</span><span class="o">=</span><span class="nx">M</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">Q</span><span class="o">&lt;</span><span class="nx">S</span><span class="p">;</span><span class="o">++</span><span class="nx">Q</span><span class="p">){</span><span class="nx">W</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="nx">M</span><span class="p">[</span><span class="nx">Q</span><span class="p">],</span><span class="nx">K</span><span class="p">,</span><span class="nx">V</span><span class="p">,</span><span class="nx">P</span><span class="p">,</span><span class="nx">T</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">W</span><span class="p">;}</span><span class="k">return</span> <span class="nx">W</span><span class="p">;}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">isString</span><span class="p">(</span><span class="nx">M</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">O</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getEl</span><span class="p">(</span><span class="nx">M</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">O</span><span class="p">){</span><span class="nx">M</span><span class="o">=</span><span class="nx">O</span><span class="p">;}</span><span class="k">else</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">onAvailable</span><span class="p">(</span><span class="nx">M</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Event</span><span class="p">.</span><span class="nx">_addListener</span><span class="p">(</span><span class="nx">M</span><span class="p">,</span><span class="nx">K</span><span class="p">,</span><span class="nx">V</span><span class="p">,</span><span class="nx">P</span><span class="p">,</span><span class="nx">T</span><span class="p">,</span><span class="nx">Y</span><span class="p">);});</span><span class="k">return</span> <span class="kc">true</span><span class="p">;}}}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">M</span><span class="p">){</span><span class="k">return</span> <span class="kc">false</span><span class="p">;}</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;unload&quot;</span><span class="o">==</span><span class="nx">K</span><span class="o">&amp;&amp;</span><span class="nx">P</span><span class="o">!==</span><span class="k">this</span><span class="p">){</span><span class="nx">J</span><span class="p">[</span><span class="nx">J</span><span class="p">.</span><span class="nx">length</span><span class="p">]</span><span class="o">=</span><span class="p">[</span><span class="nx">M</span><span class="p">,</span><span class="nx">K</span><span class="p">,</span><span class="nx">V</span><span class="p">,</span><span class="nx">P</span><span class="p">,</span><span class="nx">T</span><span class="p">];</span><span class="k">return</span> <span class="kc">true</span><span class="p">;}</span><span class="kd">var</span> <span class="nx">L</span><span class="o">=</span><span class="nx">M</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">T</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">T</span><span class="o">===</span><span class="kc">true</span><span class="p">){</span><span class="nx">L</span><span class="o">=</span><span class="nx">P</span><span class="p">;}</span><span class="k">else</span><span class="p">{</span><span class="nx">L</span><span class="o">=</span><span class="nx">T</span><span class="p">;}}</span><span class="kd">var</span> <span class="nx">N</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">Z</span><span class="p">){</span><span class="k">return</span> <span class="nx">V</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">L</span><span class="p">,</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Event</span><span class="p">.</span><span class="nx">getEvent</span><span class="p">(</span><span class="nx">Z</span><span class="p">,</span><span class="nx">M</span><span class="p">),</span><span class="nx">P</span><span class="p">);};</span><span class="kd">var</span> <span class="nx">X</span><span class="o">=</span><span class="p">[</span><span class="nx">M</span><span class="p">,</span><span class="nx">K</span><span class="p">,</span><span class="nx">V</span><span class="p">,</span><span class="nx">N</span><span class="p">,</span><span class="nx">L</span><span class="p">,</span><span class="nx">P</span><span class="p">,</span><span class="nx">T</span><span class="p">,</span><span class="nx">Y</span><span class="p">];</span><span class="kd">var</span> <span class="nx">R</span><span class="o">=</span><span class="nx">H</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">H</span><span class="p">[</span><span class="nx">R</span><span class="p">]</span><span class="o">=</span><span class="nx">X</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">_simpleAdd</span><span class="p">(</span><span class="nx">M</span><span class="p">,</span><span class="nx">K</span><span class="p">,</span><span class="nx">N</span><span class="p">,</span><span class="nx">Y</span><span class="p">);}</span><span class="k">catch</span><span class="p">(</span><span class="nx">U</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">lastError</span><span class="o">=</span><span class="nx">U</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">removeListener</span><span class="p">(</span><span class="nx">M</span><span class="p">,</span><span class="nx">K</span><span class="p">,</span><span class="nx">V</span><span class="p">);</span><span class="k">return</span> <span class="kc">false</span><span class="p">;}</span><span class="k">return</span> <span class="kc">true</span><span class="p">;},</span><span class="nx">_getType</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">K</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_specialTypes</span><span class="p">[</span><span class="nx">K</span><span class="p">]</span><span class="o">||</span><span class="nx">K</span><span class="p">;},</span><span class="nx">addListener</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">M</span><span class="p">,</span><span class="nx">P</span><span class="p">,</span><span class="nx">L</span><span class="p">,</span><span class="nx">N</span><span class="p">,</span><span class="nx">O</span><span class="p">){</span><span class="kd">var</span> <span class="nx">K</span><span class="o">=</span><span class="p">((</span><span class="nx">P</span><span class="o">==</span><span class="nx">F</span><span class="o">||</span><span class="nx">P</span><span class="o">==</span><span class="nx">I</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">ua</span><span class="p">.</span><span class="nx">ie</span><span class="p">)</span><span class="o">?</span><span class="kc">true</span><span class="o">:</span><span class="kc">false</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_addListener</span><span class="p">(</span><span class="nx">M</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_getType</span><span class="p">(</span><span class="nx">P</span><span class="p">),</span><span class="nx">L</span><span class="p">,</span><span class="nx">N</span><span class="p">,</span><span class="nx">O</span><span class="p">,</span><span class="nx">K</span><span class="p">);},</span><span class="nx">addFocusListener</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">L</span><span class="p">,</span><span class="nx">K</span><span class="p">,</span><span class="nx">M</span><span class="p">,</span><span class="nx">N</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="nx">L</span><span class="p">,</span><span class="nx">F</span><span class="p">,</span><span class="nx">K</span><span class="p">,</span><span class="nx">M</span><span class="p">,</span><span class="nx">N</span><span class="p">);},</span><span class="nx">removeFocusListener</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">L</span><span class="p">,</span><span class="nx">K</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">removeListener</span><span class="p">(</span><span class="nx">L</span><span class="p">,</span><span class="nx">F</span><span class="p">,</span><span class="nx">K</span><span class="p">);},</span><span class="nx">addBlurListener</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">L</span><span class="p">,</span><span class="nx">K</span><span class="p">,</span><span class="nx">M</span><span class="p">,</span><span class="nx">N</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="nx">L</span><span class="p">,</span><span class="nx">I</span><span class="p">,</span><span class="nx">K</span><span class="p">,</span><span class="nx">M</span><span class="p">,</span><span class="nx">N</span><span class="p">);},</span><span class="nx">removeBlurListener</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">L</span><span class="p">,</span><span class="nx">K</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">removeListener</span><span class="p">(</span><span class="nx">L</span><span class="p">,</span><span class="nx">I</span><span class="p">,</span><span class="nx">K</span><span class="p">);},</span><span class="nx">removeListener</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">L</span><span class="p">,</span><span class="nx">K</span><span class="p">,</span><span class="nx">R</span><span class="p">){</span><span class="kd">var</span> <span class="nx">M</span><span class="p">,</span><span class="nx">P</span><span class="p">,</span><span class="nx">U</span><span class="p">;</span><span class="nx">K</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_getType</span><span class="p">(</span><span class="nx">K</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">L</span><span class="o">==</span><span class="s2">&quot;string&quot;</span><span class="p">){</span><span class="nx">L</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getEl</span><span class="p">(</span><span class="nx">L</span><span class="p">);}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_isValidCollection</span><span class="p">(</span><span class="nx">L</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">S</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">M</span><span class="o">=</span><span class="nx">L</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">M</span><span class="o">&gt;-</span><span class="mi">1</span><span class="p">;</span><span class="nx">M</span><span class="o">--</span><span class="p">){</span><span class="nx">S</span><span class="o">=</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">removeListener</span><span class="p">(</span><span class="nx">L</span><span class="p">[</span><span class="nx">M</span><span class="p">],</span><span class="nx">K</span><span class="p">,</span><span class="nx">R</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">S</span><span class="p">);}</span><span class="k">return</span> <span class="nx">S</span><span class="p">;}}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">R</span><span class="o">||!</span><span class="nx">R</span><span class="p">.</span><span class="nx">call</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">purgeElement</span><span class="p">(</span><span class="nx">L</span><span class="p">,</span><span class="kc">false</span><span class="p">,</span><span class="nx">K</span><span class="p">);}</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;unload&quot;</span><span class="o">==</span><span class="nx">K</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">M</span><span class="o">=</span><span class="nx">J</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">M</span><span class="o">&gt;-</span><span class="mi">1</span><span class="p">;</span><span class="nx">M</span><span class="o">--</span><span class="p">){</span><span class="nx">U</span><span class="o">=</span><span class="nx">J</span><span class="p">[</span><span class="nx">M</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">U</span><span class="o">&amp;&amp;</span><span class="nx">U</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">==</span><span class="nx">L</span><span class="o">&amp;&amp;</span><span class="nx">U</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">==</span><span class="nx">K</span><span class="o">&amp;&amp;</span><span class="nx">U</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">==</span><span class="nx">R</span><span class="p">){</span><span class="nx">J</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">M</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="k">return</span> <span class="kc">true</span><span class="p">;}}</span><span class="k">return</span> <span class="kc">false</span><span class="p">;}</span><span class="kd">var</span> <span class="nx">N</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="kd">var</span> <span class="nx">O</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">3</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;undefined&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">O</span><span class="p">){</span><span class="nx">O</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_getCacheIndex</span><span class="p">(</span><span class="nx">H</span><span class="p">,</span><span class="nx">L</span><span class="p">,</span><span class="nx">K</span><span class="p">,</span><span class="nx">R</span><span class="p">);}</span><span class="k">if</span><span class="p">(</span><span class="nx">O</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">){</span><span class="nx">N</span><span class="o">=</span><span class="nx">H</span><span class="p">[</span><span class="nx">O</span><span class="p">];}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">L</span><span class="o">||!</span><span class="nx">N</span><span class="p">){</span><span class="k">return</span> <span class="kc">false</span><span class="p">;}</span><span class="kd">var</span> <span class="nx">T</span><span class="o">=</span><span class="nx">N</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">CAPTURE</span><span class="p">]</span><span class="o">===</span><span class="kc">true</span><span class="o">?</span><span class="kc">true</span><span class="o">:</span><span class="kc">false</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">_simpleRemove</span><span class="p">(</span><span class="nx">L</span><span class="p">,</span><span class="nx">K</span><span class="p">,</span><span class="nx">N</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">WFN</span><span class="p">],</span><span class="nx">T</span><span class="p">);}</span><span class="k">catch</span><span class="p">(</span><span class="nx">Q</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">lastError</span><span class="o">=</span><span class="nx">Q</span><span class="p">;</span><span class="k">return</span> <span class="kc">false</span><span class="p">;}</span><span class="k">delete</span> <span class="nx">H</span><span class="p">[</span><span class="nx">O</span><span class="p">][</span><span class="k">this</span><span class="p">.</span><span class="nx">WFN</span><span class="p">];</span><span class="k">delete</span> <span class="nx">H</span><span class="p">[</span><span class="nx">O</span><span class="p">][</span><span class="k">this</span><span class="p">.</span><span class="nx">FN</span><span class="p">];</span><span class="nx">H</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">O</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="k">return</span> <span class="kc">true</span><span class="p">;},</span><span class="nx">getTarget</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">M</span><span class="p">,</span><span class="nx">L</span><span class="p">){</span><span class="kd">var</span> <span class="nx">K</span><span class="o">=</span><span class="nx">M</span><span class="p">.</span><span class="nx">target</span><span class="o">||</span><span class="nx">M</span><span class="p">.</span><span class="nx">srcElement</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">resolveTextNode</span><span class="p">(</span><span class="nx">K</span><span class="p">);},</span><span class="nx">resolveTextNode</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">L</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">L</span><span class="o">&amp;&amp;</span><span class="mi">3</span><span class="o">==</span><span class="nx">L</span><span class="p">.</span><span class="nx">nodeType</span><span class="p">){</span><span class="k">return</span> <span class="nx">L</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">;}}</span><span class="k">catch</span><span class="p">(</span><span class="nx">K</span><span class="p">){}</span><span class="k">return</span> <span class="nx">L</span><span class="p">;},</span><span class="nx">getPageX</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">L</span><span class="p">){</span><span class="kd">var</span> <span class="nx">K</span><span class="o">=</span><span class="nx">L</span><span class="p">.</span><span class="nx">pageX</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">K</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">!==</span><span class="nx">K</span><span class="p">){</span><span class="nx">K</span><span class="o">=</span><span class="nx">L</span><span class="p">.</span><span class="nx">clientX</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">isIE</span><span class="p">){</span><span class="nx">K</span><span class="o">+=</span><span class="k">this</span><span class="p">.</span><span class="nx">_getScrollLeft</span><span class="p">();}}</span><span class="k">return</span> <span class="nx">K</span><span class="p">;},</span><span class="nx">getPageY</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">K</span><span class="p">){</span><span class="kd">var</span> <span class="nx">L</span><span class="o">=</span><span class="nx">K</span><span class="p">.</span><span class="nx">pageY</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">L</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">!==</span><span class="nx">L</span><span class="p">){</span><span class="nx">L</span><span class="o">=</span><span class="nx">K</span><span class="p">.</span><span class="nx">clientY</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">isIE</span><span class="p">){</span><span class="nx">L</span><span class="o">+=</span><span class="k">this</span><span class="p">.</span><span class="nx">_getScrollTop</span><span class="p">();}}</span><span class="k">return</span> <span class="nx">L</span><span class="p">;},</span><span class="nx">getXY</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">K</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">getPageX</span><span class="p">(</span><span class="nx">K</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">getPageY</span><span class="p">(</span><span class="nx">K</span><span class="p">)];},</span><span class="nx">getRelatedTarget</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">L</span><span class="p">){</span><span class="kd">var</span> <span class="nx">K</span><span class="o">=</span><span class="nx">L</span><span class="p">.</span><span class="nx">relatedTarget</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">K</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">L</span><span class="p">.</span><span class="nx">type</span><span class="o">==</span><span class="s2">&quot;mouseout&quot;</span><span class="p">){</span><span class="nx">K</span><span class="o">=</span><span class="nx">L</span><span class="p">.</span><span class="nx">toElement</span><span class="p">;</span>
<span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">L</span><span class="p">.</span><span class="nx">type</span><span class="o">==</span><span class="s2">&quot;mouseover&quot;</span><span class="p">){</span><span class="nx">K</span><span class="o">=</span><span class="nx">L</span><span class="p">.</span><span class="nx">fromElement</span><span class="p">;}}}</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">resolveTextNode</span><span class="p">(</span><span class="nx">K</span><span class="p">);},</span><span class="nx">getTime</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">M</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">M</span><span class="p">.</span><span class="nx">time</span><span class="p">){</span><span class="kd">var</span> <span class="nx">L</span><span class="o">=</span><span class="k">new</span> <span class="nb">Date</span><span class="p">().</span><span class="nx">getTime</span><span class="p">();</span><span class="k">try</span><span class="p">{</span><span class="nx">M</span><span class="p">.</span><span class="nx">time</span><span class="o">=</span><span class="nx">L</span><span class="p">;}</span><span class="k">catch</span><span class="p">(</span><span class="nx">K</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">lastError</span><span class="o">=</span><span class="nx">K</span><span class="p">;</span><span class="k">return</span> <span class="nx">L</span><span class="p">;}}</span><span class="k">return</span> <span class="nx">M</span><span class="p">.</span><span class="nx">time</span><span class="p">;},</span><span class="nx">stopEvent</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">K</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">stopPropagation</span><span class="p">(</span><span class="nx">K</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">(</span><span class="nx">K</span><span class="p">);},</span><span class="nx">stopPropagation</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">K</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">K</span><span class="p">.</span><span class="nx">stopPropagation</span><span class="p">){</span><span class="nx">K</span><span class="p">.</span><span class="nx">stopPropagation</span><span class="p">();}</span><span class="k">else</span><span class="p">{</span><span class="nx">K</span><span class="p">.</span><span class="nx">cancelBubble</span><span class="o">=</span><span class="kc">true</span><span class="p">;}},</span><span class="nx">preventDefault</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">K</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">K</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">){</span><span class="nx">K</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();}</span><span class="k">else</span><span class="p">{</span><span class="nx">K</span><span class="p">.</span><span class="nx">returnValue</span><span class="o">=</span><span class="kc">false</span><span class="p">;}},</span><span class="nx">getEvent</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">M</span><span class="p">,</span><span class="nx">K</span><span class="p">){</span><span class="kd">var</span> <span class="nx">L</span><span class="o">=</span><span class="nx">M</span><span class="o">||</span><span class="nb">window</span><span class="p">.</span><span class="nx">event</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">L</span><span class="p">){</span><span class="kd">var</span> <span class="nx">N</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getEvent</span><span class="p">.</span><span class="nx">caller</span><span class="p">;</span><span class="k">while</span><span class="p">(</span><span class="nx">N</span><span class="p">){</span><span class="nx">L</span><span class="o">=</span><span class="nx">N</span><span class="p">.</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">L</span><span class="o">&amp;&amp;</span><span class="nx">Event</span><span class="o">==</span><span class="nx">L</span><span class="p">.</span><span class="nx">constructor</span><span class="p">){</span><span class="k">break</span><span class="p">;}</span><span class="nx">N</span><span class="o">=</span><span class="nx">N</span><span class="p">.</span><span class="nx">caller</span><span class="p">;}}</span><span class="k">return</span> <span class="nx">L</span><span class="p">;},</span><span class="nx">getCharCode</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">L</span><span class="p">){</span><span class="kd">var</span> <span class="nx">K</span><span class="o">=</span><span class="nx">L</span><span class="p">.</span><span class="nx">keyCode</span><span class="o">||</span><span class="nx">L</span><span class="p">.</span><span class="nx">charCode</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">ua</span><span class="p">.</span><span class="nx">webkit</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">K</span> <span class="k">in</span> <span class="nx">C</span><span class="p">)){</span><span class="nx">K</span><span class="o">=</span><span class="nx">C</span><span class="p">[</span><span class="nx">K</span><span class="p">];}</span><span class="k">return</span> <span class="nx">K</span><span class="p">;},</span><span class="nx">_getCacheIndex</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">M</span><span class="p">,</span><span class="nx">P</span><span class="p">,</span><span class="nx">Q</span><span class="p">,</span><span class="nx">O</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">N</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">L</span><span class="o">=</span><span class="nx">M</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">N</span><span class="o">&lt;</span><span class="nx">L</span><span class="p">;</span><span class="nx">N</span><span class="o">=</span><span class="nx">N</span><span class="o">+</span><span class="mi">1</span><span class="p">){</span><span class="kd">var</span> <span class="nx">K</span><span class="o">=</span><span class="nx">M</span><span class="p">[</span><span class="nx">N</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">K</span><span class="o">&amp;&amp;</span><span class="nx">K</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">FN</span><span class="p">]</span><span class="o">==</span><span class="nx">O</span><span class="o">&amp;&amp;</span><span class="nx">K</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">EL</span><span class="p">]</span><span class="o">==</span><span class="nx">P</span><span class="o">&amp;&amp;</span><span class="nx">K</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">TYPE</span><span class="p">]</span><span class="o">==</span><span class="nx">Q</span><span class="p">){</span><span class="k">return</span> <span class="nx">N</span><span class="p">;}}</span><span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;},</span><span class="nx">generateId</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">K</span><span class="p">){</span><span class="kd">var</span> <span class="nx">L</span><span class="o">=</span><span class="nx">K</span><span class="p">.</span><span class="nx">id</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">L</span><span class="p">){</span><span class="nx">L</span><span class="o">=</span><span class="s2">&quot;yuievtautoid-&quot;</span><span class="o">+</span><span class="nx">B</span><span class="p">;</span><span class="o">++</span><span class="nx">B</span><span class="p">;</span><span class="nx">K</span><span class="p">.</span><span class="nx">id</span><span class="o">=</span><span class="nx">L</span><span class="p">;}</span><span class="k">return</span> <span class="nx">L</span><span class="p">;},</span><span class="nx">_isValidCollection</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">L</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="k">return</span><span class="p">(</span><span class="nx">L</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">L</span><span class="o">!==</span><span class="s2">&quot;string&quot;</span><span class="o">&amp;&amp;</span><span class="nx">L</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;!</span><span class="nx">L</span><span class="p">.</span><span class="nx">tagName</span><span class="o">&amp;&amp;!</span><span class="nx">L</span><span class="p">.</span><span class="nx">alert</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">L</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">!==</span><span class="s2">&quot;undefined&quot;</span><span class="p">);}</span><span class="k">catch</span><span class="p">(</span><span class="nx">K</span><span class="p">){</span><span class="k">return</span> <span class="kc">false</span><span class="p">;}},</span><span class="nx">elCache</span><span class="o">:</span><span class="p">{},</span><span class="nx">getEl</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">K</span><span class="p">){</span><span class="k">return</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">K</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="p">)</span><span class="o">?</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="nx">K</span><span class="p">)</span><span class="o">:</span><span class="nx">K</span><span class="p">;},</span><span class="nx">clearCache</span><span class="o">:</span><span class="kd">function</span><span class="p">(){},</span><span class="nx">DOMReadyEvent</span><span class="o">:</span><span class="k">new</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">CustomEvent</span><span class="p">(</span><span class="s2">&quot;DOMReady&quot;</span><span class="p">,</span><span class="nx">YAHOO</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="nx">_load</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">L</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">G</span><span class="p">){</span><span class="nx">G</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="kd">var</span> <span class="nx">K</span><span class="o">=</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Event</span><span class="p">;</span><span class="nx">K</span><span class="p">.</span><span class="nx">_ready</span><span class="p">();</span><span class="nx">K</span><span class="p">.</span><span class="nx">_tryPreloadAttach</span><span class="p">();}},</span><span class="nx">_ready</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">L</span><span class="p">){</span><span class="kd">var</span> <span class="nx">K</span><span class="o">=</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Event</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">K</span><span class="p">.</span><span class="nx">DOMReady</span><span class="p">){</span><span class="nx">K</span><span class="p">.</span><span class="nx">DOMReady</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="nx">K</span><span class="p">.</span><span class="nx">DOMReadyEvent</span><span class="p">.</span><span class="nx">fire</span><span class="p">();</span><span class="nx">K</span><span class="p">.</span><span class="nx">_simpleRemove</span><span class="p">(</span><span class="nb">document</span><span class="p">,</span><span class="s2">&quot;DOMContentLoaded&quot;</span><span class="p">,</span><span class="nx">K</span><span class="p">.</span><span class="nx">_ready</span><span class="p">);}},</span><span class="nx">_tryPreloadAttach</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">length</span><span class="o">===</span><span class="mi">0</span><span class="p">){</span><span class="nx">A</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_interval</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_interval</span><span class="p">.</span><span class="nx">cancel</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">_interval</span><span class="o">=</span><span class="kc">null</span><span class="p">;}</span><span class="k">return</span><span class="p">;}</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">locked</span><span class="p">){</span><span class="k">return</span><span class="p">;}</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">isIE</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">DOMReady</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">startInterval</span><span class="p">();</span><span class="k">return</span><span class="p">;}}</span><span class="k">this</span><span class="p">.</span><span class="nx">locked</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="kd">var</span> <span class="nx">Q</span><span class="o">=!</span><span class="nx">G</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">Q</span><span class="p">){</span><span class="nx">Q</span><span class="o">=</span><span class="p">(</span><span class="nx">A</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">E</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">);}</span><span class="kd">var</span> <span class="nx">P</span><span class="o">=</span><span class="p">[];</span><span class="kd">var</span> <span class="nx">R</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">T</span><span class="p">,</span><span class="nx">U</span><span class="p">){</span><span class="kd">var</span> <span class="nx">S</span><span class="o">=</span><span class="nx">T</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">U</span><span class="p">.</span><span class="nx">overrideContext</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">U</span><span class="p">.</span><span class="nx">overrideContext</span><span class="o">===</span><span class="kc">true</span><span class="p">){</span><span class="nx">S</span><span class="o">=</span><span class="nx">U</span><span class="p">.</span><span class="nx">obj</span><span class="p">;}</span><span class="k">else</span><span class="p">{</span><span class="nx">S</span><span class="o">=</span><span class="nx">U</span><span class="p">.</span><span class="nx">overrideContext</span><span class="p">;}}</span><span class="nx">U</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">S</span><span class="p">,</span><span class="nx">U</span><span class="p">.</span><span class="nx">obj</span><span class="p">);};</span><span class="kd">var</span> <span class="nx">L</span><span class="p">,</span><span class="nx">K</span><span class="p">,</span><span class="nx">O</span><span class="p">,</span><span class="nx">N</span><span class="p">,</span><span class="nx">M</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="nx">L</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">K</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">L</span><span class="o">&lt;</span><span class="nx">K</span><span class="p">;</span><span class="nx">L</span><span class="o">=</span><span class="nx">L</span><span class="o">+</span><span class="mi">1</span><span class="p">){</span><span class="nx">O</span><span class="o">=</span><span class="nx">E</span><span class="p">[</span><span class="nx">L</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">O</span><span class="p">){</span><span class="nx">N</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getEl</span><span class="p">(</span><span class="nx">O</span><span class="p">.</span><span class="nx">id</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">N</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">O</span><span class="p">.</span><span class="nx">checkReady</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">G</span><span class="o">||</span><span class="nx">N</span><span class="p">.</span><span class="nx">nextSibling</span><span class="o">||!</span><span class="nx">Q</span><span class="p">){</span><span class="nx">M</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">O</span><span class="p">);</span><span class="nx">E</span><span class="p">[</span><span class="nx">L</span><span class="p">]</span><span class="o">=</span><span class="kc">null</span><span class="p">;}}</span><span class="k">else</span><span class="p">{</span><span class="nx">R</span><span class="p">(</span><span class="nx">N</span><span class="p">,</span><span class="nx">O</span><span class="p">);</span><span class="nx">E</span><span class="p">[</span><span class="nx">L</span><span class="p">]</span><span class="o">=</span><span class="kc">null</span><span class="p">;}}</span><span class="k">else</span><span class="p">{</span><span class="nx">P</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">O</span><span class="p">);}}}</span><span class="k">for</span><span class="p">(</span><span class="nx">L</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">K</span><span class="o">=</span><span class="nx">M</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">L</span><span class="o">&lt;</span><span class="nx">K</span><span class="p">;</span><span class="nx">L</span><span class="o">=</span><span class="nx">L</span><span class="o">+</span><span class="mi">1</span><span class="p">){</span><span class="nx">O</span><span class="o">=</span><span class="nx">M</span><span class="p">[</span><span class="nx">L</span><span class="p">];</span><span class="nx">R</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getEl</span><span class="p">(</span><span class="nx">O</span><span class="p">.</span><span class="nx">id</span><span class="p">),</span><span class="nx">O</span><span class="p">);}</span><span class="nx">A</span><span class="o">--</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">Q</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">L</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">L</span><span class="o">&gt;-</span><span class="mi">1</span><span class="p">;</span><span class="nx">L</span><span class="o">--</span><span class="p">){</span><span class="nx">O</span><span class="o">=</span><span class="nx">E</span><span class="p">[</span><span class="nx">L</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">O</span><span class="o">||!</span><span class="nx">O</span><span class="p">.</span><span class="nx">id</span><span class="p">){</span><span class="nx">E</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">L</span><span class="p">,</span><span class="mi">1</span><span class="p">);}}</span><span class="k">this</span><span class="p">.</span><span class="nx">startInterval</span><span class="p">();}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_interval</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_interval</span><span class="p">.</span><span class="nx">cancel</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">_interval</span><span class="o">=</span><span class="kc">null</span><span class="p">;}}</span><span class="k">this</span><span class="p">.</span><span class="nx">locked</span><span class="o">=</span><span class="kc">false</span><span class="p">;},</span><span class="nx">purgeElement</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">O</span><span class="p">,</span><span class="nx">P</span><span class="p">,</span><span class="nx">R</span><span class="p">){</span><span class="kd">var</span> <span class="nx">M</span><span class="o">=</span><span class="p">(</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">isString</span><span class="p">(</span><span class="nx">O</span><span class="p">))</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">getEl</span><span class="p">(</span><span class="nx">O</span><span class="p">)</span><span class="o">:</span><span class="nx">O</span><span class="p">;</span><span class="kd">var</span> <span class="nx">Q</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getListeners</span><span class="p">(</span><span class="nx">M</span><span class="p">,</span><span class="nx">R</span><span class="p">),</span><span class="nx">N</span><span class="p">,</span><span class="nx">K</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">Q</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">N</span><span class="o">=</span><span class="nx">Q</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">N</span><span class="o">&gt;-</span><span class="mi">1</span><span class="p">;</span><span class="nx">N</span><span class="o">--</span><span class="p">){</span><span class="kd">var</span> <span class="nx">L</span><span class="o">=</span><span class="nx">Q</span><span class="p">[</span><span class="nx">N</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">removeListener</span><span class="p">(</span><span class="nx">M</span><span class="p">,</span><span class="nx">L</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="nx">L</span><span class="p">.</span><span class="nx">fn</span><span class="p">);}}</span><span class="k">if</span><span class="p">(</span><span class="nx">P</span><span class="o">&amp;&amp;</span><span class="nx">M</span><span class="o">&amp;&amp;</span><span class="nx">M</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">N</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">K</span><span class="o">=</span><span class="nx">M</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">N</span><span class="o">&lt;</span><span class="nx">K</span><span class="p">;</span><span class="o">++</span><span class="nx">N</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">purgeElement</span><span class="p">(</span><span class="nx">M</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">[</span><span class="nx">N</span><span class="p">],</span><span class="nx">P</span><span class="p">,</span><span class="nx">R</span><span class="p">);}}},</span><span class="nx">getListeners</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">M</span><span class="p">,</span><span class="nx">K</span><span class="p">){</span><span class="kd">var</span> <span class="nx">P</span><span class="o">=</span><span class="p">[],</span><span class="nx">L</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">K</span><span class="p">){</span><span class="nx">L</span><span class="o">=</span><span class="p">[</span><span class="nx">H</span><span class="p">,</span><span class="nx">J</span><span class="p">];}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">K</span><span class="o">===</span><span class="s2">&quot;unload&quot;</span><span class="p">){</span><span class="nx">L</span><span class="o">=</span><span class="p">[</span><span class="nx">J</span><span class="p">];}</span><span class="k">else</span><span class="p">{</span><span class="nx">K</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_getType</span><span class="p">(</span><span class="nx">K</span><span class="p">);</span><span class="nx">L</span><span class="o">=</span><span class="p">[</span><span class="nx">H</span><span class="p">];}}</span><span class="kd">var</span> <span class="nx">R</span><span class="o">=</span><span class="p">(</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">isString</span><span class="p">(</span><span class="nx">M</span><span class="p">))</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">getEl</span><span class="p">(</span><span class="nx">M</span><span class="p">)</span><span class="o">:</span><span class="nx">M</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">O</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">O</span><span class="o">&lt;</span><span class="nx">L</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">O</span><span class="o">=</span><span class="nx">O</span><span class="o">+</span><span class="mi">1</span><span class="p">){</span><span class="kd">var</span> <span class="nx">T</span><span class="o">=</span><span class="nx">L</span><span class="p">[</span><span class="nx">O</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">T</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">Q</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">S</span><span class="o">=</span><span class="nx">T</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">Q</span><span class="o">&lt;</span><span class="nx">S</span><span class="p">;</span><span class="o">++</span><span class="nx">Q</span><span class="p">){</span><span class="kd">var</span> <span class="nx">N</span><span class="o">=</span><span class="nx">T</span><span class="p">[</span><span class="nx">Q</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">N</span><span class="o">&amp;&amp;</span><span class="nx">N</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">EL</span><span class="p">]</span><span class="o">===</span><span class="nx">R</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="o">!</span><span class="nx">K</span><span class="o">||</span><span class="nx">K</span><span class="o">===</span><span class="nx">N</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">TYPE</span><span class="p">])){</span><span class="nx">P</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">type</span><span class="o">:</span><span class="nx">N</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">TYPE</span><span class="p">],</span><span class="nx">fn</span><span class="o">:</span><span class="nx">N</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">FN</span><span class="p">],</span><span class="nx">obj</span><span class="o">:</span><span class="nx">N</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">OBJ</span><span class="p">],</span><span class="nx">adjust</span><span class="o">:</span><span class="nx">N</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">OVERRIDE</span><span class="p">],</span><span class="nx">scope</span><span class="o">:</span><span class="nx">N</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">ADJ_SCOPE</span><span class="p">],</span><span class="nx">index</span><span class="o">:</span><span class="nx">Q</span><span class="p">});}}}}</span><span class="k">return</span><span class="p">(</span><span class="nx">P</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="o">?</span><span class="nx">P</span><span class="o">:</span><span class="kc">null</span><span class="p">;},</span><span class="nx">_unload</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">R</span><span class="p">){</span><span class="kd">var</span> <span class="nx">L</span><span class="o">=</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Event</span><span class="p">,</span><span class="nx">O</span><span class="p">,</span><span class="nx">N</span><span class="p">,</span><span class="nx">M</span><span class="p">,</span><span class="nx">Q</span><span class="p">,</span><span class="nx">P</span><span class="p">,</span><span class="nx">S</span><span class="o">=</span><span class="nx">J</span><span class="p">.</span><span class="nx">slice</span><span class="p">(),</span><span class="nx">K</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">O</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">Q</span><span class="o">=</span><span class="nx">J</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">O</span><span class="o">&lt;</span><span class="nx">Q</span><span class="p">;</span><span class="o">++</span><span class="nx">O</span><span class="p">){</span><span class="nx">M</span><span class="o">=</span><span class="nx">S</span><span class="p">[</span><span class="nx">O</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">M</span><span class="p">){</span><span class="nx">K</span><span class="o">=</span><span class="nb">window</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">M</span><span class="p">[</span><span class="nx">L</span><span class="p">.</span><span class="nx">ADJ_SCOPE</span><span class="p">]){</span><span class="k">if</span><span class="p">(</span><span class="nx">M</span><span class="p">[</span><span class="nx">L</span><span class="p">.</span><span class="nx">ADJ_SCOPE</span><span class="p">]</span><span class="o">===</span><span class="kc">true</span><span class="p">){</span><span class="nx">K</span><span class="o">=</span><span class="nx">M</span><span class="p">[</span><span class="nx">L</span><span class="p">.</span><span class="nx">UNLOAD_OBJ</span><span class="p">];}</span><span class="k">else</span><span class="p">{</span><span class="nx">K</span><span class="o">=</span><span class="nx">M</span><span class="p">[</span><span class="nx">L</span><span class="p">.</span><span class="nx">ADJ_SCOPE</span><span class="p">];}}</span><span class="nx">M</span><span class="p">[</span><span class="nx">L</span><span class="p">.</span><span class="nx">FN</span><span class="p">].</span><span class="nx">call</span><span class="p">(</span><span class="nx">K</span><span class="p">,</span><span class="nx">L</span><span class="p">.</span><span class="nx">getEvent</span><span class="p">(</span><span class="nx">R</span><span class="p">,</span><span class="nx">M</span><span class="p">[</span><span class="nx">L</span><span class="p">.</span><span class="nx">EL</span><span class="p">]),</span><span class="nx">M</span><span class="p">[</span><span class="nx">L</span><span class="p">.</span><span class="nx">UNLOAD_OBJ</span><span class="p">]);</span><span class="nx">S</span><span class="p">[</span><span class="nx">O</span><span class="p">]</span><span class="o">=</span><span class="kc">null</span><span class="p">;}}</span><span class="nx">M</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">K</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">J</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">H</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">N</span><span class="o">=</span><span class="nx">H</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">N</span><span class="o">&gt;-</span><span class="mi">1</span><span class="p">;</span><span class="nx">N</span><span class="o">--</span><span class="p">){</span><span class="nx">M</span><span class="o">=</span><span class="nx">H</span><span class="p">[</span><span class="nx">N</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">M</span><span class="p">){</span><span class="nx">L</span><span class="p">.</span><span class="nx">removeListener</span><span class="p">(</span><span class="nx">M</span><span class="p">[</span><span class="nx">L</span><span class="p">.</span><span class="nx">EL</span><span class="p">],</span><span class="nx">M</span><span class="p">[</span><span class="nx">L</span><span class="p">.</span><span class="nx">TYPE</span><span class="p">],</span><span class="nx">M</span><span class="p">[</span><span class="nx">L</span><span class="p">.</span><span class="nx">FN</span><span class="p">],</span><span class="nx">N</span><span class="p">);}}</span><span class="nx">M</span><span class="o">=</span><span class="kc">null</span><span class="p">;}</span><span class="nx">L</span><span class="p">.</span><span class="nx">_simpleRemove</span><span class="p">(</span><span class="nb">window</span><span class="p">,</span><span class="s2">&quot;unload&quot;</span><span class="p">,</span><span class="nx">L</span><span class="p">.</span><span class="nx">_unload</span><span class="p">);},</span><span class="nx">_getScrollLeft</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_getScroll</span><span class="p">()[</span><span class="mi">1</span><span class="p">];},</span><span class="nx">_getScrollTop</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_getScroll</span><span class="p">()[</span><span class="mi">0</span><span class="p">];},</span><span class="nx">_getScroll</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">K</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">,</span><span class="nx">L</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">K</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">K</span><span class="p">.</span><span class="nx">scrollTop</span><span class="o">||</span><span class="nx">K</span><span class="p">.</span><span class="nx">scrollLeft</span><span class="p">)){</span><span class="k">return</span><span class="p">[</span><span class="nx">K</span><span class="p">.</span><span class="nx">scrollTop</span><span class="p">,</span><span class="nx">K</span><span class="p">.</span><span class="nx">scrollLeft</span><span class="p">];}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">L</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="nx">L</span><span class="p">.</span><span class="nx">scrollTop</span><span class="p">,</span><span class="nx">L</span><span class="p">.</span><span class="nx">scrollLeft</span><span class="p">];}</span><span class="k">else</span><span class="p">{</span><span class="k">return</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">];}}},</span><span class="nx">regCE</span><span class="o">:</span><span class="kd">function</span><span class="p">(){},</span><span class="nx">_simpleAdd</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nb">window</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">M</span><span class="p">,</span><span class="nx">N</span><span class="p">,</span><span class="nx">L</span><span class="p">,</span><span class="nx">K</span><span class="p">){</span><span class="nx">M</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="nx">N</span><span class="p">,</span><span class="nx">L</span><span class="p">,(</span><span class="nx">K</span><span class="p">));};}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nb">window</span><span class="p">.</span><span class="nx">attachEvent</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">M</span><span class="p">,</span><span class="nx">N</span><span class="p">,</span><span class="nx">L</span><span class="p">,</span><span class="nx">K</span><span class="p">){</span><span class="nx">M</span><span class="p">.</span><span class="nx">attachEvent</span><span class="p">(</span><span class="s2">&quot;on&quot;</span><span class="o">+</span><span class="nx">N</span><span class="p">,</span><span class="nx">L</span><span class="p">);};}</span><span class="k">else</span><span class="p">{</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){};}}}(),</span><span class="nx">_simpleRemove</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nb">window</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">M</span><span class="p">,</span><span class="nx">N</span><span class="p">,</span><span class="nx">L</span><span class="p">,</span><span class="nx">K</span><span class="p">){</span><span class="nx">M</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">(</span><span class="nx">N</span><span class="p">,</span><span class="nx">L</span><span class="p">,(</span><span class="nx">K</span><span class="p">));};}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nb">window</span><span class="p">.</span><span class="nx">detachEvent</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">L</span><span class="p">,</span><span class="nx">M</span><span class="p">,</span><span class="nx">K</span><span class="p">){</span><span class="nx">L</span><span class="p">.</span><span class="nx">detachEvent</span><span class="p">(</span><span class="s2">&quot;on&quot;</span><span class="o">+</span><span class="nx">M</span><span class="p">,</span><span class="nx">K</span><span class="p">);};}</span><span class="k">else</span><span class="p">{</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){};}}}()};}();(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">EU</span><span class="o">=</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Event</span><span class="p">;</span><span class="nx">EU</span><span class="p">.</span><span class="nx">on</span><span class="o">=</span><span class="nx">EU</span><span class="p">.</span><span class="nx">addListener</span><span class="p">;</span><span class="nx">EU</span><span class="p">.</span><span class="nx">onFocus</span><span class="o">=</span><span class="nx">EU</span><span class="p">.</span><span class="nx">addFocusListener</span><span class="p">;</span><span class="nx">EU</span><span class="p">.</span><span class="nx">onBlur</span><span class="o">=</span><span class="nx">EU</span><span class="p">.</span><span class="nx">addBlurListener</span><span class="p">;</span>
<span class="cm">/* DOMReady: based on work by: Dean Edwards/John Resig/Matthias Miller/Diego Perini */</span>
<span class="k">if</span><span class="p">(</span><span class="nx">EU</span><span class="p">.</span><span class="nx">isIE</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">self</span><span class="o">!==</span><span class="nx">self</span><span class="p">.</span><span class="nx">top</span><span class="p">){</span><span class="nb">document</span><span class="p">.</span><span class="nx">onreadystatechange</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">readyState</span><span class="o">==</span><span class="s2">&quot;complete&quot;</span><span class="p">){</span><span class="nb">document</span><span class="p">.</span><span class="nx">onreadystatechange</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">EU</span><span class="p">.</span><span class="nx">_ready</span><span class="p">();}};}</span><span class="k">else</span><span class="p">{</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Event</span><span class="p">.</span><span class="nx">onDOMReady</span><span class="p">(</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Event</span><span class="p">.</span><span class="nx">_tryPreloadAttach</span><span class="p">,</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Event</span><span class="p">,</span><span class="kc">true</span><span class="p">);</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;p&quot;</span><span class="p">);</span><span class="nx">EU</span><span class="p">.</span><span class="nx">_dri</span><span class="o">=</span><span class="nx">setInterval</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="k">try</span><span class="p">{</span><span class="nx">n</span><span class="p">.</span><span class="nx">doScroll</span><span class="p">(</span><span class="s2">&quot;left&quot;</span><span class="p">);</span><span class="nx">clearInterval</span><span class="p">(</span><span class="nx">EU</span><span class="p">.</span><span class="nx">_dri</span><span class="p">);</span><span class="nx">EU</span><span class="p">.</span><span class="nx">_dri</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">EU</span><span class="p">.</span><span class="nx">_ready</span><span class="p">();</span><span class="nx">n</span><span class="o">=</span><span class="kc">null</span><span class="p">;}</span><span class="k">catch</span><span class="p">(</span><span class="nx">ex</span><span class="p">){}},</span><span class="nx">EU</span><span class="p">.</span><span class="nx">POLL_INTERVAL</span><span class="p">);}}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">EU</span><span class="p">.</span><span class="nx">webkit</span><span class="o">&amp;&amp;</span><span class="nx">EU</span><span class="p">.</span><span class="nx">webkit</span><span class="o">&lt;</span><span class="mi">525</span><span class="p">){</span><span class="nx">EU</span><span class="p">.</span><span class="nx">_dri</span><span class="o">=</span><span class="nx">setInterval</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">rs</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">readyState</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;loaded&quot;</span><span class="o">==</span><span class="nx">rs</span><span class="o">||</span><span class="s2">&quot;complete&quot;</span><span class="o">==</span><span class="nx">rs</span><span class="p">){</span><span class="nx">clearInterval</span><span class="p">(</span><span class="nx">EU</span><span class="p">.</span><span class="nx">_dri</span><span class="p">);</span><span class="nx">EU</span><span class="p">.</span><span class="nx">_dri</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">EU</span><span class="p">.</span><span class="nx">_ready</span><span class="p">();}},</span><span class="nx">EU</span><span class="p">.</span><span class="nx">POLL_INTERVAL</span><span class="p">);}</span><span class="k">else</span><span class="p">{</span><span class="nx">EU</span><span class="p">.</span><span class="nx">_simpleAdd</span><span class="p">(</span><span class="nb">document</span><span class="p">,</span><span class="s2">&quot;DOMContentLoaded&quot;</span><span class="p">,</span><span class="nx">EU</span><span class="p">.</span><span class="nx">_ready</span><span class="p">);}}</span><span class="nx">EU</span><span class="p">.</span><span class="nx">_simpleAdd</span><span class="p">(</span><span class="nb">window</span><span class="p">,</span><span class="s2">&quot;load&quot;</span><span class="p">,</span><span class="nx">EU</span><span class="p">.</span><span class="nx">_load</span><span class="p">);</span><span class="nx">EU</span><span class="p">.</span><span class="nx">_simpleAdd</span><span class="p">(</span><span class="nb">window</span><span class="p">,</span><span class="s2">&quot;unload&quot;</span><span class="p">,</span><span class="nx">EU</span><span class="p">.</span><span class="nx">_unload</span><span class="p">);</span><span class="nx">EU</span><span class="p">.</span><span class="nx">_tryPreloadAttach</span><span class="p">();})();}</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">EventProvider</span><span class="o">=</span><span class="kd">function</span><span class="p">(){};</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">EventProvider</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">__yui_events</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">__yui_subscribers</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">subscribe</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">A</span><span class="p">,</span><span class="nx">C</span><span class="p">,</span><span class="nx">F</span><span class="p">,</span><span class="nx">E</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">__yui_events</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">__yui_events</span><span class="o">||</span><span class="p">{};</span><span class="kd">var</span> <span class="nx">D</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">__yui_events</span><span class="p">[</span><span class="nx">A</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">D</span><span class="p">){</span><span class="nx">D</span><span class="p">.</span><span class="nx">subscribe</span><span class="p">(</span><span class="nx">C</span><span class="p">,</span><span class="nx">F</span><span class="p">,</span><span class="nx">E</span><span class="p">);}</span><span class="k">else</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">__yui_subscribers</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">__yui_subscribers</span><span class="o">||</span><span class="p">{};</span><span class="kd">var</span> <span class="nx">B</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">__yui_subscribers</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">B</span><span class="p">[</span><span class="nx">A</span><span class="p">]){</span><span class="nx">B</span><span class="p">[</span><span class="nx">A</span><span class="p">]</span><span class="o">=</span><span class="p">[];}</span><span class="nx">B</span><span class="p">[</span><span class="nx">A</span><span class="p">].</span><span class="nx">push</span><span class="p">({</span><span class="nx">fn</span><span class="o">:</span><span class="nx">C</span><span class="p">,</span><span class="nx">obj</span><span class="o">:</span><span class="nx">F</span><span class="p">,</span><span class="nx">overrideContext</span><span class="o">:</span><span class="nx">E</span><span class="p">});}},</span><span class="nx">unsubscribe</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">C</span><span class="p">,</span><span class="nx">E</span><span class="p">,</span><span class="nx">G</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">__yui_events</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">__yui_events</span><span class="o">||</span><span class="p">{};</span><span class="kd">var</span> <span class="nx">A</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">__yui_events</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">C</span><span class="p">){</span><span class="kd">var</span> <span class="nx">F</span><span class="o">=</span><span class="nx">A</span><span class="p">[</span><span class="nx">C</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">F</span><span class="p">){</span><span class="k">return</span> <span class="nx">F</span><span class="p">.</span><span class="nx">unsubscribe</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="nx">G</span><span class="p">);}}</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">B</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">D</span> <span class="k">in</span> <span class="nx">A</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">A</span><span class="p">,</span><span class="nx">D</span><span class="p">)){</span><span class="nx">B</span><span class="o">=</span><span class="nx">B</span><span class="o">&amp;&amp;</span><span class="nx">A</span><span class="p">[</span><span class="nx">D</span><span class="p">].</span><span class="nx">unsubscribe</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="nx">G</span><span class="p">);}}</span><span class="k">return</span> <span class="nx">B</span><span class="p">;}</span><span class="k">return</span> <span class="kc">false</span><span class="p">;},</span><span class="nx">unsubscribeAll</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">A</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">unsubscribe</span><span class="p">(</span><span class="nx">A</span><span class="p">);</span>
<span class="p">},</span><span class="nx">createEvent</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">B</span><span class="p">,</span><span class="nx">G</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">__yui_events</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">__yui_events</span><span class="o">||</span><span class="p">{};</span><span class="kd">var</span> <span class="nx">E</span><span class="o">=</span><span class="nx">G</span><span class="o">||</span><span class="p">{},</span><span class="nx">D</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">__yui_events</span><span class="p">,</span><span class="nx">F</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">D</span><span class="p">[</span><span class="nx">B</span><span class="p">]){}</span><span class="k">else</span><span class="p">{</span><span class="nx">F</span><span class="o">=</span><span class="k">new</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">CustomEvent</span><span class="p">(</span><span class="nx">B</span><span class="p">,</span><span class="nx">E</span><span class="p">.</span><span class="nx">scope</span><span class="o">||</span><span class="k">this</span><span class="p">,</span><span class="nx">E</span><span class="p">.</span><span class="nx">silent</span><span class="p">,</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">CustomEvent</span><span class="p">.</span><span class="nx">FLAT</span><span class="p">,</span><span class="nx">E</span><span class="p">.</span><span class="nx">fireOnce</span><span class="p">);</span><span class="nx">D</span><span class="p">[</span><span class="nx">B</span><span class="p">]</span><span class="o">=</span><span class="nx">F</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">onSubscribeCallback</span><span class="p">){</span><span class="nx">F</span><span class="p">.</span><span class="nx">subscribeEvent</span><span class="p">.</span><span class="nx">subscribe</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">onSubscribeCallback</span><span class="p">);}</span><span class="k">this</span><span class="p">.</span><span class="nx">__yui_subscribers</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">__yui_subscribers</span><span class="o">||</span><span class="p">{};</span><span class="kd">var</span> <span class="nx">A</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">__yui_subscribers</span><span class="p">[</span><span class="nx">B</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">A</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">C</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">C</span><span class="o">&lt;</span><span class="nx">A</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="o">++</span><span class="nx">C</span><span class="p">){</span><span class="nx">F</span><span class="p">.</span><span class="nx">subscribe</span><span class="p">(</span><span class="nx">A</span><span class="p">[</span><span class="nx">C</span><span class="p">].</span><span class="nx">fn</span><span class="p">,</span><span class="nx">A</span><span class="p">[</span><span class="nx">C</span><span class="p">].</span><span class="nx">obj</span><span class="p">,</span><span class="nx">A</span><span class="p">[</span><span class="nx">C</span><span class="p">].</span><span class="nx">overrideContext</span><span class="p">);}}}</span><span class="k">return</span> <span class="nx">D</span><span class="p">[</span><span class="nx">B</span><span class="p">];},</span><span class="nx">fireEvent</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">B</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">__yui_events</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">__yui_events</span><span class="o">||</span><span class="p">{};</span><span class="kd">var</span> <span class="nx">D</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">__yui_events</span><span class="p">[</span><span class="nx">B</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">D</span><span class="p">){</span><span class="k">return</span> <span class="kc">null</span><span class="p">;}</span><span class="kd">var</span> <span class="nx">A</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">C</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">C</span><span class="o">&lt;</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="o">++</span><span class="nx">C</span><span class="p">){</span><span class="nx">A</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">arguments</span><span class="p">[</span><span class="nx">C</span><span class="p">]);}</span><span class="k">return</span> <span class="nx">D</span><span class="p">.</span><span class="nx">fire</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">D</span><span class="p">,</span><span class="nx">A</span><span class="p">);},</span><span class="nx">hasEvent</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">A</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">__yui_events</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">__yui_events</span><span class="p">[</span><span class="nx">A</span><span class="p">]){</span><span class="k">return</span> <span class="kc">true</span><span class="p">;}}</span><span class="k">return</span> <span class="kc">false</span><span class="p">;}};(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">A</span><span class="o">=</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Event</span><span class="p">,</span><span class="nx">C</span><span class="o">=</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="p">;</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">KeyListener</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">D</span><span class="p">,</span><span class="nx">I</span><span class="p">,</span><span class="nx">E</span><span class="p">,</span><span class="nx">F</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">D</span><span class="p">){}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">I</span><span class="p">){}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">E</span><span class="p">){}}}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">F</span><span class="p">){</span><span class="nx">F</span><span class="o">=</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">KeyListener</span><span class="p">.</span><span class="nx">KEYDOWN</span><span class="p">;}</span><span class="kd">var</span> <span class="nx">G</span><span class="o">=</span><span class="k">new</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">CustomEvent</span><span class="p">(</span><span class="s2">&quot;keyPressed&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">enabledEvent</span><span class="o">=</span><span class="k">new</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">CustomEvent</span><span class="p">(</span><span class="s2">&quot;enabled&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">disabledEvent</span><span class="o">=</span><span class="k">new</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">CustomEvent</span><span class="p">(</span><span class="s2">&quot;disabled&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">C</span><span class="p">.</span><span class="nx">isString</span><span class="p">(</span><span class="nx">D</span><span class="p">)){</span><span class="nx">D</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="nx">D</span><span class="p">);}</span><span class="k">if</span><span class="p">(</span><span class="nx">C</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">E</span><span class="p">)){</span><span class="nx">G</span><span class="p">.</span><span class="nx">subscribe</span><span class="p">(</span><span class="nx">E</span><span class="p">);}</span><span class="k">else</span><span class="p">{</span><span class="nx">G</span><span class="p">.</span><span class="nx">subscribe</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">fn</span><span class="p">,</span><span class="nx">E</span><span class="p">.</span><span class="nx">scope</span><span class="p">,</span><span class="nx">E</span><span class="p">.</span><span class="nx">correctScope</span><span class="p">);}</span><span class="kd">function</span> <span class="nx">H</span><span class="p">(</span><span class="nx">O</span><span class="p">,</span><span class="nx">N</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">I</span><span class="p">.</span><span class="nx">shift</span><span class="p">){</span><span class="nx">I</span><span class="p">.</span><span class="nx">shift</span><span class="o">=</span><span class="kc">false</span><span class="p">;}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">I</span><span class="p">.</span><span class="nx">alt</span><span class="p">){</span><span class="nx">I</span><span class="p">.</span><span class="nx">alt</span><span class="o">=</span><span class="kc">false</span><span class="p">;}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">I</span><span class="p">.</span><span class="nx">ctrl</span><span class="p">){</span><span class="nx">I</span><span class="p">.</span><span class="nx">ctrl</span><span class="o">=</span><span class="kc">false</span><span class="p">;}</span><span class="k">if</span><span class="p">(</span><span class="nx">O</span><span class="p">.</span><span class="nx">shiftKey</span><span class="o">==</span><span class="nx">I</span><span class="p">.</span><span class="nx">shift</span><span class="o">&amp;&amp;</span><span class="nx">O</span><span class="p">.</span><span class="nx">altKey</span><span class="o">==</span><span class="nx">I</span><span class="p">.</span><span class="nx">alt</span><span class="o">&amp;&amp;</span><span class="nx">O</span><span class="p">.</span><span class="nx">ctrlKey</span><span class="o">==</span><span class="nx">I</span><span class="p">.</span><span class="nx">ctrl</span><span class="p">){</span><span class="kd">var</span> <span class="nx">J</span><span class="p">,</span><span class="nx">M</span><span class="o">=</span><span class="nx">I</span><span class="p">.</span><span class="nx">keys</span><span class="p">,</span><span class="nx">L</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">M</span><span class="p">)){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">K</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">K</span><span class="o">&lt;</span><span class="nx">M</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">K</span><span class="o">++</span><span class="p">){</span><span class="nx">J</span><span class="o">=</span><span class="nx">M</span><span class="p">[</span><span class="nx">K</span><span class="p">];</span><span class="nx">L</span><span class="o">=</span><span class="nx">A</span><span class="p">.</span><span class="nx">getCharCode</span><span class="p">(</span><span class="nx">O</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">J</span><span class="o">==</span><span class="nx">L</span><span class="p">){</span><span class="nx">G</span><span class="p">.</span><span class="nx">fire</span><span class="p">(</span><span class="nx">L</span><span class="p">,</span><span class="nx">O</span><span class="p">);</span><span class="k">break</span><span class="p">;}}}</span><span class="k">else</span><span class="p">{</span><span class="nx">L</span><span class="o">=</span><span class="nx">A</span><span class="p">.</span><span class="nx">getCharCode</span><span class="p">(</span><span class="nx">O</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">M</span><span class="o">==</span><span class="nx">L</span><span class="p">){</span><span class="nx">G</span><span class="p">.</span><span class="nx">fire</span><span class="p">(</span><span class="nx">L</span><span class="p">,</span><span class="nx">O</span><span class="p">);}}}}</span><span class="k">this</span><span class="p">.</span><span class="nx">enable</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">enabled</span><span class="p">){</span><span class="nx">A</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="nx">D</span><span class="p">,</span><span class="nx">F</span><span class="p">,</span><span class="nx">H</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">enabledEvent</span><span class="p">.</span><span class="nx">fire</span><span class="p">(</span><span class="nx">I</span><span class="p">);}</span><span class="k">this</span><span class="p">.</span><span class="nx">enabled</span><span class="o">=</span><span class="kc">true</span><span class="p">;};</span><span class="k">this</span><span class="p">.</span><span class="nx">disable</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">enabled</span><span class="p">){</span><span class="nx">A</span><span class="p">.</span><span class="nx">removeListener</span><span class="p">(</span><span class="nx">D</span><span class="p">,</span><span class="nx">F</span><span class="p">,</span><span class="nx">H</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">disabledEvent</span><span class="p">.</span><span class="nx">fire</span><span class="p">(</span><span class="nx">I</span><span class="p">);}</span><span class="k">this</span><span class="p">.</span><span class="nx">enabled</span><span class="o">=</span><span class="kc">false</span><span class="p">;};</span><span class="k">this</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;KeyListener [&quot;</span><span class="o">+</span><span class="nx">I</span><span class="p">.</span><span class="nx">keys</span><span class="o">+</span><span class="s2">&quot;] &quot;</span><span class="o">+</span><span class="nx">D</span><span class="p">.</span><span class="nx">tagName</span><span class="o">+</span><span class="p">(</span><span class="nx">D</span><span class="p">.</span><span class="nx">id</span><span class="o">?</span><span class="s2">&quot;[&quot;</span><span class="o">+</span><span class="nx">D</span><span class="p">.</span><span class="nx">id</span><span class="o">+</span><span class="s2">&quot;]&quot;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">);};};</span><span class="kd">var</span> <span class="nx">B</span><span class="o">=</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">KeyListener</span><span class="p">;</span><span class="nx">B</span><span class="p">.</span><span class="nx">KEYDOWN</span><span class="o">=</span><span class="s2">&quot;keydown&quot;</span><span class="p">;</span><span class="nx">B</span><span class="p">.</span><span class="nx">KEYUP</span><span class="o">=</span><span class="s2">&quot;keyup&quot;</span><span class="p">;</span><span class="nx">B</span><span class="p">.</span><span class="nx">KEY</span><span class="o">=</span><span class="p">{</span><span class="nx">ALT</span><span class="o">:</span><span class="mi">18</span><span class="p">,</span><span class="nx">BACK_SPACE</span><span class="o">:</span><span class="mi">8</span><span class="p">,</span><span class="nx">CAPS_LOCK</span><span class="o">:</span><span class="mi">20</span><span class="p">,</span><span class="nx">CONTROL</span><span class="o">:</span><span class="mi">17</span><span class="p">,</span><span class="nx">DELETE</span><span class="o">:</span><span class="mi">46</span><span class="p">,</span><span class="nx">DOWN</span><span class="o">:</span><span class="mi">40</span><span class="p">,</span><span class="nx">END</span><span class="o">:</span><span class="mi">35</span><span class="p">,</span><span class="nx">ENTER</span><span class="o">:</span><span class="mi">13</span><span class="p">,</span><span class="nx">ESCAPE</span><span class="o">:</span><span class="mi">27</span><span class="p">,</span><span class="nx">HOME</span><span class="o">:</span><span class="mi">36</span><span class="p">,</span><span class="nx">LEFT</span><span class="o">:</span><span class="mi">37</span><span class="p">,</span><span class="nx">META</span><span class="o">:</span><span class="mi">224</span><span class="p">,</span><span class="nx">NUM_LOCK</span><span class="o">:</span><span class="mi">144</span><span class="p">,</span><span class="nx">PAGE_DOWN</span><span class="o">:</span><span class="mi">34</span><span class="p">,</span><span class="nx">PAGE_UP</span><span class="o">:</span><span class="mi">33</span><span class="p">,</span><span class="nx">PAUSE</span><span class="o">:</span><span class="mi">19</span><span class="p">,</span><span class="nx">PRINTSCREEN</span><span class="o">:</span><span class="mi">44</span><span class="p">,</span><span class="nx">RIGHT</span><span class="o">:</span><span class="mi">39</span><span class="p">,</span><span class="nx">SCROLL_LOCK</span><span class="o">:</span><span class="mi">145</span><span class="p">,</span><span class="nx">SHIFT</span><span class="o">:</span><span class="mi">16</span><span class="p">,</span><span class="nx">SPACE</span><span class="o">:</span><span class="mi">32</span><span class="p">,</span><span class="nx">TAB</span><span class="o">:</span><span class="mi">9</span><span class="p">,</span><span class="nx">UP</span><span class="o">:</span><span class="mi">38</span><span class="p">};})();</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">register</span><span class="p">(</span><span class="s2">&quot;event&quot;</span><span class="p">,</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Event</span><span class="p">,{</span><span class="nx">version</span><span class="o">:</span><span class="s2">&quot;2.8.0r4&quot;</span><span class="p">,</span><span class="nx">build</span><span class="o">:</span><span class="s2">&quot;2446&quot;</span><span class="p">});</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">register</span><span class="p">(</span><span class="s2">&quot;yahoo-dom-event&quot;</span><span class="p">,</span> <span class="nx">YAHOO</span><span class="p">,</span> <span class="p">{</span><span class="nx">version</span><span class="o">:</span> <span class="s2">&quot;2.8.0r4&quot;</span><span class="p">,</span> <span class="nx">build</span><span class="o">:</span> <span class="s2">&quot;2446&quot;</span><span class="p">});</span>
<span class="cm">/*</span>
<span class="cm">Copyright (c) 2009, Yahoo! Inc. All rights reserved.</span>
<span class="cm">Code licensed under the BSD License:</span>
<span class="cm">http://developer.yahoo.net/yui/license.txt</span>
<span class="cm">version: 2.8.0r4</span>
<span class="cm">*/</span>
<span class="nx">YAHOO</span><span class="p">.</span><span class="nx">widget</span><span class="p">.</span><span class="nx">LogMsg</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">A</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">msg</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">time</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">category</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">source</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">sourceDetail</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">A</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">A</span><span class="p">.</span><span class="nx">constructor</span><span class="o">==</span><span class="nb">Object</span><span class="p">)){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">B</span> <span class="k">in</span> <span class="nx">A</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">A</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">B</span><span class="p">)){</span><span class="k">this</span><span class="p">[</span><span class="nx">B</span><span class="p">]</span><span class="o">=</span><span class="nx">A</span><span class="p">[</span><span class="nx">B</span><span class="p">];}}}};</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">widget</span><span class="p">.</span><span class="nx">LogWriter</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">A</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">A</span><span class="p">){</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;Could not instantiate LogWriter due to invalid source.&quot;</span><span class="p">,</span><span class="s2">&quot;error&quot;</span><span class="p">,</span><span class="s2">&quot;LogWriter&quot;</span><span class="p">);</span><span class="k">return</span><span class="p">;}</span><span class="k">this</span><span class="p">.</span><span class="nx">_source</span><span class="o">=</span><span class="nx">A</span><span class="p">;};</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">widget</span><span class="p">.</span><span class="nx">LogWriter</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toString</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;LogWriter &quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">_sSource</span><span class="p">;};</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">widget</span><span class="p">.</span><span class="nx">LogWriter</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">log</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">A</span><span class="p">,</span><span class="nx">B</span><span class="p">){</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">widget</span><span class="p">.</span><span class="nx">Logger</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">A</span><span class="p">,</span><span class="nx">B</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_source</span><span class="p">);};</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">widget</span><span class="p">.</span><span class="nx">LogWriter</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getSource</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_source</span><span class="p">;};</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">widget</span><span class="p">.</span><span class="nx">LogWriter</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">setSource</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">A</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">A</span><span class="p">){</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;Could not set source due to invalid source.&quot;</span><span class="p">,</span><span class="s2">&quot;error&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">toString</span><span class="p">());</span><span class="k">return</span><span class="p">;}</span><span class="k">else</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">_source</span><span class="o">=</span><span class="nx">A</span><span class="p">;}};</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">widget</span><span class="p">.</span><span class="nx">LogWriter</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">_source</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">widget</span><span class="p">.</span><span class="nx">Logger</span><span class="p">){</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">widget</span><span class="p">.</span><span class="nx">Logger</span><span class="o">=</span><span class="p">{</span><span class="nx">loggerEnabled</span><span class="o">:</span><span class="kc">true</span><span class="p">,</span><span class="nx">_browserConsoleEnabled</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="nx">categories</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;info&quot;</span><span class="p">,</span><span class="s2">&quot;warn&quot;</span><span class="p">,</span><span class="s2">&quot;error&quot;</span><span class="p">,</span><span class="s2">&quot;time&quot;</span><span class="p">,</span><span class="s2">&quot;window&quot;</span><span class="p">],</span><span class="nx">sources</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;global&quot;</span><span class="p">],</span><span class="nx">_stack</span><span class="o">:</span><span class="p">[],</span><span class="nx">maxStackEntries</span><span class="o">:</span><span class="mi">2500</span><span class="p">,</span><span class="nx">_startTime</span><span class="o">:</span><span class="k">new</span> <span class="nb">Date</span><span class="p">().</span><span class="nx">getTime</span><span class="p">(),</span><span class="nx">_lastTime</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">_windowErrorsHandled</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="nx">_origOnWindowError</span><span class="o">:</span><span class="kc">null</span><span class="p">};</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">widget</span><span class="p">.</span><span class="nx">Logger</span><span class="p">.</span><span class="nx">log</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">B</span><span class="p">,</span><span class="nx">F</span><span class="p">,</span><span class="nx">G</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">loggerEnabled</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">F</span><span class="p">){</span><span class="nx">F</span><span class="o">=</span><span class="s2">&quot;info&quot;</span><span class="p">;}</span><span class="k">else</span><span class="p">{</span><span class="nx">F</span><span class="o">=</span><span class="nx">F</span><span class="p">.</span><span class="nx">toLocaleLowerCase</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_isNewCategory</span><span class="p">(</span><span class="nx">F</span><span class="p">)){</span><span class="k">this</span><span class="p">.</span><span class="nx">_createNewCategory</span><span class="p">(</span><span class="nx">F</span><span class="p">);}}</span><span class="kd">var</span> <span class="nx">C</span><span class="o">=</span><span class="s2">&quot;global&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">A</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">G</span><span class="p">){</span><span class="kd">var</span> <span class="nx">D</span><span class="o">=</span><span class="nx">G</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">D</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">){</span><span class="nx">C</span><span class="o">=</span><span class="nx">G</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">D</span><span class="p">);</span><span class="nx">A</span><span class="o">=</span><span class="nx">G</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="nx">D</span><span class="p">,</span><span class="nx">G</span><span class="p">.</span><span class="nx">length</span><span class="p">);}</span><span class="k">else</span><span class="p">{</span><span class="nx">C</span><span class="o">=</span><span class="nx">G</span><span class="p">;}</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_isNewSource</span><span class="p">(</span><span class="nx">C</span><span class="p">)){</span><span class="k">this</span><span class="p">.</span><span class="nx">_createNewSource</span><span class="p">(</span><span class="nx">C</span><span class="p">);}}</span><span class="kd">var</span> <span class="nx">H</span><span class="o">=</span><span class="k">new</span> <span class="nb">Date</span><span class="p">();</span><span class="kd">var</span> <span class="nx">J</span><span class="o">=</span><span class="k">new</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">widget</span><span class="p">.</span><span class="nx">LogMsg</span><span class="p">({</span><span class="nx">msg</span><span class="o">:</span><span class="nx">B</span><span class="p">,</span><span class="nx">time</span><span class="o">:</span><span class="nx">H</span><span class="p">,</span><span class="nx">category</span><span class="o">:</span><span class="nx">F</span><span class="p">,</span><span class="nx">source</span><span class="o">:</span><span class="nx">C</span><span class="p">,</span><span class="nx">sourceDetail</span><span class="o">:</span><span class="nx">A</span><span class="p">});</span><span class="kd">var</span> <span class="nx">I</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_stack</span><span class="p">;</span><span class="kd">var</span> <span class="nx">E</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">maxStackEntries</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">E</span><span class="o">&amp;&amp;!</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">E</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">I</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;=</span><span class="nx">E</span><span class="p">)){</span><span class="nx">I</span><span class="p">.</span><span class="nx">shift</span><span class="p">();}</span><span class="nx">I</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">J</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">newLogEvent</span><span class="p">.</span><span class="nx">fire</span><span class="p">(</span><span class="nx">J</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_browserConsoleEnabled</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_printToBrowserConsole</span><span class="p">(</span><span class="nx">J</span><span class="p">);}</span><span class="k">return</span> <span class="kc">true</span><span class="p">;}</span><span class="k">else</span><span class="p">{</span><span class="k">return</span> <span class="kc">false</span><span class="p">;}};</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">widget</span><span class="p">.</span><span class="nx">Logger</span><span class="p">.</span><span class="nx">reset</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_stack</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">_startTime</span><span class="o">=</span><span class="k">new</span> <span class="nb">Date</span><span class="p">().</span><span class="nx">getTime</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">loggerEnabled</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;Logger reset&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">logResetEvent</span><span class="p">.</span><span class="nx">fire</span><span class="p">();};</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">widget</span><span class="p">.</span><span class="nx">Logger</span><span class="p">.</span><span class="nx">getStack</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_stack</span><span class="p">;};</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">widget</span><span class="p">.</span><span class="nx">Logger</span><span class="p">.</span><span class="nx">getStartTime</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_startTime</span><span class="p">;};</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">widget</span><span class="p">.</span><span class="nx">Logger</span><span class="p">.</span><span class="nx">disableBrowserConsole</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;Logger output to the function console.log() has been disabled.&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_browserConsoleEnabled</span><span class="o">=</span><span class="kc">false</span><span class="p">;};</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">widget</span><span class="p">.</span><span class="nx">Logger</span><span class="p">.</span><span class="nx">enableBrowserConsole</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_browserConsoleEnabled</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;Logger output to the function console.log() has been enabled.&quot;</span><span class="p">);};</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">widget</span><span class="p">.</span><span class="nx">Logger</span><span class="p">.</span><span class="nx">handleWindowErrors</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">widget</span><span class="p">.</span><span class="nx">Logger</span><span class="p">.</span><span class="nx">_windowErrorsHandled</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nb">window</span><span class="p">.</span><span class="nx">error</span><span class="p">){</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">widget</span><span class="p">.</span><span class="nx">Logger</span><span class="p">.</span><span class="nx">_origOnWindowError</span><span class="o">=</span><span class="nb">window</span><span class="p">.</span><span class="nx">onerror</span><span class="p">;}</span><span class="nb">window</span><span class="p">.</span><span class="nx">onerror</span><span class="o">=</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">widget</span><span class="p">.</span><span class="nx">Logger</span><span class="p">.</span><span class="nx">_onWindowError</span><span class="p">;</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">widget</span><span class="p">.</span><span class="nx">Logger</span><span class="p">.</span><span class="nx">_windowErrorsHandled</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;Logger handling of window.onerror has been enabled.&quot;</span><span class="p">);}</span><span class="k">else</span><span class="p">{</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;Logger handling of window.onerror had already been enabled.&quot;</span><span class="p">);}};</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">widget</span><span class="p">.</span><span class="nx">Logger</span><span class="p">.</span><span class="nx">unhandleWindowErrors</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">widget</span><span class="p">.</span><span class="nx">Logger</span><span class="p">.</span><span class="nx">_windowErrorsHandled</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">widget</span><span class="p">.</span><span class="nx">Logger</span><span class="p">.</span><span class="nx">_origOnWindowError</span><span class="p">){</span><span class="nb">window</span><span class="p">.</span><span class="nx">onerror</span><span class="o">=</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">widget</span><span class="p">.</span><span class="nx">Logger</span><span class="p">.</span><span class="nx">_origOnWindowError</span><span class="p">;</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">widget</span><span class="p">.</span><span class="nx">Logger</span><span class="p">.</span><span class="nx">_origOnWindowError</span><span class="o">=</span><span class="kc">null</span><span class="p">;}</span><span class="k">else</span><span class="p">{</span><span class="nb">window</span><span class="p">.</span><span class="nx">onerror</span><span class="o">=</span><span class="kc">null</span><span class="p">;}</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">widget</span><span class="p">.</span><span class="nx">Logger</span><span class="p">.</span><span class="nx">_windowErrorsHandled</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;Logger handling of window.onerror has been disabled.&quot;</span><span class="p">);}</span><span class="k">else</span><span class="p">{</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;Logger handling of window.onerror had already been disabled.&quot;</span><span class="p">);}};</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">widget</span><span class="p">.</span><span class="nx">Logger</span><span class="p">.</span><span class="nx">categoryCreateEvent</span><span class="o">=</span><span class="k">new</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">CustomEvent</span><span class="p">(</span><span class="s2">&quot;categoryCreate&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">,</span><span class="kc">true</span><span class="p">);</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">widget</span><span class="p">.</span><span class="nx">Logger</span><span class="p">.</span><span class="nx">sourceCreateEvent</span><span class="o">=</span><span class="k">new</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">CustomEvent</span><span class="p">(</span><span class="s2">&quot;sourceCreate&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">,</span><span class="kc">true</span><span class="p">);</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">widget</span><span class="p">.</span><span class="nx">Logger</span><span class="p">.</span><span class="nx">newLogEvent</span><span class="o">=</span><span class="k">new</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">CustomEvent</span><span class="p">(</span><span class="s2">&quot;newLog&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">,</span><span class="kc">true</span><span class="p">);</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">widget</span><span class="p">.</span><span class="nx">Logger</span><span class="p">.</span><span class="nx">logResetEvent</span><span class="o">=</span><span class="k">new</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">CustomEvent</span><span class="p">(</span><span class="s2">&quot;logReset&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">,</span><span class="kc">true</span><span class="p">);</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">widget</span><span class="p">.</span><span class="nx">Logger</span><span class="p">.</span><span class="nx">_createNewCategory</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">A</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">categories</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">A</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">categoryCreateEvent</span><span class="p">.</span><span class="nx">fire</span><span class="p">(</span><span class="nx">A</span><span class="p">);};</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">widget</span><span class="p">.</span><span class="nx">Logger</span><span class="p">.</span><span class="nx">_isNewCategory</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">B</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">A</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">A</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">categories</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">A</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">B</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">categories</span><span class="p">[</span><span class="nx">A</span><span class="p">]){</span><span class="k">return</span> <span class="kc">false</span><span class="p">;}}</span><span class="k">return</span> <span class="kc">true</span><span class="p">;};</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">widget</span><span class="p">.</span><span class="nx">Logger</span><span class="p">.</span><span class="nx">_createNewSource</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">A</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">sources</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">A</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">sourceCreateEvent</span><span class="p">.</span><span class="nx">fire</span><span class="p">(</span><span class="nx">A</span><span class="p">);};</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">widget</span><span class="p">.</span><span class="nx">Logger</span><span class="p">.</span><span class="nx">_isNewSource</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">A</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">A</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">B</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">B</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">sources</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">B</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">A</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">sources</span><span class="p">[</span><span class="nx">B</span><span class="p">]){</span><span class="k">return</span> <span class="kc">false</span><span class="p">;}}</span><span class="k">return</span> <span class="kc">true</span><span class="p">;}};</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">widget</span><span class="p">.</span><span class="nx">Logger</span><span class="p">.</span><span class="nx">_printToBrowserConsole</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">C</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nb">window</span><span class="p">.</span><span class="nx">console</span><span class="o">&amp;&amp;</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">){</span><span class="kd">var</span> <span class="nx">E</span><span class="o">=</span><span class="nx">C</span><span class="p">.</span><span class="nx">category</span><span class="p">;</span><span class="kd">var</span> <span class="nx">D</span><span class="o">=</span><span class="nx">C</span><span class="p">.</span><span class="nx">category</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">4</span><span class="p">).</span><span class="nx">toUpperCase</span><span class="p">();</span><span class="kd">var</span> <span class="nx">G</span><span class="o">=</span><span class="nx">C</span><span class="p">.</span><span class="nx">time</span><span class="p">;</span><span class="kd">var</span> <span class="nx">F</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">G</span><span class="p">.</span><span class="nx">toLocaleTimeString</span><span class="p">){</span><span class="nx">F</span><span class="o">=</span><span class="nx">G</span><span class="p">.</span><span class="nx">toLocaleTimeString</span><span class="p">();}</span><span class="k">else</span><span class="p">{</span><span class="nx">F</span><span class="o">=</span><span class="nx">G</span><span class="p">.</span><span class="nx">toString</span><span class="p">();}</span><span class="kd">var</span> <span class="nx">H</span><span class="o">=</span><span class="nx">G</span><span class="p">.</span><span class="nx">getTime</span><span class="p">();</span><span class="kd">var</span> <span class="nx">B</span><span class="o">=</span><span class="p">(</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">widget</span><span class="p">.</span><span class="nx">Logger</span><span class="p">.</span><span class="nx">_lastTime</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">H</span><span class="o">-</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">widget</span><span class="p">.</span><span class="nx">Logger</span><span class="p">.</span><span class="nx">_lastTime</span><span class="p">)</span><span class="o">:</span><span class="mi">0</span><span class="p">;</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">widget</span><span class="p">.</span><span class="nx">Logger</span><span class="p">.</span><span class="nx">_lastTime</span><span class="o">=</span><span class="nx">H</span><span class="p">;</span><span class="kd">var</span> <span class="nx">A</span><span class="o">=</span><span class="nx">F</span><span class="o">+</span><span class="s2">&quot; (&quot;</span><span class="o">+</span><span class="nx">B</span><span class="o">+</span><span class="s2">&quot;ms): &quot;</span><span class="o">+</span><span class="nx">C</span><span class="p">.</span><span class="nx">source</span><span class="o">+</span><span class="s2">&quot;: &quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">ua</span><span class="p">.</span><span class="nx">webkit</span><span class="p">){</span><span class="nx">A</span><span class="o">+=</span><span class="nx">C</span><span class="p">.</span><span class="nx">msg</span><span class="p">;}</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">A</span><span class="p">,</span><span class="nx">C</span><span class="p">.</span><span class="nx">msg</span><span class="p">);}};</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">widget</span><span class="p">.</span><span class="nx">Logger</span><span class="p">.</span><span class="nx">_onWindowError</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">A</span><span class="p">,</span><span class="nx">C</span><span class="p">,</span><span class="nx">B</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">widget</span><span class="p">.</span><span class="nx">Logger</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">A</span><span class="o">+</span><span class="s2">&quot; (&quot;</span><span class="o">+</span><span class="nx">C</span><span class="o">+</span><span class="s2">&quot;, line &quot;</span><span class="o">+</span><span class="nx">B</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="p">,</span><span class="s2">&quot;window&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">widget</span><span class="p">.</span><span class="nx">Logger</span><span class="p">.</span><span class="nx">_origOnWindowError</span><span class="p">){</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">widget</span><span class="p">.</span><span class="nx">Logger</span><span class="p">.</span><span class="nx">_origOnWindowError</span><span class="p">();}}</span><span class="k">catch</span><span class="p">(</span><span class="nx">D</span><span class="p">){</span><span class="k">return</span> <span class="kc">false</span><span class="p">;}};</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">widget</span><span class="p">.</span><span class="nx">Logger</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;Logger initialized&quot;</span><span class="p">);}(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">C</span><span class="o">=</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">widget</span><span class="p">.</span><span class="nx">Logger</span><span class="p">,</span><span class="nx">D</span><span class="o">=</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">,</span><span class="nx">E</span><span class="o">=</span><span class="nx">D</span><span class="p">.</span><span class="nx">Dom</span><span class="p">,</span><span class="nx">A</span><span class="o">=</span><span class="nx">D</span><span class="p">.</span><span class="nx">Event</span><span class="p">,</span><span class="nx">G</span><span class="o">=</span><span class="nb">document</span><span class="p">;</span><span class="kd">function</span> <span class="nx">B</span><span class="p">(</span><span class="nx">I</span><span class="p">,</span><span class="nx">H</span><span class="p">){</span><span class="nx">I</span><span class="o">=</span><span class="nx">G</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="nx">I</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">H</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">J</span> <span class="k">in</span> <span class="nx">H</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">H</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">J</span><span class="p">)){</span><span class="nx">I</span><span class="p">[</span><span class="nx">J</span><span class="p">]</span><span class="o">=</span><span class="nx">H</span><span class="p">[</span><span class="nx">J</span><span class="p">];}}}</span><span class="k">return</span> <span class="nx">I</span><span class="p">;}</span><span class="kd">function</span> <span class="nx">F</span><span class="p">(</span><span class="nx">I</span><span class="p">,</span><span class="nx">H</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_sName</span><span class="o">=</span><span class="nx">F</span><span class="p">.</span><span class="nx">_index</span><span class="p">;</span><span class="nx">F</span><span class="p">.</span><span class="nx">_index</span><span class="o">++</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_init</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">autoRender</span><span class="o">!==</span><span class="kc">false</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">render</span><span class="p">();}}</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">augmentObject</span><span class="p">(</span><span class="nx">F</span><span class="p">,{</span><span class="nx">_index</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">ENTRY_TEMPLATE</span><span class="o">:</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">B</span><span class="p">(</span><span class="s2">&quot;pre&quot;</span><span class="p">,{</span><span class="nx">className</span><span class="o">:</span><span class="s2">&quot;yui-log-entry&quot;</span><span class="p">});})(),</span><span class="nx">VERBOSE_TEMPLATE</span><span class="o">:</span><span class="s2">&quot;&lt;p&gt;&lt;span class=&#39;{category}&#39;&gt;{label}&lt;/span&gt; {totalTime}ms (+{elapsedTime}) {localTime}:&lt;/p&gt;&lt;p&gt;{sourceAndDetail}&lt;/p&gt;&lt;p&gt;{message}&lt;/p&gt;&quot;</span><span class="p">,</span><span class="nx">BASIC_TEMPLATE</span><span class="o">:</span><span class="s2">&quot;&lt;p&gt;&lt;span class=&#39;{category}&#39;&gt;{label}&lt;/span&gt; {totalTime}ms (+{elapsedTime}) {localTime}: {sourceAndDetail}: {message}&lt;/p&gt;&quot;</span><span class="p">});</span><span class="nx">F</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">logReaderEnabled</span><span class="o">:</span><span class="kc">true</span><span class="p">,</span><span class="nx">width</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">top</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">left</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">right</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">bottom</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">fontSize</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">footerEnabled</span><span class="o">:</span><span class="kc">true</span><span class="p">,</span><span class="nx">verboseOutput</span><span class="o">:</span><span class="kc">true</span><span class="p">,</span><span class="nx">entryFormat</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">newestOnTop</span><span class="o">:</span><span class="kc">true</span><span class="p">,</span><span class="nx">outputBuffer</span><span class="o">:</span><span class="mi">100</span><span class="p">,</span><span class="nx">thresholdMax</span><span class="o">:</span><span class="mi">500</span><span class="p">,</span><span class="nx">thresholdMin</span><span class="o">:</span><span class="mi">100</span><span class="p">,</span><span class="nx">isCollapsed</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="nx">isPaused</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="nx">draggable</span><span class="o">:</span><span class="kc">true</span><span class="p">,</span><span class="nx">toString</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;LogReader instance&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">_sName</span><span class="p">;},</span><span class="nx">pause</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">isPaused</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_timeout</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">logReaderEnabled</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_btnPause</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_btnPause</span><span class="p">.</span><span class="nx">value</span><span class="o">=</span><span class="s2">&quot;Resume&quot;</span><span class="p">;</span>
<span class="p">}},</span><span class="nx">resume</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">isPaused</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">logReaderEnabled</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_printBuffer</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_btnPause</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_btnPause</span><span class="p">.</span><span class="nx">value</span><span class="o">=</span><span class="s2">&quot;Pause&quot;</span><span class="p">;}},</span><span class="nx">render</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">rendered</span><span class="p">){</span><span class="k">return</span><span class="p">;}</span><span class="k">this</span><span class="p">.</span><span class="nx">_initContainerEl</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">_initHeaderEl</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">_initConsoleEl</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">_initFooterEl</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">_initCategories</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">_initSources</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">_initDragDrop</span><span class="p">();</span><span class="nx">C</span><span class="p">.</span><span class="nx">newLogEvent</span><span class="p">.</span><span class="nx">subscribe</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_onNewLog</span><span class="p">,</span><span class="k">this</span><span class="p">);</span><span class="nx">C</span><span class="p">.</span><span class="nx">logResetEvent</span><span class="p">.</span><span class="nx">subscribe</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_onReset</span><span class="p">,</span><span class="k">this</span><span class="p">);</span><span class="nx">C</span><span class="p">.</span><span class="nx">categoryCreateEvent</span><span class="p">.</span><span class="nx">subscribe</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_onCategoryCreate</span><span class="p">,</span><span class="k">this</span><span class="p">);</span><span class="nx">C</span><span class="p">.</span><span class="nx">sourceCreateEvent</span><span class="p">.</span><span class="nx">subscribe</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_onSourceCreate</span><span class="p">,</span><span class="k">this</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">rendered</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_filterLogs</span><span class="p">();},</span><span class="nx">destroy</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">A</span><span class="p">.</span><span class="nx">purgeElement</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_elContainer</span><span class="p">,</span><span class="kc">true</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_elContainer</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_elContainer</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_elContainer</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">rendered</span><span class="o">=</span><span class="kc">false</span><span class="p">;},</span><span class="nx">hide</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_elContainer</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="s2">&quot;none&quot;</span><span class="p">;},</span><span class="nx">show</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_elContainer</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="s2">&quot;block&quot;</span><span class="p">;},</span><span class="nx">collapse</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_elConsole</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="s2">&quot;none&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_elFt</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_elFt</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="s2">&quot;none&quot;</span><span class="p">;}</span><span class="k">this</span><span class="p">.</span><span class="nx">_btnCollapse</span><span class="p">.</span><span class="nx">value</span><span class="o">=</span><span class="s2">&quot;Expand&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">isCollapsed</span><span class="o">=</span><span class="kc">true</span><span class="p">;},</span><span class="nx">expand</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_elConsole</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="s2">&quot;block&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_elFt</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_elFt</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="s2">&quot;block&quot;</span><span class="p">;}</span><span class="k">this</span><span class="p">.</span><span class="nx">_btnCollapse</span><span class="p">.</span><span class="nx">value</span><span class="o">=</span><span class="s2">&quot;Collapse&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">isCollapsed</span><span class="o">=</span><span class="kc">false</span><span class="p">;},</span><span class="nx">getCheckbox</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">H</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_filterCheckboxes</span><span class="p">[</span><span class="nx">H</span><span class="p">];},</span><span class="nx">getCategories</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_categoryFilters</span><span class="p">;},</span><span class="nx">showCategory</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">I</span><span class="p">){</span><span class="kd">var</span> <span class="nx">K</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_categoryFilters</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">K</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">K</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">I</span><span class="p">)</span><span class="o">&gt;-</span><span class="mi">1</span><span class="p">){</span><span class="k">return</span><span class="p">;}}</span><span class="k">else</span><span class="p">{</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">H</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">H</span><span class="o">&lt;</span><span class="nx">K</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">H</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">K</span><span class="p">[</span><span class="nx">H</span><span class="p">]</span><span class="o">===</span><span class="nx">I</span><span class="p">){</span><span class="k">return</span><span class="p">;}}}</span><span class="k">this</span><span class="p">.</span><span class="nx">_categoryFilters</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">I</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_filterLogs</span><span class="p">();</span><span class="kd">var</span> <span class="nx">J</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getCheckbox</span><span class="p">(</span><span class="nx">I</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">J</span><span class="p">){</span><span class="nx">J</span><span class="p">.</span><span class="nx">checked</span><span class="o">=</span><span class="kc">true</span><span class="p">;}},</span><span class="nx">hideCategory</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">I</span><span class="p">){</span><span class="kd">var</span> <span class="nx">K</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_categoryFilters</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">H</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">H</span><span class="o">&lt;</span><span class="nx">K</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">H</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">I</span><span class="o">==</span><span class="nx">K</span><span class="p">[</span><span class="nx">H</span><span class="p">]){</span><span class="nx">K</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">H</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="k">break</span><span class="p">;}}</span><span class="k">this</span><span class="p">.</span><span class="nx">_filterLogs</span><span class="p">();</span><span class="kd">var</span> <span class="nx">J</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getCheckbox</span><span class="p">(</span><span class="nx">I</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">J</span><span class="p">){</span><span class="nx">J</span><span class="p">.</span><span class="nx">checked</span><span class="o">=</span><span class="kc">false</span><span class="p">;}},</span><span class="nx">getSources</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_sourceFilters</span><span class="p">;},</span><span class="nx">showSource</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">H</span><span class="p">){</span><span class="kd">var</span> <span class="nx">K</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_sourceFilters</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">K</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">K</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">H</span><span class="p">)</span><span class="o">&gt;-</span><span class="mi">1</span><span class="p">){</span><span class="k">return</span><span class="p">;}}</span><span class="k">else</span><span class="p">{</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">I</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">I</span><span class="o">&lt;</span><span class="nx">K</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">I</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">H</span><span class="o">==</span><span class="nx">K</span><span class="p">[</span><span class="nx">I</span><span class="p">]){</span><span class="k">return</span><span class="p">;}}}</span><span class="nx">K</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">H</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_filterLogs</span><span class="p">();</span><span class="kd">var</span> <span class="nx">J</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getCheckbox</span><span class="p">(</span><span class="nx">H</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">J</span><span class="p">){</span><span class="nx">J</span><span class="p">.</span><span class="nx">checked</span><span class="o">=</span><span class="kc">true</span><span class="p">;}},</span><span class="nx">hideSource</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">H</span><span class="p">){</span><span class="kd">var</span> <span class="nx">K</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_sourceFilters</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">I</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">I</span><span class="o">&lt;</span><span class="nx">K</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">I</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">H</span><span class="o">==</span><span class="nx">K</span><span class="p">[</span><span class="nx">I</span><span class="p">]){</span><span class="nx">K</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">I</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="k">break</span><span class="p">;}}</span><span class="k">this</span><span class="p">.</span><span class="nx">_filterLogs</span><span class="p">();</span><span class="kd">var</span> <span class="nx">J</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getCheckbox</span><span class="p">(</span><span class="nx">H</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">J</span><span class="p">){</span><span class="nx">J</span><span class="p">.</span><span class="nx">checked</span><span class="o">=</span><span class="kc">false</span><span class="p">;}},</span><span class="nx">clearConsole</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_timeout</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_buffer</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">_consoleMsgCount</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">H</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_elConsole</span><span class="p">;</span><span class="nx">H</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;},</span><span class="nx">setTitle</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">H</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_title</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">html2Text</span><span class="p">(</span><span class="nx">H</span><span class="p">);},</span><span class="nx">getLastTime</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_lastTime</span><span class="p">;},</span><span class="nx">formatMsg</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">I</span><span class="p">){</span><span class="kd">var</span> <span class="nx">H</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">entryFormat</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">verboseOutput</span><span class="o">?</span><span class="nx">F</span><span class="p">.</span><span class="nx">VERBOSE_TEMPLATE</span><span class="o">:</span><span class="nx">F</span><span class="p">.</span><span class="nx">BASIC_TEMPLATE</span><span class="p">),</span><span class="nx">J</span><span class="o">=</span><span class="p">{</span><span class="nx">category</span><span class="o">:</span><span class="nx">I</span><span class="p">.</span><span class="nx">category</span><span class="p">,</span><span class="nx">label</span><span class="o">:</span><span class="nx">I</span><span class="p">.</span><span class="nx">category</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">4</span><span class="p">).</span><span class="nx">toUpperCase</span><span class="p">(),</span><span class="nx">sourceAndDetail</span><span class="o">:</span><span class="nx">I</span><span class="p">.</span><span class="nx">sourceDetail</span><span class="o">?</span><span class="nx">I</span><span class="p">.</span><span class="nx">source</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">I</span><span class="p">.</span><span class="nx">sourceDetail</span><span class="o">:</span><span class="nx">I</span><span class="p">.</span><span class="nx">source</span><span class="p">,</span><span class="nx">message</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">html2Text</span><span class="p">(</span><span class="nx">I</span><span class="p">.</span><span class="nx">msg</span><span class="o">||</span><span class="nx">I</span><span class="p">.</span><span class="nx">message</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">)};</span><span class="k">if</span><span class="p">(</span><span class="nx">I</span><span class="p">.</span><span class="nx">time</span><span class="o">&amp;&amp;</span><span class="nx">I</span><span class="p">.</span><span class="nx">time</span><span class="p">.</span><span class="nx">getTime</span><span class="p">){</span><span class="nx">J</span><span class="p">.</span><span class="nx">localTime</span><span class="o">=</span><span class="nx">I</span><span class="p">.</span><span class="nx">time</span><span class="p">.</span><span class="nx">toLocaleTimeString</span><span class="o">?</span><span class="nx">I</span><span class="p">.</span><span class="nx">time</span><span class="p">.</span><span class="nx">toLocaleTimeString</span><span class="p">()</span><span class="o">:</span><span class="nx">I</span><span class="p">.</span><span class="nx">time</span><span class="p">.</span><span class="nx">toString</span><span class="p">();</span><span class="nx">J</span><span class="p">.</span><span class="nx">elapsedTime</span><span class="o">=</span><span class="nx">I</span><span class="p">.</span><span class="nx">time</span><span class="p">.</span><span class="nx">getTime</span><span class="p">()</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">getLastTime</span><span class="p">();</span><span class="nx">J</span><span class="p">.</span><span class="nx">totalTime</span><span class="o">=</span><span class="nx">I</span><span class="p">.</span><span class="nx">time</span><span class="p">.</span><span class="nx">getTime</span><span class="p">()</span><span class="o">-</span><span class="nx">C</span><span class="p">.</span><span class="nx">getStartTime</span><span class="p">();}</span><span class="kd">var</span> <span class="nx">K</span><span class="o">=</span><span class="nx">F</span><span class="p">.</span><span class="nx">ENTRY_TEMPLATE</span><span class="p">.</span><span class="nx">cloneNode</span><span class="p">(</span><span class="kc">true</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">verboseOutput</span><span class="p">){</span><span class="nx">K</span><span class="p">.</span><span class="nx">className</span><span class="o">+=</span><span class="s2">&quot; yui-log-verbose&quot;</span><span class="p">;}</span><span class="nx">K</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="nx">H</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\{(\w+)\}/g</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">L</span><span class="p">,</span><span class="nx">M</span><span class="p">){</span><span class="k">return</span><span class="p">(</span><span class="nx">M</span> <span class="k">in</span> <span class="nx">J</span><span class="p">)</span><span class="o">?</span><span class="nx">J</span><span class="p">[</span><span class="nx">M</span><span class="p">]</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">;});</span><span class="k">return</span> <span class="nx">K</span><span class="p">;},</span><span class="nx">html2Text</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">H</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">H</span><span class="p">){</span><span class="nx">H</span><span class="o">+=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">return</span> <span class="nx">H</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/&amp;/g</span><span class="p">,</span><span class="s2">&quot;&amp;#38;&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/&lt;/g</span><span class="p">,</span><span class="s2">&quot;&amp;#60;&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/&gt;/g</span><span class="p">,</span><span class="s2">&quot;&amp;#62;&quot;</span><span class="p">);}</span><span class="k">return</span><span class="s2">&quot;&quot;</span><span class="p">;},</span><span class="nx">_sName</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">_buffer</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">_consoleMsgCount</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">_lastTime</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">_timeout</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">_filterCheckboxes</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">_categoryFilters</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">_sourceFilters</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">_elContainer</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">_elHd</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">_elCollapse</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">_btnCollapse</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">_title</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">_elConsole</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">_elFt</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">_elBtns</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">_elCategoryFilters</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">_elSourceFilters</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">_btnPause</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">_btnClear</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">_init</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">H</span><span class="p">,</span><span class="nx">I</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_buffer</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">_filterCheckboxes</span><span class="o">=</span><span class="p">{};</span><span class="k">this</span><span class="p">.</span><span class="nx">_lastTime</span><span class="o">=</span><span class="nx">C</span><span class="p">.</span><span class="nx">getStartTime</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">I</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">I</span><span class="p">.</span><span class="nx">constructor</span><span class="o">==</span><span class="nb">Object</span><span class="p">)){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">J</span> <span class="k">in</span> <span class="nx">I</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">I</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">J</span><span class="p">)){</span><span class="k">this</span><span class="p">[</span><span class="nx">J</span><span class="p">]</span><span class="o">=</span><span class="nx">I</span><span class="p">[</span><span class="nx">J</span><span class="p">];}}}</span><span class="k">this</span><span class="p">.</span><span class="nx">_elContainer</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">H</span><span class="p">);</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;LogReader initialized&quot;</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">toString</span><span class="p">());},</span><span class="nx">_initContainerEl</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">_elContainer</span><span class="o">||!</span><span class="sr">/div$/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_elContainer</span><span class="p">.</span><span class="nx">tagName</span><span class="p">)){</span><span class="k">this</span><span class="p">.</span><span class="nx">_elContainer</span><span class="o">=</span><span class="nx">G</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">B</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">),</span><span class="nx">G</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">);</span><span class="nx">E</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_elContainer</span><span class="p">,</span><span class="s2">&quot;yui-log-container&quot;</span><span class="p">);}</span><span class="nx">E</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_elContainer</span><span class="p">,</span><span class="s2">&quot;yui-log&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">J</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_elContainer</span><span class="p">.</span><span class="nx">style</span><span class="p">,</span><span class="nx">H</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;width&quot;</span><span class="p">,</span><span class="s2">&quot;right&quot;</span><span class="p">,</span><span class="s2">&quot;top&quot;</span><span class="p">,</span><span class="s2">&quot;fontSize&quot;</span><span class="p">],</span><span class="nx">K</span><span class="p">,</span><span class="nx">I</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">I</span><span class="o">=</span><span class="nx">H</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">I</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="o">--</span><span class="nx">I</span><span class="p">){</span><span class="nx">K</span><span class="o">=</span><span class="nx">H</span><span class="p">[</span><span class="nx">I</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="nx">K</span><span class="p">]){</span><span class="nx">J</span><span class="p">[</span><span class="nx">K</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="p">[</span><span class="nx">K</span><span class="p">];}}</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">left</span><span class="p">){</span><span class="nx">J</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">left</span><span class="p">;</span><span class="nx">J</span><span class="p">.</span><span class="nx">right</span><span class="o">=</span><span class="s2">&quot;auto&quot;</span><span class="p">;}</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">bottom</span><span class="p">){</span><span class="nx">J</span><span class="p">.</span><span class="nx">bottom</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">bottom</span><span class="p">;</span><span class="nx">J</span><span class="p">.</span><span class="nx">top</span><span class="o">=</span><span class="s2">&quot;auto&quot;</span><span class="p">;}</span><span class="k">if</span><span class="p">(</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">ua</span><span class="p">.</span><span class="nx">opera</span><span class="p">){</span><span class="nx">G</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">style</span><span class="o">+=</span><span class="s2">&quot;&quot;</span><span class="p">;}},</span><span class="nx">_initHeaderEl</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_elHd</span><span class="p">){</span><span class="nx">A</span><span class="p">.</span><span class="nx">purgeElement</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_elHd</span><span class="p">,</span><span class="kc">true</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_elHd</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;}</span><span class="k">this</span><span class="p">.</span><span class="nx">_elHd</span><span class="o">=</span><span class="nx">B</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">,{</span><span class="nx">id</span><span class="o">:</span><span class="s2">&quot;yui-log-hd&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">_sName</span><span class="p">,</span><span class="nx">className</span><span class="o">:</span><span class="s2">&quot;yui-log-hd&quot;</span><span class="p">});</span><span class="k">this</span><span class="p">.</span><span class="nx">_elCollapse</span><span class="o">=</span><span class="nx">B</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">,{</span><span class="nx">className</span><span class="o">:</span><span class="s2">&quot;yui-log-btns&quot;</span><span class="p">});</span><span class="k">this</span><span class="p">.</span><span class="nx">_btnCollapse</span><span class="o">=</span><span class="nx">B</span><span class="p">(</span><span class="s2">&quot;input&quot;</span><span class="p">,{</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;button&quot;</span><span class="p">,</span><span class="nx">className</span><span class="o">:</span><span class="s2">&quot;yui-log-button&quot;</span><span class="p">,</span><span class="nx">value</span><span class="o">:</span><span class="s2">&quot;Collapse&quot;</span><span class="p">});</span><span class="nx">A</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_btnCollapse</span><span class="p">,</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_onClickCollapseBtn</span><span class="p">,</span><span class="k">this</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_title</span><span class="o">=</span><span class="nx">B</span><span class="p">(</span><span class="s2">&quot;h4&quot;</span><span class="p">,{</span><span class="nx">innerHTML</span><span class="o">:</span><span class="s2">&quot;Logger Console&quot;</span><span class="p">});</span><span class="k">this</span><span class="p">.</span><span class="nx">_elCollapse</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_btnCollapse</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_elHd</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_elCollapse</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_elHd</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_title</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_elContainer</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_elHd</span><span class="p">);},</span><span class="nx">_initConsoleEl</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_elConsole</span><span class="p">){</span><span class="nx">A</span><span class="p">.</span><span class="nx">purgeElement</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_elConsole</span><span class="p">,</span><span class="kc">true</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_elConsole</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;}</span><span class="k">this</span><span class="p">.</span><span class="nx">_elConsole</span><span class="o">=</span><span class="nx">B</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">,{</span><span class="nx">className</span><span class="o">:</span><span class="s2">&quot;yui-log-bd&quot;</span><span class="p">});</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_elConsole</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="p">;}</span><span class="k">this</span><span class="p">.</span><span class="nx">_elContainer</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_elConsole</span><span class="p">);},</span><span class="nx">_initFooterEl</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">footerEnabled</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_elFt</span><span class="p">){</span><span class="nx">A</span><span class="p">.</span><span class="nx">purgeElement</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_elFt</span><span class="p">,</span><span class="kc">true</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_elFt</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;}</span><span class="k">this</span><span class="p">.</span><span class="nx">_elFt</span><span class="o">=</span><span class="nx">B</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">,{</span><span class="nx">className</span><span class="o">:</span><span class="s2">&quot;yui-log-ft&quot;</span><span class="p">});</span><span class="k">this</span><span class="p">.</span><span class="nx">_elBtns</span><span class="o">=</span><span class="nx">B</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">,{</span><span class="nx">className</span><span class="o">:</span><span class="s2">&quot;yui-log-btns&quot;</span><span class="p">});</span><span class="k">this</span><span class="p">.</span><span class="nx">_btnPause</span><span class="o">=</span><span class="nx">B</span><span class="p">(</span><span class="s2">&quot;input&quot;</span><span class="p">,{</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;button&quot;</span><span class="p">,</span><span class="nx">className</span><span class="o">:</span><span class="s2">&quot;yui-log-button&quot;</span><span class="p">,</span><span class="nx">value</span><span class="o">:</span><span class="s2">&quot;Pause&quot;</span><span class="p">});</span><span class="nx">A</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_btnPause</span><span class="p">,</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_onClickPauseBtn</span><span class="p">,</span><span class="k">this</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_btnClear</span><span class="o">=</span><span class="nx">B</span><span class="p">(</span><span class="s2">&quot;input&quot;</span><span class="p">,{</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;button&quot;</span><span class="p">,</span><span class="nx">className</span><span class="o">:</span><span class="s2">&quot;yui-log-button&quot;</span><span class="p">,</span><span class="nx">value</span><span class="o">:</span><span class="s2">&quot;Clear&quot;</span><span class="p">});</span><span class="nx">A</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_btnClear</span><span class="p">,</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_onClickClearBtn</span><span class="p">,</span><span class="k">this</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_elCategoryFilters</span><span class="o">=</span><span class="nx">B</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">,{</span><span class="nx">className</span><span class="o">:</span><span class="s2">&quot;yui-log-categoryfilters&quot;</span><span class="p">});</span><span class="k">this</span><span class="p">.</span><span class="nx">_elSourceFilters</span><span class="o">=</span><span class="nx">B</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">,{</span><span class="nx">className</span><span class="o">:</span><span class="s2">&quot;yui-log-sourcefilters&quot;</span><span class="p">});</span><span class="k">this</span><span class="p">.</span><span class="nx">_elBtns</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_btnPause</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_elBtns</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_btnClear</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_elFt</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_elBtns</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_elFt</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_elCategoryFilters</span><span class="p">);</span>
<span class="k">this</span><span class="p">.</span><span class="nx">_elFt</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_elSourceFilters</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_elContainer</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_elFt</span><span class="p">);}},</span><span class="nx">_initDragDrop</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nx">D</span><span class="p">.</span><span class="nx">DD</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">draggable</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_elHd</span><span class="p">){</span><span class="kd">var</span> <span class="nx">H</span><span class="o">=</span><span class="k">new</span> <span class="nx">D</span><span class="p">.</span><span class="nx">DD</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_elContainer</span><span class="p">);</span><span class="nx">H</span><span class="p">.</span><span class="nx">setHandleElId</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_elHd</span><span class="p">.</span><span class="nx">id</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_elHd</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">cursor</span><span class="o">=</span><span class="s2">&quot;move&quot;</span><span class="p">;}},</span><span class="nx">_initCategories</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_categoryFilters</span><span class="o">=</span><span class="p">[];</span><span class="kd">var</span> <span class="nx">J</span><span class="o">=</span><span class="nx">C</span><span class="p">.</span><span class="nx">categories</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">H</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">H</span><span class="o">&lt;</span><span class="nx">J</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">H</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">I</span><span class="o">=</span><span class="nx">J</span><span class="p">[</span><span class="nx">H</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">_categoryFilters</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">I</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_elCategoryFilters</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_createCategoryCheckbox</span><span class="p">(</span><span class="nx">I</span><span class="p">);}}},</span><span class="nx">_initSources</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_sourceFilters</span><span class="o">=</span><span class="p">[];</span><span class="kd">var</span> <span class="nx">J</span><span class="o">=</span><span class="nx">C</span><span class="p">.</span><span class="nx">sources</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">I</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">I</span><span class="o">&lt;</span><span class="nx">J</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">I</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">H</span><span class="o">=</span><span class="nx">J</span><span class="p">[</span><span class="nx">I</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">_sourceFilters</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">H</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_elSourceFilters</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_createSourceCheckbox</span><span class="p">(</span><span class="nx">H</span><span class="p">);}}},</span><span class="nx">_createCategoryCheckbox</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">K</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_elFt</span><span class="p">){</span><span class="kd">var</span> <span class="nx">J</span><span class="o">=</span><span class="nx">B</span><span class="p">(</span><span class="s2">&quot;span&quot;</span><span class="p">,{</span><span class="nx">className</span><span class="o">:</span><span class="s2">&quot;yui-log-filtergrp&quot;</span><span class="p">}),</span><span class="nx">H</span><span class="o">=</span><span class="nx">B</span><span class="p">(</span><span class="s2">&quot;input&quot;</span><span class="p">,{</span><span class="nx">id</span><span class="o">:</span><span class="s2">&quot;yui-log-filter-&quot;</span><span class="o">+</span><span class="nx">K</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">_sName</span><span class="p">,</span><span class="nx">className</span><span class="o">:</span><span class="s2">&quot;yui-log-filter-&quot;</span><span class="o">+</span><span class="nx">K</span><span class="p">,</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;checkbox&quot;</span><span class="p">,</span><span class="nx">category</span><span class="o">:</span><span class="nx">K</span><span class="p">}),</span><span class="nx">I</span><span class="o">=</span><span class="nx">B</span><span class="p">(</span><span class="s2">&quot;label&quot;</span><span class="p">,{</span><span class="nx">htmlFor</span><span class="o">:</span><span class="nx">H</span><span class="p">.</span><span class="nx">id</span><span class="p">,</span><span class="nx">className</span><span class="o">:</span><span class="nx">K</span><span class="p">,</span><span class="nx">innerHTML</span><span class="o">:</span><span class="nx">K</span><span class="p">});</span><span class="nx">A</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="nx">H</span><span class="p">,</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_onCheckCategory</span><span class="p">,</span><span class="k">this</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_filterCheckboxes</span><span class="p">[</span><span class="nx">K</span><span class="p">]</span><span class="o">=</span><span class="nx">H</span><span class="p">;</span><span class="nx">J</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">H</span><span class="p">);</span><span class="nx">J</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">I</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_elCategoryFilters</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">J</span><span class="p">);</span><span class="nx">H</span><span class="p">.</span><span class="nx">checked</span><span class="o">=</span><span class="kc">true</span><span class="p">;}},</span><span class="nx">_createSourceCheckbox</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">H</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_elFt</span><span class="p">){</span><span class="kd">var</span> <span class="nx">K</span><span class="o">=</span><span class="nx">B</span><span class="p">(</span><span class="s2">&quot;span&quot;</span><span class="p">,{</span><span class="nx">className</span><span class="o">:</span><span class="s2">&quot;yui-log-filtergrp&quot;</span><span class="p">}),</span><span class="nx">I</span><span class="o">=</span><span class="nx">B</span><span class="p">(</span><span class="s2">&quot;input&quot;</span><span class="p">,{</span><span class="nx">id</span><span class="o">:</span><span class="s2">&quot;yui-log-filter-&quot;</span><span class="o">+</span><span class="nx">H</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">_sName</span><span class="p">,</span><span class="nx">className</span><span class="o">:</span><span class="s2">&quot;yui-log-filter-&quot;</span><span class="o">+</span><span class="nx">H</span><span class="p">,</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;checkbox&quot;</span><span class="p">,</span><span class="nx">source</span><span class="o">:</span><span class="nx">H</span><span class="p">}),</span><span class="nx">J</span><span class="o">=</span><span class="nx">B</span><span class="p">(</span><span class="s2">&quot;label&quot;</span><span class="p">,{</span><span class="nx">htmlFor</span><span class="o">:</span><span class="nx">I</span><span class="p">.</span><span class="nx">id</span><span class="p">,</span><span class="nx">className</span><span class="o">:</span><span class="nx">H</span><span class="p">,</span><span class="nx">innerHTML</span><span class="o">:</span><span class="nx">H</span><span class="p">});</span><span class="nx">A</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="nx">I</span><span class="p">,</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_onCheckSource</span><span class="p">,</span><span class="k">this</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_filterCheckboxes</span><span class="p">[</span><span class="nx">H</span><span class="p">]</span><span class="o">=</span><span class="nx">I</span><span class="p">;</span><span class="nx">K</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">I</span><span class="p">);</span><span class="nx">K</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">J</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_elSourceFilters</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">K</span><span class="p">);</span><span class="nx">I</span><span class="p">.</span><span class="nx">checked</span><span class="o">=</span><span class="kc">true</span><span class="p">;}},</span><span class="nx">_filterLogs</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_elConsole</span><span class="o">!==</span><span class="kc">null</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">clearConsole</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">_printToConsole</span><span class="p">(</span><span class="nx">C</span><span class="p">.</span><span class="nx">getStack</span><span class="p">());}},</span><span class="nx">_printBuffer</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_timeout</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_elConsole</span><span class="o">!==</span><span class="kc">null</span><span class="p">){</span><span class="kd">var</span> <span class="nx">I</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">thresholdMax</span><span class="p">;</span><span class="nx">I</span><span class="o">=</span><span class="p">(</span><span class="nx">I</span><span class="o">&amp;&amp;!</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">I</span><span class="p">))</span><span class="o">?</span><span class="nx">I</span><span class="o">:</span><span class="mi">500</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_consoleMsgCount</span><span class="o">&lt;</span><span class="nx">I</span><span class="p">){</span><span class="kd">var</span> <span class="nx">H</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">J</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">J</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">_buffer</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">J</span><span class="o">++</span><span class="p">){</span><span class="nx">H</span><span class="p">[</span><span class="nx">J</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_buffer</span><span class="p">[</span><span class="nx">J</span><span class="p">];}</span><span class="k">this</span><span class="p">.</span><span class="nx">_buffer</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">_printToConsole</span><span class="p">(</span><span class="nx">H</span><span class="p">);}</span><span class="k">else</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">_filterLogs</span><span class="p">();}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">newestOnTop</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_elConsole</span><span class="p">.</span><span class="nx">scrollTop</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_elConsole</span><span class="p">.</span><span class="nx">scrollHeight</span><span class="p">;}}},</span><span class="nx">_printToConsole</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">P</span><span class="p">){</span><span class="kd">var</span> <span class="nx">I</span><span class="o">=</span><span class="nx">P</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">T</span><span class="o">=</span><span class="nx">G</span><span class="p">.</span><span class="nx">createDocumentFragment</span><span class="p">(),</span><span class="nx">W</span><span class="o">=</span><span class="p">[],</span><span class="nx">X</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">thresholdMin</span><span class="p">,</span><span class="nx">J</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_sourceFilters</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">U</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_categoryFilters</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">R</span><span class="p">,</span><span class="nx">O</span><span class="p">,</span><span class="nx">N</span><span class="p">,</span><span class="nx">M</span><span class="p">,</span><span class="nx">S</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">X</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">X</span><span class="o">&gt;</span><span class="k">this</span><span class="p">.</span><span class="nx">thresholdMax</span><span class="p">)){</span><span class="nx">X</span><span class="o">=</span><span class="mi">0</span><span class="p">;}</span><span class="nx">R</span><span class="o">=</span><span class="p">(</span><span class="nx">I</span><span class="o">&gt;</span><span class="nx">X</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">I</span><span class="o">-</span><span class="nx">X</span><span class="p">)</span><span class="o">:</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">O</span><span class="o">=</span><span class="nx">R</span><span class="p">;</span><span class="nx">O</span><span class="o">&lt;</span><span class="nx">I</span><span class="p">;</span><span class="nx">O</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">L</span><span class="o">=</span><span class="kc">false</span><span class="p">,</span><span class="nx">Q</span><span class="o">=</span><span class="kc">false</span><span class="p">,</span><span class="nx">V</span><span class="o">=</span><span class="nx">P</span><span class="p">[</span><span class="nx">O</span><span class="p">],</span><span class="nx">H</span><span class="o">=</span><span class="nx">V</span><span class="p">.</span><span class="nx">source</span><span class="p">,</span><span class="nx">K</span><span class="o">=</span><span class="nx">V</span><span class="p">.</span><span class="nx">category</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">N</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">N</span><span class="o">&lt;</span><span class="nx">J</span><span class="p">;</span><span class="nx">N</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">H</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">_sourceFilters</span><span class="p">[</span><span class="nx">N</span><span class="p">]){</span><span class="nx">Q</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="k">break</span><span class="p">;}}</span><span class="k">if</span><span class="p">(</span><span class="nx">Q</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">N</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">N</span><span class="o">&lt;</span><span class="nx">U</span><span class="p">;</span><span class="nx">N</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">K</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">_categoryFilters</span><span class="p">[</span><span class="nx">N</span><span class="p">]){</span><span class="nx">L</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="k">break</span><span class="p">;}}}</span><span class="k">if</span><span class="p">(</span><span class="nx">L</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_consoleMsgCount</span><span class="o">===</span><span class="mi">0</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_lastTime</span><span class="o">=</span><span class="nx">V</span><span class="p">.</span><span class="nx">time</span><span class="p">.</span><span class="nx">getTime</span><span class="p">();}</span><span class="nx">M</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">formatMsg</span><span class="p">(</span><span class="nx">V</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">M</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="p">){</span><span class="nx">W</span><span class="p">[</span><span class="nx">W</span><span class="p">.</span><span class="nx">length</span><span class="p">]</span><span class="o">=</span><span class="nx">M</span><span class="p">;}</span><span class="k">else</span><span class="p">{</span><span class="nx">T</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">M</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">newestOnTop</span><span class="o">?</span><span class="nx">T</span><span class="p">.</span><span class="nx">firstChild</span><span class="o">||</span><span class="kc">null</span><span class="o">:</span><span class="kc">null</span><span class="p">);}</span><span class="k">this</span><span class="p">.</span><span class="nx">_consoleMsgCount</span><span class="o">++</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_lastTime</span><span class="o">=</span><span class="nx">V</span><span class="p">.</span><span class="nx">time</span><span class="p">.</span><span class="nx">getTime</span><span class="p">();}}</span><span class="k">if</span><span class="p">(</span><span class="nx">W</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="nx">W</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_elConsole</span><span class="p">.</span><span class="nx">innerHTML</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_elConsole</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">newestOnTop</span><span class="o">?</span><span class="nx">W</span><span class="p">.</span><span class="nx">reverse</span><span class="p">().</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">W</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">);}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">T</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_elConsole</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">T</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">newestOnTop</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">_elConsole</span><span class="p">.</span><span class="nx">firstChild</span><span class="o">||</span><span class="kc">null</span><span class="o">:</span><span class="kc">null</span><span class="p">);}}},</span><span class="nx">_onCategoryCreate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">K</span><span class="p">,</span><span class="nx">J</span><span class="p">,</span><span class="nx">H</span><span class="p">){</span><span class="kd">var</span> <span class="nx">I</span><span class="o">=</span><span class="nx">J</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="nx">H</span><span class="p">.</span><span class="nx">_categoryFilters</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">I</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">H</span><span class="p">.</span><span class="nx">_elFt</span><span class="p">){</span><span class="nx">H</span><span class="p">.</span><span class="nx">_createCategoryCheckbox</span><span class="p">(</span><span class="nx">I</span><span class="p">);}},</span><span class="nx">_onSourceCreate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">K</span><span class="p">,</span><span class="nx">J</span><span class="p">,</span><span class="nx">H</span><span class="p">){</span><span class="kd">var</span> <span class="nx">I</span><span class="o">=</span><span class="nx">J</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="nx">H</span><span class="p">.</span><span class="nx">_sourceFilters</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">I</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">H</span><span class="p">.</span><span class="nx">_elFt</span><span class="p">){</span><span class="nx">H</span><span class="p">.</span><span class="nx">_createSourceCheckbox</span><span class="p">(</span><span class="nx">I</span><span class="p">);}},</span><span class="nx">_onCheckCategory</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">H</span><span class="p">,</span><span class="nx">I</span><span class="p">){</span><span class="kd">var</span> <span class="nx">J</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">category</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">checked</span><span class="p">){</span><span class="nx">I</span><span class="p">.</span><span class="nx">hideCategory</span><span class="p">(</span><span class="nx">J</span><span class="p">);}</span><span class="k">else</span><span class="p">{</span><span class="nx">I</span><span class="p">.</span><span class="nx">showCategory</span><span class="p">(</span><span class="nx">J</span><span class="p">);}},</span><span class="nx">_onCheckSource</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">H</span><span class="p">,</span><span class="nx">I</span><span class="p">){</span><span class="kd">var</span> <span class="nx">J</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">source</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">checked</span><span class="p">){</span><span class="nx">I</span><span class="p">.</span><span class="nx">hideSource</span><span class="p">(</span><span class="nx">J</span><span class="p">);}</span><span class="k">else</span><span class="p">{</span><span class="nx">I</span><span class="p">.</span><span class="nx">showSource</span><span class="p">(</span><span class="nx">J</span><span class="p">);}},</span><span class="nx">_onClickCollapseBtn</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">H</span><span class="p">,</span><span class="nx">I</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">I</span><span class="p">.</span><span class="nx">isCollapsed</span><span class="p">){</span><span class="nx">I</span><span class="p">.</span><span class="nx">collapse</span><span class="p">();}</span><span class="k">else</span><span class="p">{</span><span class="nx">I</span><span class="p">.</span><span class="nx">expand</span><span class="p">();}},</span><span class="nx">_onClickPauseBtn</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">H</span><span class="p">,</span><span class="nx">I</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">I</span><span class="p">.</span><span class="nx">isPaused</span><span class="p">){</span><span class="nx">I</span><span class="p">.</span><span class="nx">pause</span><span class="p">();}</span><span class="k">else</span><span class="p">{</span><span class="nx">I</span><span class="p">.</span><span class="nx">resume</span><span class="p">();}},</span><span class="nx">_onClickClearBtn</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">H</span><span class="p">,</span><span class="nx">I</span><span class="p">){</span><span class="nx">I</span><span class="p">.</span><span class="nx">clearConsole</span><span class="p">();},</span><span class="nx">_onNewLog</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">K</span><span class="p">,</span><span class="nx">J</span><span class="p">,</span><span class="nx">H</span><span class="p">){</span><span class="kd">var</span> <span class="nx">I</span><span class="o">=</span><span class="nx">J</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="nx">H</span><span class="p">.</span><span class="nx">_buffer</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">I</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">H</span><span class="p">.</span><span class="nx">logReaderEnabled</span><span class="o">===</span><span class="kc">true</span><span class="o">&amp;&amp;</span><span class="nx">H</span><span class="p">.</span><span class="nx">_timeout</span><span class="o">===</span><span class="kc">null</span><span class="p">){</span><span class="nx">H</span><span class="p">.</span><span class="nx">_timeout</span><span class="o">=</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">H</span><span class="p">.</span><span class="nx">_printBuffer</span><span class="p">();},</span><span class="nx">H</span><span class="p">.</span><span class="nx">outputBuffer</span><span class="p">);}},</span><span class="nx">_onReset</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">J</span><span class="p">,</span><span class="nx">I</span><span class="p">,</span><span class="nx">H</span><span class="p">){</span><span class="nx">H</span><span class="p">.</span><span class="nx">_filterLogs</span><span class="p">();}};</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">widget</span><span class="p">.</span><span class="nx">LogReader</span><span class="o">=</span><span class="nx">F</span><span class="p">;})();</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">register</span><span class="p">(</span><span class="s2">&quot;logger&quot;</span><span class="p">,</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">widget</span><span class="p">.</span><span class="nx">Logger</span><span class="p">,{</span><span class="nx">version</span><span class="o">:</span><span class="s2">&quot;2.8.0r4&quot;</span><span class="p">,</span><span class="nx">build</span><span class="o">:</span><span class="s2">&quot;2446&quot;</span><span class="p">});</span><span class="cm">/*</span>
<span class="cm">Copyright (c) 2009, Yahoo! Inc. All rights reserved.</span>
<span class="cm">Code licensed under the BSD License:</span>
<span class="cm">http://developer.yahoo.net/yui/license.txt</span>
<span class="cm">version: 2.8.0r4</span>
<span class="cm">*/</span>
<span class="nx">YAHOO</span><span class="p">.</span><span class="nx">namespace</span><span class="p">(</span><span class="s2">&quot;tool&quot;</span><span class="p">);(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">A</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">tool</span><span class="p">.</span><span class="nx">TestCase</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">B</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_should</span><span class="o">=</span><span class="p">{};</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">C</span> <span class="k">in</span> <span class="nx">B</span><span class="p">){</span><span class="k">this</span><span class="p">[</span><span class="nx">C</span><span class="p">]</span><span class="o">=</span><span class="nx">B</span><span class="p">[</span><span class="nx">C</span><span class="p">];}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">isString</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="p">)){</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;testCase&quot;</span><span class="o">+</span><span class="p">(</span><span class="nx">A</span><span class="o">++</span><span class="p">);}};</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">tool</span><span class="p">.</span><span class="nx">TestCase</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">resume</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">B</span><span class="p">){</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">tool</span><span class="p">.</span><span class="nx">TestRunner</span><span class="p">.</span><span class="nx">resume</span><span class="p">(</span><span class="nx">B</span><span class="p">);},</span><span class="nx">wait</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">D</span><span class="p">,</span><span class="nx">C</span><span class="p">){</span><span class="kd">var</span> <span class="nx">B</span><span class="o">=</span><span class="nx">arguments</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">B</span><span class="p">[</span><span class="mi">0</span><span class="p">])){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">tool</span><span class="p">.</span><span class="nx">TestCase</span><span class="p">.</span><span class="nx">Wait</span><span class="p">(</span><span class="nx">B</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">B</span><span class="p">[</span><span class="mi">1</span><span class="p">]);}</span><span class="k">else</span><span class="p">{</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">tool</span><span class="p">.</span><span class="nx">TestCase</span><span class="p">.</span><span class="nx">Wait</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Assert</span><span class="p">.</span><span class="nx">fail</span><span class="p">(</span><span class="s2">&quot;Timeout: wait() called but resume() never called.&quot;</span><span class="p">);},(</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">isNumber</span><span class="p">(</span><span class="nx">B</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span><span class="o">?</span><span class="nx">B</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">:</span><span class="mi">10000</span><span class="p">));}},</span><span class="nx">setUp</span><span class="o">:</span><span class="kd">function</span><span class="p">(){},</span><span class="nx">tearDown</span><span class="o">:</span><span class="kd">function</span><span class="p">(){}};</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">tool</span><span class="p">.</span><span class="nx">TestCase</span><span class="p">.</span><span class="nx">Wait</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">C</span><span class="p">,</span><span class="nx">B</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">segment</span><span class="o">=</span><span class="p">(</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">C</span><span class="p">)</span><span class="o">?</span><span class="nx">C</span><span class="o">:</span><span class="kc">null</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">delay</span><span class="o">=</span><span class="p">(</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">isNumber</span><span class="p">(</span><span class="nx">B</span><span class="p">)</span><span class="o">?</span><span class="nx">B</span><span class="o">:</span><span class="mi">0</span><span class="p">);};})();</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">namespace</span><span class="p">(</span><span class="s2">&quot;tool&quot;</span><span class="p">);</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">tool</span><span class="p">.</span><span class="nx">TestSuite</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">A</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">items</span><span class="o">=</span><span class="p">[];</span><span class="k">if</span><span class="p">(</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">isString</span><span class="p">(</span><span class="nx">A</span><span class="p">)){</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="nx">A</span><span class="p">;}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">isObject</span><span class="p">(</span><span class="nx">A</span><span class="p">)){</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">augmentObject</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">A</span><span class="p">,</span><span class="kc">true</span><span class="p">);}}</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">===</span><span class="s2">&quot;&quot;</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Dom</span><span class="p">.</span><span class="nx">generateId</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="s2">&quot;testSuite&quot;</span><span class="p">);}};</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">tool</span><span class="p">.</span><span class="nx">TestSuite</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">add</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">A</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">A</span> <span class="k">instanceof</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">tool</span><span class="p">.</span><span class="nx">TestSuite</span><span class="o">||</span><span class="nx">A</span> <span class="k">instanceof</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">tool</span><span class="p">.</span><span class="nx">TestCase</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">items</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">A</span><span class="p">);}},</span><span class="nx">setUp</span><span class="o">:</span><span class="kd">function</span><span class="p">(){},</span><span class="nx">tearDown</span><span class="o">:</span><span class="kd">function</span><span class="p">(){}};</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">namespace</span><span class="p">(</span><span class="s2">&quot;tool&quot;</span><span class="p">);</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">tool</span><span class="p">.</span><span class="nx">TestRunner</span><span class="o">=</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">B</span><span class="p">(</span><span class="nx">C</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">testObject</span><span class="o">=</span><span class="nx">C</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">firstChild</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">lastChild</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">parent</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">next</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">results</span><span class="o">=</span><span class="p">{</span><span class="nx">passed</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">failed</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">total</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">ignored</span><span class="o">:</span><span class="mi">0</span><span class="p">};</span><span class="k">if</span><span class="p">(</span><span class="nx">C</span> <span class="k">instanceof</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">tool</span><span class="p">.</span><span class="nx">TestSuite</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">results</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="s2">&quot;testsuite&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">results</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="nx">C</span><span class="p">.</span><span class="nx">name</span><span class="p">;}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">C</span> <span class="k">instanceof</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">tool</span><span class="p">.</span><span class="nx">TestCase</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">results</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="s2">&quot;testcase&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">results</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="nx">C</span><span class="p">.</span><span class="nx">name</span><span class="p">;}}}</span><span class="nx">B</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">appendChild</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">C</span><span class="p">){</span><span class="kd">var</span> <span class="nx">D</span><span class="o">=</span><span class="k">new</span> <span class="nx">B</span><span class="p">(</span><span class="nx">C</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">firstChild</span><span class="o">===</span><span class="kc">null</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">firstChild</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">lastChild</span><span class="o">=</span><span class="nx">D</span><span class="p">;}</span><span class="k">else</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">lastChild</span><span class="p">.</span><span class="nx">next</span><span class="o">=</span><span class="nx">D</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">lastChild</span><span class="o">=</span><span class="nx">D</span><span class="p">;}</span><span class="nx">D</span><span class="p">.</span><span class="nx">parent</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">return</span> <span class="nx">D</span><span class="p">;}};</span><span class="kd">function</span> <span class="nx">A</span><span class="p">(){</span><span class="nx">A</span><span class="p">.</span><span class="nx">superclass</span><span class="p">.</span><span class="nx">constructor</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">masterSuite</span><span class="o">=</span><span class="k">new</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">tool</span><span class="p">.</span><span class="nx">TestSuite</span><span class="p">(</span><span class="s2">&quot;YUI Test Results&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_cur</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_root</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="kd">var</span> <span class="nx">D</span><span class="o">=</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">TEST_CASE_BEGIN_EVENT</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">TEST_CASE_COMPLETE_EVENT</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">TEST_SUITE_BEGIN_EVENT</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">TEST_SUITE_COMPLETE_EVENT</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">TEST_PASS_EVENT</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">TEST_FAIL_EVENT</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">TEST_IGNORE_EVENT</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">COMPLETE_EVENT</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">BEGIN_EVENT</span><span class="p">];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">C</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">C</span><span class="o">&lt;</span><span class="nx">D</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">C</span><span class="o">++</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">createEvent</span><span class="p">(</span><span class="nx">D</span><span class="p">[</span><span class="nx">C</span><span class="p">],{</span><span class="nx">scope</span><span class="o">:</span><span class="k">this</span><span class="p">});}}</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">A</span><span class="p">,</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">EventProvider</span><span class="p">,{</span><span class="nx">TEST_CASE_BEGIN_EVENT</span><span class="o">:</span><span class="s2">&quot;testcasebegin&quot;</span><span class="p">,</span><span class="nx">TEST_CASE_COMPLETE_EVENT</span><span class="o">:</span><span class="s2">&quot;testcasecomplete&quot;</span><span class="p">,</span><span class="nx">TEST_SUITE_BEGIN_EVENT</span><span class="o">:</span><span class="s2">&quot;testsuitebegin&quot;</span><span class="p">,</span><span class="nx">TEST_SUITE_COMPLETE_EVENT</span><span class="o">:</span><span class="s2">&quot;testsuitecomplete&quot;</span><span class="p">,</span><span class="nx">TEST_PASS_EVENT</span><span class="o">:</span><span class="s2">&quot;pass&quot;</span><span class="p">,</span><span class="nx">TEST_FAIL_EVENT</span><span class="o">:</span><span class="s2">&quot;fail&quot;</span><span class="p">,</span><span class="nx">TEST_IGNORE_EVENT</span><span class="o">:</span><span class="s2">&quot;ignore&quot;</span><span class="p">,</span><span class="nx">COMPLETE_EVENT</span><span class="o">:</span><span class="s2">&quot;complete&quot;</span><span class="p">,</span><span class="nx">BEGIN_EVENT</span><span class="o">:</span><span class="s2">&quot;begin&quot;</span><span class="p">,</span><span class="nx">_addTestCaseToTestTree</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">C</span><span class="p">,</span><span class="nx">D</span><span class="p">){</span><span class="kd">var</span> <span class="nx">E</span><span class="o">=</span><span class="nx">C</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">D</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">F</span> <span class="k">in</span> <span class="nx">D</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">F</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;test&quot;</span><span class="p">)</span><span class="o">===</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">D</span><span class="p">[</span><span class="nx">F</span><span class="p">])){</span><span class="nx">E</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">F</span><span class="p">);}}},</span><span class="nx">_addTestSuiteToTestTree</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">C</span><span class="p">,</span><span class="nx">F</span><span class="p">){</span><span class="kd">var</span> <span class="nx">E</span><span class="o">=</span><span class="nx">C</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">F</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">D</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">D</span><span class="o">&lt;</span><span class="nx">F</span><span class="p">.</span><span class="nx">items</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">D</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">F</span><span class="p">.</span><span class="nx">items</span><span class="p">[</span><span class="nx">D</span><span class="p">]</span> <span class="k">instanceof</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">tool</span><span class="p">.</span><span class="nx">TestSuite</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_addTestSuiteToTestTree</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="nx">F</span><span class="p">.</span><span class="nx">items</span><span class="p">[</span><span class="nx">D</span><span class="p">]);}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">F</span><span class="p">.</span><span class="nx">items</span><span class="p">[</span><span class="nx">D</span><span class="p">]</span> <span class="k">instanceof</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">tool</span><span class="p">.</span><span class="nx">TestCase</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_addTestCaseToTestTree</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="nx">F</span><span class="p">.</span><span class="nx">items</span><span class="p">[</span><span class="nx">D</span><span class="p">]);}}}},</span><span class="nx">_buildTestTree</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_root</span><span class="o">=</span><span class="k">new</span> <span class="nx">B</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">masterSuite</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_cur</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_root</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">C</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">C</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">masterSuite</span><span class="p">.</span><span class="nx">items</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">C</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">masterSuite</span><span class="p">.</span><span class="nx">items</span><span class="p">[</span><span class="nx">C</span><span class="p">]</span> <span class="k">instanceof</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">tool</span><span class="p">.</span><span class="nx">TestSuite</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_addTestSuiteToTestTree</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_root</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">masterSuite</span><span class="p">.</span><span class="nx">items</span><span class="p">[</span><span class="nx">C</span><span class="p">]);}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">masterSuite</span><span class="p">.</span><span class="nx">items</span><span class="p">[</span><span class="nx">C</span><span class="p">]</span> <span class="k">instanceof</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">tool</span><span class="p">.</span><span class="nx">TestCase</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_addTestCaseToTestTree</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_root</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">masterSuite</span><span class="p">.</span><span class="nx">items</span><span class="p">[</span><span class="nx">C</span><span class="p">]);}}}},</span><span class="nx">_handleTestObjectComplete</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">C</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">isObject</span><span class="p">(</span><span class="nx">C</span><span class="p">.</span><span class="nx">testObject</span><span class="p">)){</span><span class="nx">C</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">results</span><span class="p">.</span><span class="nx">passed</span><span class="o">+=</span><span class="nx">C</span><span class="p">.</span><span class="nx">results</span><span class="p">.</span><span class="nx">passed</span><span class="p">;</span><span class="nx">C</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">results</span><span class="p">.</span><span class="nx">failed</span><span class="o">+=</span><span class="nx">C</span><span class="p">.</span><span class="nx">results</span><span class="p">.</span><span class="nx">failed</span><span class="p">;</span><span class="nx">C</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">results</span><span class="p">.</span><span class="nx">total</span><span class="o">+=</span><span class="nx">C</span><span class="p">.</span><span class="nx">results</span><span class="p">.</span><span class="nx">total</span><span class="p">;</span><span class="nx">C</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">results</span><span class="p">.</span><span class="nx">ignored</span><span class="o">+=</span><span class="nx">C</span><span class="p">.</span><span class="nx">results</span><span class="p">.</span><span class="nx">ignored</span><span class="p">;</span><span class="nx">C</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">results</span><span class="p">[</span><span class="nx">C</span><span class="p">.</span><span class="nx">testObject</span><span class="p">.</span><span class="nx">name</span><span class="p">]</span><span class="o">=</span><span class="nx">C</span><span class="p">.</span><span class="nx">results</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">C</span><span class="p">.</span><span class="nx">testObject</span> <span class="k">instanceof</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">tool</span><span class="p">.</span><span class="nx">TestSuite</span><span class="p">){</span><span class="nx">C</span><span class="p">.</span><span class="nx">testObject</span><span class="p">.</span><span class="nx">tearDown</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">fireEvent</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">TEST_SUITE_COMPLETE_EVENT</span><span class="p">,{</span><span class="nx">testSuite</span><span class="o">:</span><span class="nx">C</span><span class="p">.</span><span class="nx">testObject</span><span class="p">,</span><span class="nx">results</span><span class="o">:</span><span class="nx">C</span><span class="p">.</span><span class="nx">results</span><span class="p">});}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">C</span><span class="p">.</span><span class="nx">testObject</span> <span class="k">instanceof</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">tool</span><span class="p">.</span><span class="nx">TestCase</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">fireEvent</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">TEST_CASE_COMPLETE_EVENT</span><span class="p">,{</span><span class="nx">testCase</span><span class="o">:</span><span class="nx">C</span><span class="p">.</span><span class="nx">testObject</span><span class="p">,</span><span class="nx">results</span><span class="o">:</span><span class="nx">C</span><span class="p">.</span><span class="nx">results</span><span class="p">});}}}},</span><span class="nx">_next</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_cur</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_cur</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_cur</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">;}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_cur</span><span class="p">.</span><span class="nx">next</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_cur</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_cur</span><span class="p">.</span><span class="nx">next</span><span class="p">;}</span><span class="k">else</span><span class="p">{</span><span class="k">while</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_cur</span><span class="o">&amp;&amp;!</span><span class="k">this</span><span class="p">.</span><span class="nx">_cur</span><span class="p">.</span><span class="nx">next</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_cur</span><span class="o">!==</span><span class="k">this</span><span class="p">.</span><span class="nx">_root</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_handleTestObjectComplete</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_cur</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_cur</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_cur</span><span class="p">.</span><span class="nx">parent</span><span class="p">;}</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_cur</span><span class="o">==</span><span class="k">this</span><span class="p">.</span><span class="nx">_root</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_cur</span><span class="p">.</span><span class="nx">results</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="s2">&quot;report&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_cur</span><span class="p">.</span><span class="nx">results</span><span class="p">.</span><span class="nx">timestamp</span><span class="o">=</span><span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">()).</span><span class="nx">toLocaleString</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">_cur</span><span class="p">.</span><span class="nx">results</span><span class="p">.</span><span class="nx">duration</span><span class="o">=</span><span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">())</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">_cur</span><span class="p">.</span><span class="nx">results</span><span class="p">.</span><span class="nx">duration</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">fireEvent</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">COMPLETE_EVENT</span><span class="p">,{</span><span class="nx">results</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">_cur</span><span class="p">.</span><span class="nx">results</span><span class="p">});</span><span class="k">this</span><span class="p">.</span><span class="nx">_cur</span><span class="o">=</span><span class="kc">null</span><span class="p">;}</span><span class="k">else</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">_handleTestObjectComplete</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_cur</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_cur</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_cur</span><span class="p">.</span><span class="nx">next</span><span class="p">;}}}</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">_cur</span><span class="p">;},</span><span class="nx">_run</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">E</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="kd">var</span> <span class="nx">D</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_next</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">D</span><span class="o">!==</span><span class="kc">null</span><span class="p">){</span><span class="kd">var</span> <span class="nx">C</span><span class="o">=</span><span class="nx">D</span><span class="p">.</span><span class="nx">testObject</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">isObject</span><span class="p">(</span><span class="nx">C</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="nx">C</span> <span class="k">instanceof</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">tool</span><span class="p">.</span><span class="nx">TestSuite</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">fireEvent</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">TEST_SUITE_BEGIN_EVENT</span><span class="p">,{</span><span class="nx">testSuite</span><span class="o">:</span><span class="nx">C</span><span class="p">});</span><span class="nx">C</span><span class="p">.</span><span class="nx">setUp</span><span class="p">();}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">C</span> <span class="k">instanceof</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">tool</span><span class="p">.</span><span class="nx">TestCase</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">fireEvent</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">TEST_CASE_BEGIN_EVENT</span><span class="p">,{</span><span class="nx">testCase</span><span class="o">:</span><span class="nx">C</span><span class="p">});}}</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">setTimeout</span><span class="o">!=</span><span class="s2">&quot;undefined&quot;</span><span class="p">){</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">tool</span><span class="p">.</span><span class="nx">TestRunner</span><span class="p">.</span><span class="nx">_run</span><span class="p">();},</span><span class="mi">0</span><span class="p">);}</span><span class="k">else</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">_run</span><span class="p">();}}</span><span class="k">else</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">_runTest</span><span class="p">(</span><span class="nx">D</span><span class="p">);}}},</span><span class="nx">_resumeTest</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">G</span><span class="p">){</span><span class="kd">var</span> <span class="nx">C</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_cur</span><span class="p">;</span><span class="kd">var</span> <span class="nx">H</span><span class="o">=</span><span class="nx">C</span><span class="p">.</span><span class="nx">testObject</span><span class="p">;</span><span class="kd">var</span> <span class="nx">E</span><span class="o">=</span><span class="nx">C</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">testObject</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">__yui_wait</span><span class="p">){</span><span class="nx">clearTimeout</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">__yui_wait</span><span class="p">);</span><span class="k">delete</span> <span class="nx">E</span><span class="p">.</span><span class="nx">__yui_wait</span><span class="p">;}</span><span class="kd">var</span> <span class="nx">K</span><span class="o">=</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">_should</span><span class="p">.</span><span class="nx">fail</span><span class="o">||</span><span class="p">{})[</span><span class="nx">H</span><span class="p">];</span><span class="kd">var</span> <span class="nx">D</span><span class="o">=</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">_should</span><span class="p">.</span><span class="nx">error</span><span class="o">||</span><span class="p">{})[</span><span class="nx">H</span><span class="p">];</span><span class="kd">var</span> <span class="nx">F</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="kd">var</span> <span class="nx">I</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="nx">G</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">E</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">K</span><span class="p">){</span><span class="nx">I</span><span class="o">=</span><span class="k">new</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">ShouldFail</span><span class="p">();</span><span class="nx">F</span><span class="o">=</span><span class="kc">true</span><span class="p">;}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">D</span><span class="p">){</span><span class="nx">I</span><span class="o">=</span><span class="k">new</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">ShouldError</span><span class="p">();</span><span class="nx">F</span><span class="o">=</span><span class="kc">true</span><span class="p">;}}}</span><span class="k">catch</span><span class="p">(</span><span class="nx">J</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">J</span> <span class="k">instanceof</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">AssertionError</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">K</span><span class="p">){</span><span class="nx">I</span><span class="o">=</span><span class="nx">J</span><span class="p">;</span><span class="nx">F</span><span class="o">=</span><span class="kc">true</span><span class="p">;}}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">J</span> <span class="k">instanceof</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">tool</span><span class="p">.</span><span class="nx">TestCase</span><span class="p">.</span><span class="nx">Wait</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">J</span><span class="p">.</span><span class="nx">segment</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">isNumber</span><span class="p">(</span><span class="nx">J</span><span class="p">.</span><span class="nx">delay</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">setTimeout</span><span class="o">!=</span><span class="s2">&quot;undefined&quot;</span><span class="p">){</span><span class="nx">E</span><span class="p">.</span><span class="nx">__yui_wait</span><span class="o">=</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">tool</span><span class="p">.</span><span class="nx">TestRunner</span><span class="p">.</span><span class="nx">_resumeTest</span><span class="p">(</span><span class="nx">J</span><span class="p">.</span><span class="nx">segment</span><span class="p">);},</span><span class="nx">J</span><span class="p">.</span><span class="nx">delay</span><span class="p">);}</span><span class="k">else</span><span class="p">{</span><span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;Asynchronous tests not supported in this environment.&quot;</span><span class="p">);}}}</span><span class="k">return</span><span class="p">;}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">D</span><span class="p">){</span><span class="nx">I</span><span class="o">=</span><span class="k">new</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">UnexpectedError</span><span class="p">(</span><span class="nx">J</span><span class="p">);</span><span class="nx">F</span><span class="o">=</span><span class="kc">true</span><span class="p">;}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">isString</span><span class="p">(</span><span class="nx">D</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="nx">J</span><span class="p">.</span><span class="nx">message</span><span class="o">!=</span><span class="nx">D</span><span class="p">){</span><span class="nx">I</span><span class="o">=</span><span class="k">new</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">UnexpectedError</span><span class="p">(</span><span class="nx">J</span><span class="p">);</span><span class="nx">F</span><span class="o">=</span><span class="kc">true</span><span class="p">;}}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">D</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">J</span> <span class="k">instanceof</span> <span class="nx">D</span><span class="p">)){</span><span class="nx">I</span><span class="o">=</span><span class="k">new</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">UnexpectedError</span><span class="p">(</span><span class="nx">J</span><span class="p">);</span>
<span class="nx">F</span><span class="o">=</span><span class="kc">true</span><span class="p">;}}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">isObject</span><span class="p">(</span><span class="nx">D</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">J</span> <span class="k">instanceof</span> <span class="nx">D</span><span class="p">.</span><span class="nx">constructor</span><span class="p">)</span><span class="o">||</span><span class="nx">J</span><span class="p">.</span><span class="nx">message</span><span class="o">!=</span><span class="nx">D</span><span class="p">.</span><span class="nx">message</span><span class="p">){</span><span class="nx">I</span><span class="o">=</span><span class="k">new</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">UnexpectedError</span><span class="p">(</span><span class="nx">J</span><span class="p">);</span><span class="nx">F</span><span class="o">=</span><span class="kc">true</span><span class="p">;}}}}}}}}</span><span class="k">if</span><span class="p">(</span><span class="nx">F</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">fireEvent</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">TEST_FAIL_EVENT</span><span class="p">,{</span><span class="nx">testCase</span><span class="o">:</span><span class="nx">E</span><span class="p">,</span><span class="nx">testName</span><span class="o">:</span><span class="nx">H</span><span class="p">,</span><span class="nx">error</span><span class="o">:</span><span class="nx">I</span><span class="p">});}</span><span class="k">else</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">fireEvent</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">TEST_PASS_EVENT</span><span class="p">,{</span><span class="nx">testCase</span><span class="o">:</span><span class="nx">E</span><span class="p">,</span><span class="nx">testName</span><span class="o">:</span><span class="nx">H</span><span class="p">});}</span><span class="nx">E</span><span class="p">.</span><span class="nx">tearDown</span><span class="p">();</span><span class="nx">C</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">results</span><span class="p">[</span><span class="nx">H</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="nx">result</span><span class="o">:</span><span class="nx">F</span><span class="o">?</span><span class="s2">&quot;fail&quot;</span><span class="o">:</span><span class="s2">&quot;pass&quot;</span><span class="p">,</span><span class="nx">message</span><span class="o">:</span><span class="nx">I</span><span class="o">?</span><span class="nx">I</span><span class="p">.</span><span class="nx">getMessage</span><span class="p">()</span><span class="o">:</span><span class="s2">&quot;Test passed&quot;</span><span class="p">,</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;test&quot;</span><span class="p">,</span><span class="nx">name</span><span class="o">:</span><span class="nx">H</span><span class="p">};</span><span class="k">if</span><span class="p">(</span><span class="nx">F</span><span class="p">){</span><span class="nx">C</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">results</span><span class="p">.</span><span class="nx">failed</span><span class="o">++</span><span class="p">;}</span><span class="k">else</span><span class="p">{</span><span class="nx">C</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">results</span><span class="p">.</span><span class="nx">passed</span><span class="o">++</span><span class="p">;}</span><span class="nx">C</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">results</span><span class="p">.</span><span class="nx">total</span><span class="o">++</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">setTimeout</span><span class="o">!=</span><span class="s2">&quot;undefined&quot;</span><span class="p">){</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">tool</span><span class="p">.</span><span class="nx">TestRunner</span><span class="p">.</span><span class="nx">_run</span><span class="p">();},</span><span class="mi">0</span><span class="p">);}</span><span class="k">else</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">_run</span><span class="p">();}},</span><span class="nx">_runTest</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">F</span><span class="p">){</span><span class="kd">var</span> <span class="nx">C</span><span class="o">=</span><span class="nx">F</span><span class="p">.</span><span class="nx">testObject</span><span class="p">;</span><span class="kd">var</span> <span class="nx">D</span><span class="o">=</span><span class="nx">F</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">testObject</span><span class="p">;</span><span class="kd">var</span> <span class="nx">G</span><span class="o">=</span><span class="nx">D</span><span class="p">[</span><span class="nx">C</span><span class="p">];</span><span class="kd">var</span> <span class="nx">E</span><span class="o">=</span><span class="p">(</span><span class="nx">D</span><span class="p">.</span><span class="nx">_should</span><span class="p">.</span><span class="nx">ignore</span><span class="o">||</span><span class="p">{})[</span><span class="nx">C</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">E</span><span class="p">){</span><span class="nx">F</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">results</span><span class="p">[</span><span class="nx">C</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="nx">result</span><span class="o">:</span><span class="s2">&quot;ignore&quot;</span><span class="p">,</span><span class="nx">message</span><span class="o">:</span><span class="s2">&quot;Test ignored&quot;</span><span class="p">,</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;test&quot;</span><span class="p">,</span><span class="nx">name</span><span class="o">:</span><span class="nx">C</span><span class="p">};</span><span class="nx">F</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">results</span><span class="p">.</span><span class="nx">ignored</span><span class="o">++</span><span class="p">;</span><span class="nx">F</span><span class="p">.</span><span class="nx">parent</span><span class="p">.</span><span class="nx">results</span><span class="p">.</span><span class="nx">total</span><span class="o">++</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">fireEvent</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">TEST_IGNORE_EVENT</span><span class="p">,{</span><span class="nx">testCase</span><span class="o">:</span><span class="nx">D</span><span class="p">,</span><span class="nx">testName</span><span class="o">:</span><span class="nx">C</span><span class="p">});</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">setTimeout</span><span class="o">!=</span><span class="s2">&quot;undefined&quot;</span><span class="p">){</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">tool</span><span class="p">.</span><span class="nx">TestRunner</span><span class="p">.</span><span class="nx">_run</span><span class="p">();},</span><span class="mi">0</span><span class="p">);}</span><span class="k">else</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">_run</span><span class="p">();}}</span><span class="k">else</span><span class="p">{</span><span class="nx">D</span><span class="p">.</span><span class="nx">setUp</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">_resumeTest</span><span class="p">(</span><span class="nx">G</span><span class="p">);}},</span><span class="nx">fireEvent</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">C</span><span class="p">,</span><span class="nx">D</span><span class="p">){</span><span class="nx">D</span><span class="o">=</span><span class="nx">D</span><span class="o">||</span><span class="p">{};</span><span class="nx">D</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="nx">C</span><span class="p">;</span><span class="nx">A</span><span class="p">.</span><span class="nx">superclass</span><span class="p">.</span><span class="nx">fireEvent</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">C</span><span class="p">,</span><span class="nx">D</span><span class="p">);},</span><span class="nx">add</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">C</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">masterSuite</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="nx">C</span><span class="p">);},</span><span class="nx">clear</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">masterSuite</span><span class="p">.</span><span class="nx">items</span><span class="o">=</span><span class="p">[];},</span><span class="nx">resume</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">C</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_resumeTest</span><span class="p">(</span><span class="nx">C</span><span class="o">||</span><span class="kd">function</span><span class="p">(){});},</span><span class="nx">run</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">C</span><span class="p">){</span><span class="kd">var</span> <span class="nx">D</span><span class="o">=</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">tool</span><span class="p">.</span><span class="nx">TestRunner</span><span class="p">;</span><span class="nx">D</span><span class="p">.</span><span class="nx">_buildTestTree</span><span class="p">();</span><span class="nx">D</span><span class="p">.</span><span class="nx">_root</span><span class="p">.</span><span class="nx">results</span><span class="p">.</span><span class="nx">duration</span><span class="o">=</span><span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">()).</span><span class="nx">getTime</span><span class="p">();</span><span class="nx">D</span><span class="p">.</span><span class="nx">fireEvent</span><span class="p">(</span><span class="nx">D</span><span class="p">.</span><span class="nx">BEGIN_EVENT</span><span class="p">);</span><span class="nx">D</span><span class="p">.</span><span class="nx">_run</span><span class="p">();}});</span><span class="k">return</span> <span class="k">new</span> <span class="nx">A</span><span class="p">();})();</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">namespace</span><span class="p">(</span><span class="s2">&quot;util&quot;</span><span class="p">);</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Assert</span><span class="o">=</span><span class="p">{</span><span class="nx">_formatMessage</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">B</span><span class="p">,</span><span class="nx">A</span><span class="p">){</span><span class="kd">var</span> <span class="nx">C</span><span class="o">=</span><span class="nx">B</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">isString</span><span class="p">(</span><span class="nx">B</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">B</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">){</span><span class="k">return</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">substitute</span><span class="p">(</span><span class="nx">B</span><span class="p">,{</span><span class="nx">message</span><span class="o">:</span><span class="nx">A</span><span class="p">});}</span><span class="k">else</span><span class="p">{</span><span class="k">return</span> <span class="nx">A</span><span class="p">;}},</span><span class="nx">fail</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">A</span><span class="p">){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">AssertionError</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_formatMessage</span><span class="p">(</span><span class="nx">A</span><span class="p">,</span><span class="s2">&quot;Test force-failed.&quot;</span><span class="p">));},</span><span class="nx">areEqual</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">B</span><span class="p">,</span><span class="nx">C</span><span class="p">,</span><span class="nx">A</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">B</span><span class="o">!=</span><span class="nx">C</span><span class="p">){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">ComparisonFailure</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_formatMessage</span><span class="p">(</span><span class="nx">A</span><span class="p">,</span><span class="s2">&quot;Values should be equal.&quot;</span><span class="p">),</span><span class="nx">B</span><span class="p">,</span><span class="nx">C</span><span class="p">);}},</span><span class="nx">areNotEqual</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">A</span><span class="p">,</span><span class="nx">C</span><span class="p">,</span><span class="nx">B</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">A</span><span class="o">==</span><span class="nx">C</span><span class="p">){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">UnexpectedValue</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_formatMessage</span><span class="p">(</span><span class="nx">B</span><span class="p">,</span><span class="s2">&quot;Values should not be equal.&quot;</span><span class="p">),</span><span class="nx">A</span><span class="p">);}},</span><span class="nx">areNotSame</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">A</span><span class="p">,</span><span class="nx">C</span><span class="p">,</span><span class="nx">B</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">A</span><span class="o">===</span><span class="nx">C</span><span class="p">){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">UnexpectedValue</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_formatMessage</span><span class="p">(</span><span class="nx">B</span><span class="p">,</span><span class="s2">&quot;Values should not be the same.&quot;</span><span class="p">),</span><span class="nx">A</span><span class="p">);}},</span><span class="nx">areSame</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">B</span><span class="p">,</span><span class="nx">C</span><span class="p">,</span><span class="nx">A</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">B</span><span class="o">!==</span><span class="nx">C</span><span class="p">){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">ComparisonFailure</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_formatMessage</span><span class="p">(</span><span class="nx">A</span><span class="p">,</span><span class="s2">&quot;Values should be the same.&quot;</span><span class="p">),</span><span class="nx">B</span><span class="p">,</span><span class="nx">C</span><span class="p">);}},</span><span class="nx">isFalse</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">B</span><span class="p">,</span><span class="nx">A</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="kc">false</span><span class="o">!==</span><span class="nx">B</span><span class="p">){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">ComparisonFailure</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_formatMessage</span><span class="p">(</span><span class="nx">A</span><span class="p">,</span><span class="s2">&quot;Value should be false.&quot;</span><span class="p">),</span><span class="kc">false</span><span class="p">,</span><span class="nx">B</span><span class="p">);}},</span><span class="nx">isTrue</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">B</span><span class="p">,</span><span class="nx">A</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="kc">true</span><span class="o">!==</span><span class="nx">B</span><span class="p">){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">ComparisonFailure</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_formatMessage</span><span class="p">(</span><span class="nx">A</span><span class="p">,</span><span class="s2">&quot;Value should be true.&quot;</span><span class="p">),</span><span class="kc">true</span><span class="p">,</span><span class="nx">B</span><span class="p">);}},</span><span class="nb">isNaN</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">B</span><span class="p">,</span><span class="nx">A</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">B</span><span class="p">)){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">ComparisonFailure</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_formatMessage</span><span class="p">(</span><span class="nx">A</span><span class="p">,</span><span class="s2">&quot;Value should be NaN.&quot;</span><span class="p">),</span><span class="kc">NaN</span><span class="p">,</span><span class="nx">B</span><span class="p">);}},</span><span class="nx">isNotNaN</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">B</span><span class="p">,</span><span class="nx">A</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">B</span><span class="p">)){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">UnexpectedValue</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_formatMessage</span><span class="p">(</span><span class="nx">A</span><span class="p">,</span><span class="s2">&quot;Values should not be NaN.&quot;</span><span class="p">),</span><span class="kc">NaN</span><span class="p">);}},</span><span class="nx">isNotNull</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">B</span><span class="p">,</span><span class="nx">A</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">isNull</span><span class="p">(</span><span class="nx">B</span><span class="p">)){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">UnexpectedValue</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_formatMessage</span><span class="p">(</span><span class="nx">A</span><span class="p">,</span><span class="s2">&quot;Values should not be null.&quot;</span><span class="p">),</span><span class="kc">null</span><span class="p">);}},</span><span class="nx">isNotUndefined</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">B</span><span class="p">,</span><span class="nx">A</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">isUndefined</span><span class="p">(</span><span class="nx">B</span><span class="p">)){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">UnexpectedValue</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_formatMessage</span><span class="p">(</span><span class="nx">A</span><span class="p">,</span><span class="s2">&quot;Value should not be undefined.&quot;</span><span class="p">),</span><span class="kc">undefined</span><span class="p">);}},</span><span class="nx">isNull</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">B</span><span class="p">,</span><span class="nx">A</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">isNull</span><span class="p">(</span><span class="nx">B</span><span class="p">)){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">ComparisonFailure</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_formatMessage</span><span class="p">(</span><span class="nx">A</span><span class="p">,</span><span class="s2">&quot;Value should be null.&quot;</span><span class="p">),</span><span class="kc">null</span><span class="p">,</span><span class="nx">B</span><span class="p">);}},</span><span class="nx">isUndefined</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">B</span><span class="p">,</span><span class="nx">A</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">isUndefined</span><span class="p">(</span><span class="nx">B</span><span class="p">)){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">ComparisonFailure</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_formatMessage</span><span class="p">(</span><span class="nx">A</span><span class="p">,</span><span class="s2">&quot;Value should be undefined.&quot;</span><span class="p">),</span><span class="kc">undefined</span><span class="p">,</span><span class="nx">B</span><span class="p">);}},</span><span class="nx">isArray</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">B</span><span class="p">,</span><span class="nx">A</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">B</span><span class="p">)){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">UnexpectedValue</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_formatMessage</span><span class="p">(</span><span class="nx">A</span><span class="p">,</span><span class="s2">&quot;Value should be an array.&quot;</span><span class="p">),</span><span class="nx">B</span><span class="p">);}},</span><span class="nx">isBoolean</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">B</span><span class="p">,</span><span class="nx">A</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">isBoolean</span><span class="p">(</span><span class="nx">B</span><span class="p">)){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">UnexpectedValue</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_formatMessage</span><span class="p">(</span><span class="nx">A</span><span class="p">,</span><span class="s2">&quot;Value should be a Boolean.&quot;</span><span class="p">),</span><span class="nx">B</span><span class="p">);}},</span><span class="nx">isFunction</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">B</span><span class="p">,</span><span class="nx">A</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">B</span><span class="p">)){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">UnexpectedValue</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_formatMessage</span><span class="p">(</span><span class="nx">A</span><span class="p">,</span><span class="s2">&quot;Value should be a function.&quot;</span><span class="p">),</span><span class="nx">B</span><span class="p">);}},</span><span class="nx">isInstanceOf</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">B</span><span class="p">,</span><span class="nx">C</span><span class="p">,</span><span class="nx">A</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">C</span> <span class="k">instanceof</span> <span class="nx">B</span><span class="p">)){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">ComparisonFailure</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_formatMessage</span><span class="p">(</span><span class="nx">A</span><span class="p">,</span><span class="s2">&quot;Value isn&#39;t an instance of expected type.&quot;</span><span class="p">),</span><span class="nx">B</span><span class="p">,</span><span class="nx">C</span><span class="p">);}},</span><span class="nx">isNumber</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">B</span><span class="p">,</span><span class="nx">A</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">isNumber</span><span class="p">(</span><span class="nx">B</span><span class="p">)){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">UnexpectedValue</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_formatMessage</span><span class="p">(</span><span class="nx">A</span><span class="p">,</span><span class="s2">&quot;Value should be a number.&quot;</span><span class="p">),</span><span class="nx">B</span><span class="p">);}},</span><span class="nx">isObject</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">B</span><span class="p">,</span><span class="nx">A</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">isObject</span><span class="p">(</span><span class="nx">B</span><span class="p">)){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">UnexpectedValue</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_formatMessage</span><span class="p">(</span><span class="nx">A</span><span class="p">,</span><span class="s2">&quot;Value should be an object.&quot;</span><span class="p">),</span><span class="nx">B</span><span class="p">);}},</span><span class="nx">isString</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">B</span><span class="p">,</span><span class="nx">A</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">isString</span><span class="p">(</span><span class="nx">B</span><span class="p">)){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">UnexpectedValue</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_formatMessage</span><span class="p">(</span><span class="nx">A</span><span class="p">,</span><span class="s2">&quot;Value should be a string.&quot;</span><span class="p">),</span><span class="nx">B</span><span class="p">);}},</span><span class="nx">isTypeOf</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">B</span><span class="p">,</span><span class="nx">C</span><span class="p">,</span><span class="nx">A</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">C</span><span class="o">!=</span><span class="nx">B</span><span class="p">){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">ComparisonFailure</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_formatMessage</span><span class="p">(</span><span class="nx">A</span><span class="p">,</span><span class="s2">&quot;Value should be of type &quot;</span><span class="o">+</span><span class="nx">B</span><span class="o">+</span><span class="s2">&quot;.&quot;</span><span class="p">),</span><span class="nx">B</span><span class="p">,</span><span class="k">typeof</span> <span class="nx">C</span><span class="p">);}}};</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">AssertionError</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">A</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">message</span><span class="o">=</span><span class="nx">A</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;AssertionError&quot;</span><span class="p">;};</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">AssertionError</span><span class="p">,</span><span class="nb">Object</span><span class="p">,{</span><span class="nx">getMessage</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">message</span><span class="p">;},</span><span class="nx">toString</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">+</span><span class="s2">&quot;: &quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">getMessage</span><span class="p">();}});</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">ComparisonFailure</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">B</span><span class="p">,</span><span class="nx">A</span><span class="p">,</span><span class="nx">C</span><span class="p">){</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">AssertionError</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">B</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">expected</span><span class="o">=</span><span class="nx">A</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">actual</span><span class="o">=</span><span class="nx">C</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;ComparisonFailure&quot;</span><span class="p">;};</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">ComparisonFailure</span><span class="p">,</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">AssertionError</span><span class="p">,{</span><span class="nx">getMessage</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">message</span><span class="o">+</span><span class="s2">&quot;\nExpected: &quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">expected</span><span class="o">+</span><span class="s2">&quot; (&quot;</span><span class="o">+</span><span class="p">(</span><span class="k">typeof</span> <span class="k">this</span><span class="p">.</span><span class="nx">expected</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="o">+</span><span class="s2">&quot;\nActual:&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">actual</span><span class="o">+</span><span class="s2">&quot; (&quot;</span><span class="o">+</span><span class="p">(</span><span class="k">typeof</span> <span class="k">this</span><span class="p">.</span><span class="nx">actual</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="p">;}});</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">UnexpectedValue</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">B</span><span class="p">,</span><span class="nx">A</span><span class="p">){</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">AssertionError</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">B</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">unexpected</span><span class="o">=</span><span class="nx">A</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;UnexpectedValue&quot;</span><span class="p">;};</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">UnexpectedValue</span><span class="p">,</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">AssertionError</span><span class="p">,{</span><span class="nx">getMessage</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">message</span><span class="o">+</span><span class="s2">&quot;\nUnexpected: &quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">unexpected</span><span class="o">+</span><span class="s2">&quot; (&quot;</span><span class="o">+</span><span class="p">(</span><span class="k">typeof</span> <span class="k">this</span><span class="p">.</span><span class="nx">unexpected</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;) &quot;</span><span class="p">;}});</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">ShouldFail</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">A</span><span class="p">){</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">AssertionError</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">A</span><span class="o">||</span><span class="s2">&quot;This test should fail but didn&#39;t.&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;ShouldFail&quot;</span><span class="p">;};</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">ShouldFail</span><span class="p">,</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">AssertionError</span><span class="p">);</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">ShouldError</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">A</span><span class="p">){</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">AssertionError</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">A</span><span class="o">||</span><span class="s2">&quot;This test should have thrown an error but didn&#39;t.&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;ShouldError&quot;</span><span class="p">;};</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">ShouldError</span><span class="p">,</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">AssertionError</span><span class="p">);</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">UnexpectedError</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">A</span><span class="p">){</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">AssertionError</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="s2">&quot;Unexpected error: &quot;</span><span class="o">+</span><span class="nx">A</span><span class="p">.</span><span class="nx">message</span><span class="p">);</span>
<span class="k">this</span><span class="p">.</span><span class="nx">cause</span><span class="o">=</span><span class="nx">A</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;UnexpectedError&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">stack</span><span class="o">=</span><span class="nx">A</span><span class="p">.</span><span class="nx">stack</span><span class="p">;};</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">UnexpectedError</span><span class="p">,</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">AssertionError</span><span class="p">);</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">ArrayAssert</span><span class="o">=</span><span class="p">{</span><span class="nx">contains</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="nx">D</span><span class="p">,</span><span class="nx">B</span><span class="p">){</span><span class="kd">var</span> <span class="nx">C</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="kd">var</span> <span class="nx">F</span><span class="o">=</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Assert</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">A</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">A</span><span class="o">&lt;</span><span class="nx">D</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;!</span><span class="nx">C</span><span class="p">;</span><span class="nx">A</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">D</span><span class="p">[</span><span class="nx">A</span><span class="p">]</span><span class="o">===</span><span class="nx">E</span><span class="p">){</span><span class="nx">C</span><span class="o">=</span><span class="kc">true</span><span class="p">;}}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">C</span><span class="p">){</span><span class="nx">F</span><span class="p">.</span><span class="nx">fail</span><span class="p">(</span><span class="nx">F</span><span class="p">.</span><span class="nx">_formatMessage</span><span class="p">(</span><span class="nx">B</span><span class="p">,</span><span class="s2">&quot;Value &quot;</span><span class="o">+</span><span class="nx">E</span><span class="o">+</span><span class="s2">&quot; (&quot;</span><span class="o">+</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">E</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;) not found in array [&quot;</span><span class="o">+</span><span class="nx">D</span><span class="o">+</span><span class="s2">&quot;].&quot;</span><span class="p">));}},</span><span class="nx">containsItems</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">C</span><span class="p">,</span><span class="nx">D</span><span class="p">,</span><span class="nx">B</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">A</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">A</span><span class="o">&lt;</span><span class="nx">C</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">A</span><span class="o">++</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">contains</span><span class="p">(</span><span class="nx">C</span><span class="p">[</span><span class="nx">A</span><span class="p">],</span><span class="nx">D</span><span class="p">,</span><span class="nx">B</span><span class="p">);}},</span><span class="nx">containsMatch</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="nx">D</span><span class="p">,</span><span class="nx">B</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">E</span><span class="o">!=</span><span class="s2">&quot;function&quot;</span><span class="p">){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="s2">&quot;ArrayAssert.containsMatch(): First argument must be a function.&quot;</span><span class="p">);}</span><span class="kd">var</span> <span class="nx">C</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="kd">var</span> <span class="nx">F</span><span class="o">=</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Assert</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">A</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">A</span><span class="o">&lt;</span><span class="nx">D</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;!</span><span class="nx">C</span><span class="p">;</span><span class="nx">A</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">E</span><span class="p">(</span><span class="nx">D</span><span class="p">[</span><span class="nx">A</span><span class="p">])){</span><span class="nx">C</span><span class="o">=</span><span class="kc">true</span><span class="p">;}}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">C</span><span class="p">){</span><span class="nx">F</span><span class="p">.</span><span class="nx">fail</span><span class="p">(</span><span class="nx">F</span><span class="p">.</span><span class="nx">_formatMessage</span><span class="p">(</span><span class="nx">B</span><span class="p">,</span><span class="s2">&quot;No match found in array [&quot;</span><span class="o">+</span><span class="nx">D</span><span class="o">+</span><span class="s2">&quot;].&quot;</span><span class="p">));}},</span><span class="nx">doesNotContain</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="nx">D</span><span class="p">,</span><span class="nx">B</span><span class="p">){</span><span class="kd">var</span> <span class="nx">C</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="kd">var</span> <span class="nx">F</span><span class="o">=</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Assert</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">A</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">A</span><span class="o">&lt;</span><span class="nx">D</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;!</span><span class="nx">C</span><span class="p">;</span><span class="nx">A</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">D</span><span class="p">[</span><span class="nx">A</span><span class="p">]</span><span class="o">===</span><span class="nx">E</span><span class="p">){</span><span class="nx">C</span><span class="o">=</span><span class="kc">true</span><span class="p">;}}</span><span class="k">if</span><span class="p">(</span><span class="nx">C</span><span class="p">){</span><span class="nx">F</span><span class="p">.</span><span class="nx">fail</span><span class="p">(</span><span class="nx">F</span><span class="p">.</span><span class="nx">_formatMessage</span><span class="p">(</span><span class="nx">B</span><span class="p">,</span><span class="s2">&quot;Value found in array [&quot;</span><span class="o">+</span><span class="nx">D</span><span class="o">+</span><span class="s2">&quot;].&quot;</span><span class="p">));}},</span><span class="nx">doesNotContainItems</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">C</span><span class="p">,</span><span class="nx">D</span><span class="p">,</span><span class="nx">B</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">A</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">A</span><span class="o">&lt;</span><span class="nx">C</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">A</span><span class="o">++</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">doesNotContain</span><span class="p">(</span><span class="nx">C</span><span class="p">[</span><span class="nx">A</span><span class="p">],</span><span class="nx">D</span><span class="p">,</span><span class="nx">B</span><span class="p">);}},</span><span class="nx">doesNotContainMatch</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="nx">D</span><span class="p">,</span><span class="nx">B</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">E</span><span class="o">!=</span><span class="s2">&quot;function&quot;</span><span class="p">){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="s2">&quot;ArrayAssert.doesNotContainMatch(): First argument must be a function.&quot;</span><span class="p">);}</span><span class="kd">var</span> <span class="nx">C</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="kd">var</span> <span class="nx">F</span><span class="o">=</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Assert</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">A</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">A</span><span class="o">&lt;</span><span class="nx">D</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;!</span><span class="nx">C</span><span class="p">;</span><span class="nx">A</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">E</span><span class="p">(</span><span class="nx">D</span><span class="p">[</span><span class="nx">A</span><span class="p">])){</span><span class="nx">C</span><span class="o">=</span><span class="kc">true</span><span class="p">;}}</span><span class="k">if</span><span class="p">(</span><span class="nx">C</span><span class="p">){</span><span class="nx">F</span><span class="p">.</span><span class="nx">fail</span><span class="p">(</span><span class="nx">F</span><span class="p">.</span><span class="nx">_formatMessage</span><span class="p">(</span><span class="nx">B</span><span class="p">,</span><span class="s2">&quot;Value found in array [&quot;</span><span class="o">+</span><span class="nx">D</span><span class="o">+</span><span class="s2">&quot;].&quot;</span><span class="p">));}},</span><span class="nx">indexOf</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="nx">D</span><span class="p">,</span><span class="nx">A</span><span class="p">,</span><span class="nx">C</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">B</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">B</span><span class="o">&lt;</span><span class="nx">D</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">B</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">D</span><span class="p">[</span><span class="nx">B</span><span class="p">]</span><span class="o">===</span><span class="nx">E</span><span class="p">){</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Assert</span><span class="p">.</span><span class="nx">areEqual</span><span class="p">(</span><span class="nx">A</span><span class="p">,</span><span class="nx">B</span><span class="p">,</span><span class="nx">C</span><span class="o">||</span><span class="s2">&quot;Value exists at index &quot;</span><span class="o">+</span><span class="nx">B</span><span class="o">+</span><span class="s2">&quot; but should be at index &quot;</span><span class="o">+</span><span class="nx">A</span><span class="o">+</span><span class="s2">&quot;.&quot;</span><span class="p">);</span><span class="k">return</span><span class="p">;}}</span><span class="kd">var</span> <span class="nx">F</span><span class="o">=</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Assert</span><span class="p">;</span><span class="nx">F</span><span class="p">.</span><span class="nx">fail</span><span class="p">(</span><span class="nx">F</span><span class="p">.</span><span class="nx">_formatMessage</span><span class="p">(</span><span class="nx">C</span><span class="p">,</span><span class="s2">&quot;Value doesn&#39;t exist in array [&quot;</span><span class="o">+</span><span class="nx">D</span><span class="o">+</span><span class="s2">&quot;].&quot;</span><span class="p">));},</span><span class="nx">itemsAreEqual</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">D</span><span class="p">,</span><span class="nx">F</span><span class="p">,</span><span class="nx">C</span><span class="p">){</span><span class="kd">var</span> <span class="nx">A</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">D</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">F</span><span class="p">.</span><span class="nx">length</span><span class="o">||</span><span class="mi">0</span><span class="p">);</span><span class="kd">var</span> <span class="nx">E</span><span class="o">=</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Assert</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">B</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">B</span><span class="o">&lt;</span><span class="nx">A</span><span class="p">;</span><span class="nx">B</span><span class="o">++</span><span class="p">){</span><span class="nx">E</span><span class="p">.</span><span class="nx">areEqual</span><span class="p">(</span><span class="nx">D</span><span class="p">[</span><span class="nx">B</span><span class="p">],</span><span class="nx">F</span><span class="p">[</span><span class="nx">B</span><span class="p">],</span><span class="nx">E</span><span class="p">.</span><span class="nx">_formatMessage</span><span class="p">(</span><span class="nx">C</span><span class="p">,</span><span class="s2">&quot;Values in position &quot;</span><span class="o">+</span><span class="nx">B</span><span class="o">+</span><span class="s2">&quot; are not equal.&quot;</span><span class="p">));}},</span><span class="nx">itemsAreEquivalent</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="nx">F</span><span class="p">,</span><span class="nx">B</span><span class="p">,</span><span class="nx">D</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">B</span><span class="o">!=</span><span class="s2">&quot;function&quot;</span><span class="p">){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="s2">&quot;ArrayAssert.itemsAreEquivalent(): Third argument must be a function.&quot;</span><span class="p">);}</span><span class="kd">var</span> <span class="nx">A</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">E</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">F</span><span class="p">.</span><span class="nx">length</span><span class="o">||</span><span class="mi">0</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">C</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">C</span><span class="o">&lt;</span><span class="nx">A</span><span class="p">;</span><span class="nx">C</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">B</span><span class="p">(</span><span class="nx">E</span><span class="p">[</span><span class="nx">C</span><span class="p">],</span><span class="nx">F</span><span class="p">[</span><span class="nx">C</span><span class="p">])){</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">ComparisonFailure</span><span class="p">(</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Assert</span><span class="p">.</span><span class="nx">_formatMessage</span><span class="p">(</span><span class="nx">D</span><span class="p">,</span><span class="s2">&quot;Values in position &quot;</span><span class="o">+</span><span class="nx">C</span><span class="o">+</span><span class="s2">&quot; are not equivalent.&quot;</span><span class="p">),</span><span class="nx">E</span><span class="p">[</span><span class="nx">C</span><span class="p">],</span><span class="nx">F</span><span class="p">[</span><span class="nx">C</span><span class="p">]);}}},</span><span class="nx">isEmpty</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">C</span><span class="p">,</span><span class="nx">A</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">C</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">){</span><span class="kd">var</span> <span class="nx">B</span><span class="o">=</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Assert</span><span class="p">;</span><span class="nx">B</span><span class="p">.</span><span class="nx">fail</span><span class="p">(</span><span class="nx">B</span><span class="p">.</span><span class="nx">_formatMessage</span><span class="p">(</span><span class="nx">A</span><span class="p">,</span><span class="s2">&quot;Array should be empty.&quot;</span><span class="p">));}},</span><span class="nx">isNotEmpty</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">C</span><span class="p">,</span><span class="nx">A</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">C</span><span class="p">.</span><span class="nx">length</span><span class="o">===</span><span class="mi">0</span><span class="p">){</span><span class="kd">var</span> <span class="nx">B</span><span class="o">=</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Assert</span><span class="p">;</span><span class="nx">B</span><span class="p">.</span><span class="nx">fail</span><span class="p">(</span><span class="nx">B</span><span class="p">.</span><span class="nx">_formatMessage</span><span class="p">(</span><span class="nx">A</span><span class="p">,</span><span class="s2">&quot;Array should not be empty.&quot;</span><span class="p">));}},</span><span class="nx">itemsAreSame</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">D</span><span class="p">,</span><span class="nx">F</span><span class="p">,</span><span class="nx">C</span><span class="p">){</span><span class="kd">var</span> <span class="nx">A</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">D</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">F</span><span class="p">.</span><span class="nx">length</span><span class="o">||</span><span class="mi">0</span><span class="p">);</span><span class="kd">var</span> <span class="nx">E</span><span class="o">=</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Assert</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">B</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">B</span><span class="o">&lt;</span><span class="nx">A</span><span class="p">;</span><span class="nx">B</span><span class="o">++</span><span class="p">){</span><span class="nx">E</span><span class="p">.</span><span class="nx">areSame</span><span class="p">(</span><span class="nx">D</span><span class="p">[</span><span class="nx">B</span><span class="p">],</span><span class="nx">F</span><span class="p">[</span><span class="nx">B</span><span class="p">],</span><span class="nx">E</span><span class="p">.</span><span class="nx">_formatMessage</span><span class="p">(</span><span class="nx">C</span><span class="p">,</span><span class="s2">&quot;Values in position &quot;</span><span class="o">+</span><span class="nx">B</span><span class="o">+</span><span class="s2">&quot; are not the same.&quot;</span><span class="p">));}},</span><span class="nx">lastIndexOf</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="nx">D</span><span class="p">,</span><span class="nx">A</span><span class="p">,</span><span class="nx">C</span><span class="p">){</span><span class="kd">var</span> <span class="nx">F</span><span class="o">=</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Assert</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">B</span><span class="o">=</span><span class="nx">D</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">B</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="nx">B</span><span class="o">--</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">D</span><span class="p">[</span><span class="nx">B</span><span class="p">]</span><span class="o">===</span><span class="nx">E</span><span class="p">){</span><span class="nx">F</span><span class="p">.</span><span class="nx">areEqual</span><span class="p">(</span><span class="nx">A</span><span class="p">,</span><span class="nx">B</span><span class="p">,</span><span class="nx">F</span><span class="p">.</span><span class="nx">_formatMessage</span><span class="p">(</span><span class="nx">C</span><span class="p">,</span><span class="s2">&quot;Value exists at index &quot;</span><span class="o">+</span><span class="nx">B</span><span class="o">+</span><span class="s2">&quot; but should be at index &quot;</span><span class="o">+</span><span class="nx">A</span><span class="o">+</span><span class="s2">&quot;.&quot;</span><span class="p">));</span><span class="k">return</span><span class="p">;}}</span><span class="nx">F</span><span class="p">.</span><span class="nx">fail</span><span class="p">(</span><span class="nx">F</span><span class="p">.</span><span class="nx">_formatMessage</span><span class="p">(</span><span class="nx">C</span><span class="p">,</span><span class="s2">&quot;Value doesn&#39;t exist in array.&quot;</span><span class="p">));}};</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">namespace</span><span class="p">(</span><span class="s2">&quot;util&quot;</span><span class="p">);</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">ObjectAssert</span><span class="o">=</span><span class="p">{</span><span class="nx">propertiesAreEqual</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">D</span><span class="p">,</span><span class="nx">G</span><span class="p">,</span><span class="nx">C</span><span class="p">){</span><span class="kd">var</span> <span class="nx">F</span><span class="o">=</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Assert</span><span class="p">;</span><span class="kd">var</span> <span class="nx">B</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">E</span> <span class="k">in</span> <span class="nx">D</span><span class="p">){</span><span class="nx">B</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">E</span><span class="p">);}</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">A</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">A</span><span class="o">&lt;</span><span class="nx">B</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">A</span><span class="o">++</span><span class="p">){</span><span class="nx">F</span><span class="p">.</span><span class="nx">isNotUndefined</span><span class="p">(</span><span class="nx">G</span><span class="p">[</span><span class="nx">B</span><span class="p">[</span><span class="nx">A</span><span class="p">]],</span><span class="nx">F</span><span class="p">.</span><span class="nx">_formatMessage</span><span class="p">(</span><span class="nx">C</span><span class="p">,</span><span class="s2">&quot;Property &#39;&quot;</span><span class="o">+</span><span class="nx">B</span><span class="p">[</span><span class="nx">A</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot;&#39; expected.&quot;</span><span class="p">));}},</span><span class="nx">hasProperty</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">A</span><span class="p">,</span><span class="nx">B</span><span class="p">,</span><span class="nx">C</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">A</span> <span class="k">in</span> <span class="nx">B</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">D</span><span class="o">=</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Assert</span><span class="p">;</span><span class="nx">D</span><span class="p">.</span><span class="nx">fail</span><span class="p">(</span><span class="nx">D</span><span class="p">.</span><span class="nx">_formatMessage</span><span class="p">(</span><span class="nx">C</span><span class="p">,</span><span class="s2">&quot;Property &#39;&quot;</span><span class="o">+</span><span class="nx">A</span><span class="o">+</span><span class="s2">&quot;&#39; not found on object.&quot;</span><span class="p">));}},</span><span class="nx">hasOwnProperty</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">A</span><span class="p">,</span><span class="nx">B</span><span class="p">,</span><span class="nx">C</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">B</span><span class="p">,</span><span class="nx">A</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">D</span><span class="o">=</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Assert</span><span class="p">;</span><span class="nx">D</span><span class="p">.</span><span class="nx">fail</span><span class="p">(</span><span class="nx">D</span><span class="p">.</span><span class="nx">_formatMessage</span><span class="p">(</span><span class="nx">C</span><span class="p">,</span><span class="s2">&quot;Property &#39;&quot;</span><span class="o">+</span><span class="nx">A</span><span class="o">+</span><span class="s2">&quot;&#39; not found on object instance.&quot;</span><span class="p">));}}};</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">DateAssert</span><span class="o">=</span><span class="p">{</span><span class="nx">datesAreEqual</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">B</span><span class="p">,</span><span class="nx">D</span><span class="p">,</span><span class="nx">A</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">B</span> <span class="k">instanceof</span> <span class="nb">Date</span><span class="o">&amp;&amp;</span><span class="nx">D</span> <span class="k">instanceof</span> <span class="nb">Date</span><span class="p">){</span><span class="kd">var</span> <span class="nx">C</span><span class="o">=</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Assert</span><span class="p">;</span><span class="nx">C</span><span class="p">.</span><span class="nx">areEqual</span><span class="p">(</span><span class="nx">B</span><span class="p">.</span><span class="nx">getFullYear</span><span class="p">(),</span><span class="nx">D</span><span class="p">.</span><span class="nx">getFullYear</span><span class="p">(),</span><span class="nx">C</span><span class="p">.</span><span class="nx">_formatMessage</span><span class="p">(</span><span class="nx">A</span><span class="p">,</span><span class="s2">&quot;Years should be equal.&quot;</span><span class="p">));</span><span class="nx">C</span><span class="p">.</span><span class="nx">areEqual</span><span class="p">(</span><span class="nx">B</span><span class="p">.</span><span class="nx">getMonth</span><span class="p">(),</span><span class="nx">D</span><span class="p">.</span><span class="nx">getMonth</span><span class="p">(),</span><span class="nx">C</span><span class="p">.</span><span class="nx">_formatMessage</span><span class="p">(</span><span class="nx">A</span><span class="p">,</span><span class="s2">&quot;Months should be equal.&quot;</span><span class="p">));</span><span class="nx">C</span><span class="p">.</span><span class="nx">areEqual</span><span class="p">(</span><span class="nx">B</span><span class="p">.</span><span class="nx">getDate</span><span class="p">(),</span><span class="nx">D</span><span class="p">.</span><span class="nx">getDate</span><span class="p">(),</span><span class="nx">C</span><span class="p">.</span><span class="nx">_formatMessage</span><span class="p">(</span><span class="nx">A</span><span class="p">,</span><span class="s2">&quot;Day of month should be equal.&quot;</span><span class="p">));}</span><span class="k">else</span><span class="p">{</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="s2">&quot;DateAssert.datesAreEqual(): Expected and actual values must be Date objects.&quot;</span><span class="p">);}},</span><span class="nx">timesAreEqual</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">B</span><span class="p">,</span><span class="nx">D</span><span class="p">,</span><span class="nx">A</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">B</span> <span class="k">instanceof</span> <span class="nb">Date</span><span class="o">&amp;&amp;</span><span class="nx">D</span> <span class="k">instanceof</span> <span class="nb">Date</span><span class="p">){</span><span class="kd">var</span> <span class="nx">C</span><span class="o">=</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">Assert</span><span class="p">;</span><span class="nx">C</span><span class="p">.</span><span class="nx">areEqual</span><span class="p">(</span><span class="nx">B</span><span class="p">.</span><span class="nx">getHours</span><span class="p">(),</span><span class="nx">D</span><span class="p">.</span><span class="nx">getHours</span><span class="p">(),</span><span class="nx">C</span><span class="p">.</span><span class="nx">_formatMessage</span><span class="p">(</span><span class="nx">A</span><span class="p">,</span><span class="s2">&quot;Hours should be equal.&quot;</span><span class="p">));</span><span class="nx">C</span><span class="p">.</span><span class="nx">areEqual</span><span class="p">(</span><span class="nx">B</span><span class="p">.</span><span class="nx">getMinutes</span><span class="p">(),</span><span class="nx">D</span><span class="p">.</span><span class="nx">getMinutes</span><span class="p">(),</span><span class="nx">C</span><span class="p">.</span><span class="nx">_formatMessage</span><span class="p">(</span><span class="nx">A</span><span class="p">,</span><span class="s2">&quot;Minutes should be equal.&quot;</span><span class="p">));</span><span class="nx">C</span><span class="p">.</span><span class="nx">areEqual</span><span class="p">(</span><span class="nx">B</span><span class="p">.</span><span class="nx">getSeconds</span><span class="p">(),</span><span class="nx">D</span><span class="p">.</span><span class="nx">getSeconds</span><span class="p">(),</span><span class="nx">C</span><span class="p">.</span><span class="nx">_formatMessage</span><span class="p">(</span><span class="nx">A</span><span class="p">,</span><span class="s2">&quot;Seconds should be equal.&quot;</span><span class="p">));}</span><span class="k">else</span><span class="p">{</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">(</span><span class="s2">&quot;DateAssert.timesAreEqual(): Expected and actual values must be Date objects.&quot;</span><span class="p">);}}};</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">namespace</span><span class="p">(</span><span class="s2">&quot;tool&quot;</span><span class="p">);</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">tool</span><span class="p">.</span><span class="nx">TestManager</span><span class="o">=</span><span class="p">{</span><span class="nx">TEST_PAGE_BEGIN_EVENT</span><span class="o">:</span><span class="s2">&quot;testpagebegin&quot;</span><span class="p">,</span><span class="nx">TEST_PAGE_COMPLETE_EVENT</span><span class="o">:</span><span class="s2">&quot;testpagecomplete&quot;</span><span class="p">,</span><span class="nx">TEST_MANAGER_BEGIN_EVENT</span><span class="o">:</span><span class="s2">&quot;testmanagerbegin&quot;</span><span class="p">,</span><span class="nx">TEST_MANAGER_COMPLETE_EVENT</span><span class="o">:</span><span class="s2">&quot;testmanagercomplete&quot;</span><span class="p">,</span><span class="nx">_curPage</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">_frame</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">_logger</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">_timeoutId</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">_pages</span><span class="o">:</span><span class="p">[],</span><span class="nx">_results</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">_handleTestRunnerComplete</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">A</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">fireEvent</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">TEST_PAGE_COMPLETE_EVENT</span><span class="p">,{</span><span class="nx">page</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">_curPage</span><span class="p">,</span><span class="nx">results</span><span class="o">:</span><span class="nx">A</span><span class="p">.</span><span class="nx">results</span><span class="p">});</span><span class="k">this</span><span class="p">.</span><span class="nx">_processResults</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_curPage</span><span class="p">,</span><span class="nx">A</span><span class="p">.</span><span class="nx">results</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_logger</span><span class="p">.</span><span class="nx">clearTestRunner</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_pages</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_timeoutId</span><span class="o">=</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">tool</span><span class="p">.</span><span class="nx">TestManager</span><span class="p">.</span><span class="nx">_run</span><span class="p">();},</span><span class="mi">1000</span><span class="p">);}</span><span class="k">else</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">fireEvent</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">TEST_MANAGER_COMPLETE_EVENT</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_results</span><span class="p">);}},</span><span class="nx">_processResults</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">C</span><span class="p">,</span><span class="nx">A</span><span class="p">){</span><span class="kd">var</span> <span class="nx">B</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_results</span><span class="p">;</span><span class="nx">B</span><span class="p">.</span><span class="nx">passed</span><span class="o">+=</span><span class="nx">A</span><span class="p">.</span><span class="nx">passed</span><span class="p">;</span><span class="nx">B</span><span class="p">.</span><span class="nx">failed</span><span class="o">+=</span><span class="nx">A</span><span class="p">.</span><span class="nx">failed</span><span class="p">;</span><span class="nx">B</span><span class="p">.</span><span class="nx">ignored</span><span class="o">+=</span><span class="nx">A</span><span class="p">.</span><span class="nx">ignored</span><span class="p">;</span><span class="nx">B</span><span class="p">.</span><span class="nx">total</span><span class="o">+=</span><span class="nx">A</span><span class="p">.</span><span class="nx">total</span><span class="p">;</span><span class="nx">B</span><span class="p">.</span><span class="nx">duration</span><span class="o">+=</span><span class="nx">A</span><span class="p">.</span><span class="nx">duration</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">A</span><span class="p">.</span><span class="nx">failed</span><span class="p">){</span><span class="nx">B</span><span class="p">.</span><span class="nx">failedPages</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">C</span><span class="p">);}</span><span class="k">else</span><span class="p">{</span><span class="nx">B</span><span class="p">.</span><span class="nx">passedPages</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">C</span><span class="p">);}</span><span class="nx">A</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="nx">C</span><span class="p">;</span><span class="nx">A</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="s2">&quot;page&quot;</span><span class="p">;</span><span class="nx">B</span><span class="p">[</span><span class="nx">C</span><span class="p">]</span><span class="o">=</span><span class="nx">A</span><span class="p">;},</span><span class="nx">_run</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_curPage</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_pages</span><span class="p">.</span><span class="nx">shift</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">fireEvent</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">TEST_PAGE_BEGIN_EVENT</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_curPage</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_frame</span><span class="p">.</span><span class="nx">location</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_curPage</span><span class="p">);},</span><span class="nx">load</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nx">parent</span><span class="p">.</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">tool</span><span class="p">.</span><span class="nx">TestManager</span><span class="o">!==</span><span class="k">this</span><span class="p">){</span><span class="nx">parent</span><span class="p">.</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">tool</span><span class="p">.</span><span class="nx">TestManager</span><span class="p">.</span><span class="nx">load</span><span class="p">();}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_frame</span><span class="p">){</span><span class="kd">var</span> <span class="nx">A</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_frame</span><span class="p">.</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">tool</span><span class="p">.</span><span class="nx">TestRunner</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_logger</span><span class="p">.</span><span class="nx">setTestRunner</span><span class="p">(</span><span class="nx">A</span><span class="p">);</span><span class="nx">A</span><span class="p">.</span><span class="nx">subscribe</span><span class="p">(</span><span class="nx">A</span><span class="p">.</span><span class="nx">COMPLETE_EVENT</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_handleTestRunnerComplete</span><span class="p">,</span><span class="k">this</span><span class="p">,</span><span class="kc">true</span><span class="p">);</span><span class="nx">A</span><span class="p">.</span><span class="nx">run</span><span class="p">();}}},</span><span class="nx">setPages</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">A</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_pages</span><span class="o">=</span><span class="nx">A</span><span class="p">;},</span><span class="nx">start</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">_initialized</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">createEvent</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">TEST_PAGE_BEGIN_EVENT</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">createEvent</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">TEST_PAGE_COMPLETE_EVENT</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">createEvent</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">TEST_MANAGER_BEGIN_EVENT</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">createEvent</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">TEST_MANAGER_COMPLETE_EVENT</span><span class="p">);</span>
<span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">_frame</span><span class="p">){</span><span class="kd">var</span> <span class="nx">A</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;iframe&quot;</span><span class="p">);</span><span class="nx">A</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">visibility</span><span class="o">=</span><span class="s2">&quot;hidden&quot;</span><span class="p">;</span><span class="nx">A</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">position</span><span class="o">=</span><span class="s2">&quot;absolute&quot;</span><span class="p">;</span><span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">A</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_frame</span><span class="o">=</span><span class="nx">A</span><span class="p">.</span><span class="nx">contentWindow</span><span class="o">||</span><span class="nx">A</span><span class="p">.</span><span class="nx">contentDocument</span><span class="p">.</span><span class="nx">parentWindow</span><span class="p">;}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">_logger</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_logger</span><span class="o">=</span><span class="k">new</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">tool</span><span class="p">.</span><span class="nx">TestLogger</span><span class="p">();}</span><span class="k">this</span><span class="p">.</span><span class="nx">_initialized</span><span class="o">=</span><span class="kc">true</span><span class="p">;}</span><span class="k">this</span><span class="p">.</span><span class="nx">_results</span><span class="o">=</span><span class="p">{</span><span class="nx">passed</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">failed</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">ignored</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">total</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;report&quot;</span><span class="p">,</span><span class="nx">name</span><span class="o">:</span><span class="s2">&quot;YUI Test Results&quot;</span><span class="p">,</span><span class="nx">duration</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">failedPages</span><span class="o">:</span><span class="p">[],</span><span class="nx">passedPages</span><span class="o">:</span><span class="p">[]};</span><span class="k">this</span><span class="p">.</span><span class="nx">fireEvent</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">TEST_MANAGER_BEGIN_EVENT</span><span class="p">,</span><span class="kc">null</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_run</span><span class="p">();},</span><span class="nx">stop</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">clearTimeout</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_timeoutId</span><span class="p">);}};</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">augmentObject</span><span class="p">(</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">tool</span><span class="p">.</span><span class="nx">TestManager</span><span class="p">,</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">EventProvider</span><span class="p">.</span><span class="nx">prototype</span><span class="p">);</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">namespace</span><span class="p">(</span><span class="s2">&quot;tool&quot;</span><span class="p">);</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">tool</span><span class="p">.</span><span class="nx">TestLogger</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">B</span><span class="p">,</span><span class="nx">A</span><span class="p">){</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">tool</span><span class="p">.</span><span class="nx">TestLogger</span><span class="p">.</span><span class="nx">superclass</span><span class="p">.</span><span class="nx">constructor</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">B</span><span class="p">,</span><span class="nx">A</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">init</span><span class="p">();};</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">tool</span><span class="p">.</span><span class="nx">TestLogger</span><span class="p">,</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">widget</span><span class="p">.</span><span class="nx">LogReader</span><span class="p">,{</span><span class="nx">footerEnabled</span><span class="o">:</span><span class="kc">true</span><span class="p">,</span><span class="nx">newestOnTop</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="nx">formatMsg</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">B</span><span class="p">){</span><span class="kd">var</span> <span class="nx">A</span><span class="o">=</span><span class="nx">B</span><span class="p">.</span><span class="nx">category</span><span class="p">;</span><span class="kd">var</span> <span class="nx">C</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">html2Text</span><span class="p">(</span><span class="nx">B</span><span class="p">.</span><span class="nx">msg</span><span class="p">);</span><span class="k">return</span><span class="s1">&#39;&lt;pre&gt;&lt;p&gt;&lt;span class=&quot;&#39;</span><span class="o">+</span><span class="nx">A</span><span class="o">+</span><span class="s1">&#39;&quot;&gt;&#39;</span><span class="o">+</span><span class="nx">A</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot;&lt;/span&gt; &quot;</span><span class="o">+</span><span class="nx">C</span><span class="o">+</span><span class="s2">&quot;&lt;/p&gt;&lt;/pre&gt;&quot;</span><span class="p">;},</span><span class="nx">init</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">tool</span><span class="p">.</span><span class="nx">TestRunner</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">setTestRunner</span><span class="p">(</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">tool</span><span class="p">.</span><span class="nx">TestRunner</span><span class="p">);}</span><span class="k">this</span><span class="p">.</span><span class="nx">hideSource</span><span class="p">(</span><span class="s2">&quot;global&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">hideSource</span><span class="p">(</span><span class="s2">&quot;LogReader&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">hideCategory</span><span class="p">(</span><span class="s2">&quot;warn&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">hideCategory</span><span class="p">(</span><span class="s2">&quot;window&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">hideCategory</span><span class="p">(</span><span class="s2">&quot;time&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">clearConsole</span><span class="p">();},</span><span class="nx">clearTestRunner</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_runner</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_runner</span><span class="p">.</span><span class="nx">unsubscribeAll</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">_runner</span><span class="o">=</span><span class="kc">null</span><span class="p">;}},</span><span class="nx">setTestRunner</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">A</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_runner</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">clearTestRunner</span><span class="p">();}</span><span class="k">this</span><span class="p">.</span><span class="nx">_runner</span><span class="o">=</span><span class="nx">A</span><span class="p">;</span><span class="nx">A</span><span class="p">.</span><span class="nx">subscribe</span><span class="p">(</span><span class="nx">A</span><span class="p">.</span><span class="nx">TEST_PASS_EVENT</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_handleTestRunnerEvent</span><span class="p">,</span><span class="k">this</span><span class="p">,</span><span class="kc">true</span><span class="p">);</span><span class="nx">A</span><span class="p">.</span><span class="nx">subscribe</span><span class="p">(</span><span class="nx">A</span><span class="p">.</span><span class="nx">TEST_FAIL_EVENT</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_handleTestRunnerEvent</span><span class="p">,</span><span class="k">this</span><span class="p">,</span><span class="kc">true</span><span class="p">);</span><span class="nx">A</span><span class="p">.</span><span class="nx">subscribe</span><span class="p">(</span><span class="nx">A</span><span class="p">.</span><span class="nx">TEST_IGNORE_EVENT</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_handleTestRunnerEvent</span><span class="p">,</span><span class="k">this</span><span class="p">,</span><span class="kc">true</span><span class="p">);</span><span class="nx">A</span><span class="p">.</span><span class="nx">subscribe</span><span class="p">(</span><span class="nx">A</span><span class="p">.</span><span class="nx">BEGIN_EVENT</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_handleTestRunnerEvent</span><span class="p">,</span><span class="k">this</span><span class="p">,</span><span class="kc">true</span><span class="p">);</span><span class="nx">A</span><span class="p">.</span><span class="nx">subscribe</span><span class="p">(</span><span class="nx">A</span><span class="p">.</span><span class="nx">COMPLETE_EVENT</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_handleTestRunnerEvent</span><span class="p">,</span><span class="k">this</span><span class="p">,</span><span class="kc">true</span><span class="p">);</span><span class="nx">A</span><span class="p">.</span><span class="nx">subscribe</span><span class="p">(</span><span class="nx">A</span><span class="p">.</span><span class="nx">TEST_SUITE_BEGIN_EVENT</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_handleTestRunnerEvent</span><span class="p">,</span><span class="k">this</span><span class="p">,</span><span class="kc">true</span><span class="p">);</span><span class="nx">A</span><span class="p">.</span><span class="nx">subscribe</span><span class="p">(</span><span class="nx">A</span><span class="p">.</span><span class="nx">TEST_SUITE_COMPLETE_EVENT</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_handleTestRunnerEvent</span><span class="p">,</span><span class="k">this</span><span class="p">,</span><span class="kc">true</span><span class="p">);</span><span class="nx">A</span><span class="p">.</span><span class="nx">subscribe</span><span class="p">(</span><span class="nx">A</span><span class="p">.</span><span class="nx">TEST_CASE_BEGIN_EVENT</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_handleTestRunnerEvent</span><span class="p">,</span><span class="k">this</span><span class="p">,</span><span class="kc">true</span><span class="p">);</span><span class="nx">A</span><span class="p">.</span><span class="nx">subscribe</span><span class="p">(</span><span class="nx">A</span><span class="p">.</span><span class="nx">TEST_CASE_COMPLETE_EVENT</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_handleTestRunnerEvent</span><span class="p">,</span><span class="k">this</span><span class="p">,</span><span class="kc">true</span><span class="p">);},</span><span class="nx">_handleTestRunnerEvent</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">D</span><span class="p">){</span><span class="kd">var</span> <span class="nx">A</span><span class="o">=</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">tool</span><span class="p">.</span><span class="nx">TestRunner</span><span class="p">;</span><span class="kd">var</span> <span class="nx">C</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">B</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">switch</span><span class="p">(</span><span class="nx">D</span><span class="p">.</span><span class="nx">type</span><span class="p">){</span><span class="k">case</span> <span class="nx">A</span><span class="p">.</span><span class="nx">BEGIN_EVENT</span><span class="o">:</span><span class="nx">C</span><span class="o">=</span><span class="s2">&quot;Testing began at &quot;</span><span class="o">+</span><span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">()).</span><span class="nx">toString</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot;.&quot;</span><span class="p">;</span><span class="nx">B</span><span class="o">=</span><span class="s2">&quot;info&quot;</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="nx">A</span><span class="p">.</span><span class="nx">COMPLETE_EVENT</span><span class="o">:</span><span class="nx">C</span><span class="o">=</span><span class="s2">&quot;Testing completed at &quot;</span><span class="o">+</span><span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">()).</span><span class="nx">toString</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot;.\nPassed:&quot;</span><span class="o">+</span><span class="nx">D</span><span class="p">.</span><span class="nx">results</span><span class="p">.</span><span class="nx">passed</span><span class="o">+</span><span class="s2">&quot; Failed:&quot;</span><span class="o">+</span><span class="nx">D</span><span class="p">.</span><span class="nx">results</span><span class="p">.</span><span class="nx">failed</span><span class="o">+</span><span class="s2">&quot; Total:&quot;</span><span class="o">+</span><span class="nx">D</span><span class="p">.</span><span class="nx">results</span><span class="p">.</span><span class="nx">total</span><span class="p">;</span><span class="nx">B</span><span class="o">=</span><span class="s2">&quot;info&quot;</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="nx">A</span><span class="p">.</span><span class="nx">TEST_FAIL_EVENT</span><span class="o">:</span><span class="nx">C</span><span class="o">=</span><span class="nx">D</span><span class="p">.</span><span class="nx">testName</span><span class="o">+</span><span class="s2">&quot;: &quot;</span><span class="o">+</span><span class="nx">D</span><span class="p">.</span><span class="nx">error</span><span class="p">.</span><span class="nx">getMessage</span><span class="p">();</span><span class="nx">B</span><span class="o">=</span><span class="s2">&quot;fail&quot;</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="nx">A</span><span class="p">.</span><span class="nx">TEST_IGNORE_EVENT</span><span class="o">:</span><span class="nx">C</span><span class="o">=</span><span class="nx">D</span><span class="p">.</span><span class="nx">testName</span><span class="o">+</span><span class="s2">&quot;: ignored.&quot;</span><span class="p">;</span><span class="nx">B</span><span class="o">=</span><span class="s2">&quot;ignore&quot;</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="nx">A</span><span class="p">.</span><span class="nx">TEST_PASS_EVENT</span><span class="o">:</span><span class="nx">C</span><span class="o">=</span><span class="nx">D</span><span class="p">.</span><span class="nx">testName</span><span class="o">+</span><span class="s2">&quot;: passed.&quot;</span><span class="p">;</span><span class="nx">B</span><span class="o">=</span><span class="s2">&quot;pass&quot;</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="nx">A</span><span class="p">.</span><span class="nx">TEST_SUITE_BEGIN_EVENT</span><span class="o">:</span><span class="nx">C</span><span class="o">=</span><span class="s1">&#39;Test suite &quot;&#39;</span><span class="o">+</span><span class="nx">D</span><span class="p">.</span><span class="nx">testSuite</span><span class="p">.</span><span class="nx">name</span><span class="o">+</span><span class="s1">&#39;&quot; started.&#39;</span><span class="p">;</span><span class="nx">B</span><span class="o">=</span><span class="s2">&quot;info&quot;</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="nx">A</span><span class="p">.</span><span class="nx">TEST_SUITE_COMPLETE_EVENT</span><span class="o">:</span><span class="nx">C</span><span class="o">=</span><span class="s1">&#39;Test suite &quot;&#39;</span><span class="o">+</span><span class="nx">D</span><span class="p">.</span><span class="nx">testSuite</span><span class="p">.</span><span class="nx">name</span><span class="o">+</span><span class="s1">&#39;&quot; completed.\nPassed:&#39;</span><span class="o">+</span><span class="nx">D</span><span class="p">.</span><span class="nx">results</span><span class="p">.</span><span class="nx">passed</span><span class="o">+</span><span class="s2">&quot; Failed:&quot;</span><span class="o">+</span><span class="nx">D</span><span class="p">.</span><span class="nx">results</span><span class="p">.</span><span class="nx">failed</span><span class="o">+</span><span class="s2">&quot; Total:&quot;</span><span class="o">+</span><span class="nx">D</span><span class="p">.</span><span class="nx">results</span><span class="p">.</span><span class="nx">total</span><span class="p">;</span><span class="nx">B</span><span class="o">=</span><span class="s2">&quot;info&quot;</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="nx">A</span><span class="p">.</span><span class="nx">TEST_CASE_BEGIN_EVENT</span><span class="o">:</span><span class="nx">C</span><span class="o">=</span><span class="s1">&#39;Test case &quot;&#39;</span><span class="o">+</span><span class="nx">D</span><span class="p">.</span><span class="nx">testCase</span><span class="p">.</span><span class="nx">name</span><span class="o">+</span><span class="s1">&#39;&quot; started.&#39;</span><span class="p">;</span><span class="nx">B</span><span class="o">=</span><span class="s2">&quot;info&quot;</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="nx">A</span><span class="p">.</span><span class="nx">TEST_CASE_COMPLETE_EVENT</span><span class="o">:</span><span class="nx">C</span><span class="o">=</span><span class="s1">&#39;Test case &quot;&#39;</span><span class="o">+</span><span class="nx">D</span><span class="p">.</span><span class="nx">testCase</span><span class="p">.</span><span class="nx">name</span><span class="o">+</span><span class="s1">&#39;&quot; completed.\nPassed:&#39;</span><span class="o">+</span><span class="nx">D</span><span class="p">.</span><span class="nx">results</span><span class="p">.</span><span class="nx">passed</span><span class="o">+</span><span class="s2">&quot; Failed:&quot;</span><span class="o">+</span><span class="nx">D</span><span class="p">.</span><span class="nx">results</span><span class="p">.</span><span class="nx">failed</span><span class="o">+</span><span class="s2">&quot; Total:&quot;</span><span class="o">+</span><span class="nx">D</span><span class="p">.</span><span class="nx">results</span><span class="p">.</span><span class="nx">total</span><span class="p">;</span><span class="nx">B</span><span class="o">=</span><span class="s2">&quot;info&quot;</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">default</span><span class="o">:</span><span class="nx">C</span><span class="o">=</span><span class="s2">&quot;Unexpected event &quot;</span><span class="o">+</span><span class="nx">D</span><span class="p">.</span><span class="nx">type</span><span class="p">;</span><span class="nx">C</span><span class="o">=</span><span class="s2">&quot;info&quot;</span><span class="p">;}</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">C</span><span class="p">,</span><span class="nx">B</span><span class="p">,</span><span class="s2">&quot;TestRunner&quot;</span><span class="p">);}});</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">namespace</span><span class="p">(</span><span class="s2">&quot;tool.TestFormat&quot;</span><span class="p">);</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">tool</span><span class="p">.</span><span class="nx">TestFormat</span><span class="p">.</span><span class="nx">JSON</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">A</span><span class="p">){</span><span class="k">return</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">A</span><span class="p">);};</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">tool</span><span class="p">.</span><span class="nx">TestFormat</span><span class="p">.</span><span class="nx">XML</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">C</span><span class="p">){</span><span class="kd">var</span> <span class="nx">A</span><span class="o">=</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="p">;</span><span class="kd">var</span> <span class="nx">B</span><span class="o">=</span><span class="s2">&quot;&lt;&quot;</span><span class="o">+</span><span class="nx">C</span><span class="p">.</span><span class="nx">type</span><span class="o">+</span><span class="s1">&#39; name=&quot;&#39;</span><span class="o">+</span><span class="nx">C</span><span class="p">.</span><span class="nx">name</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/&quot;/g</span><span class="p">,</span><span class="s2">&quot;&amp;quot;&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/&#39;/g</span><span class="p">,</span><span class="s2">&quot;&amp;apos;&quot;</span><span class="p">)</span><span class="o">+</span><span class="s1">&#39;&quot;&#39;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">A</span><span class="p">.</span><span class="nx">isNumber</span><span class="p">(</span><span class="nx">C</span><span class="p">.</span><span class="nx">duration</span><span class="p">)){</span><span class="nx">B</span><span class="o">+=</span><span class="s1">&#39; duration=&quot;&#39;</span><span class="o">+</span><span class="nx">C</span><span class="p">.</span><span class="nx">duration</span><span class="o">+</span><span class="s1">&#39;&quot;&#39;</span><span class="p">;}</span><span class="k">if</span><span class="p">(</span><span class="nx">C</span><span class="p">.</span><span class="nx">type</span><span class="o">==</span><span class="s2">&quot;test&quot;</span><span class="p">){</span><span class="nx">B</span><span class="o">+=</span><span class="s1">&#39; result=&quot;&#39;</span><span class="o">+</span><span class="nx">C</span><span class="p">.</span><span class="nx">result</span><span class="o">+</span><span class="s1">&#39;&quot; message=&quot;&#39;</span><span class="o">+</span><span class="nx">C</span><span class="p">.</span><span class="nx">message</span><span class="o">+</span><span class="s1">&#39;&quot;&gt;&#39;</span><span class="p">;}</span><span class="k">else</span><span class="p">{</span><span class="nx">B</span><span class="o">+=</span><span class="s1">&#39; passed=&quot;&#39;</span><span class="o">+</span><span class="nx">C</span><span class="p">.</span><span class="nx">passed</span><span class="o">+</span><span class="s1">&#39;&quot; failed=&quot;&#39;</span><span class="o">+</span><span class="nx">C</span><span class="p">.</span><span class="nx">failed</span><span class="o">+</span><span class="s1">&#39;&quot; ignored=&quot;&#39;</span><span class="o">+</span><span class="nx">C</span><span class="p">.</span><span class="nx">ignored</span><span class="o">+</span><span class="s1">&#39;&quot; total=&quot;&#39;</span><span class="o">+</span><span class="nx">C</span><span class="p">.</span><span class="nx">total</span><span class="o">+</span><span class="s1">&#39;&quot;&gt;&#39;</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">D</span> <span class="k">in</span> <span class="nx">C</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">A</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">C</span><span class="p">,</span><span class="nx">D</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">A</span><span class="p">.</span><span class="nx">isObject</span><span class="p">(</span><span class="nx">C</span><span class="p">[</span><span class="nx">D</span><span class="p">])</span><span class="o">&amp;&amp;!</span><span class="nx">A</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">C</span><span class="p">[</span><span class="nx">D</span><span class="p">])){</span><span class="nx">B</span><span class="o">+=</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">callee</span><span class="p">(</span><span class="nx">C</span><span class="p">[</span><span class="nx">D</span><span class="p">]);}}}</span><span class="nx">B</span><span class="o">+=</span><span class="s2">&quot;&lt;/&quot;</span><span class="o">+</span><span class="nx">C</span><span class="p">.</span><span class="nx">type</span><span class="o">+</span><span class="s2">&quot;&gt;&quot;</span><span class="p">;</span><span class="k">return</span> <span class="nx">B</span><span class="p">;};</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">namespace</span><span class="p">(</span><span class="s2">&quot;tool&quot;</span><span class="p">);</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">tool</span><span class="p">.</span><span class="nx">TestReporter</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">A</span><span class="p">,</span><span class="nx">B</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">url</span><span class="o">=</span><span class="nx">A</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">format</span><span class="o">=</span><span class="nx">B</span><span class="o">||</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">tool</span><span class="p">.</span><span class="nx">TestFormat</span><span class="p">.</span><span class="nx">XML</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_fields</span><span class="o">=</span><span class="k">new</span> <span class="nb">Object</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">_form</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_iframe</span><span class="o">=</span><span class="kc">null</span><span class="p">;};</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">tool</span><span class="p">.</span><span class="nx">TestReporter</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">constructor</span><span class="o">:</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">tool</span><span class="p">.</span><span class="nx">TestReporter</span><span class="p">,</span><span class="nx">_convertToISOString</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">A</span><span class="p">){</span><span class="kd">function</span> <span class="nx">B</span><span class="p">(</span><span class="nx">C</span><span class="p">){</span><span class="k">return</span> <span class="nx">C</span><span class="o">&lt;</span><span class="mi">10</span><span class="o">?</span><span class="s2">&quot;0&quot;</span><span class="o">+</span><span class="nx">C</span><span class="o">:</span><span class="nx">C</span><span class="p">;}</span><span class="k">return</span> <span class="nx">A</span><span class="p">.</span><span class="nx">getUTCFullYear</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot;-&quot;</span><span class="o">+</span><span class="nx">B</span><span class="p">(</span><span class="nx">A</span><span class="p">.</span><span class="nx">getUTCMonth</span><span class="p">()</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;-&quot;</span><span class="o">+</span><span class="nx">B</span><span class="p">(</span><span class="nx">A</span><span class="p">.</span><span class="nx">getUTCDate</span><span class="p">())</span><span class="o">+</span><span class="s2">&quot;T&quot;</span><span class="o">+</span><span class="nx">B</span><span class="p">(</span><span class="nx">A</span><span class="p">.</span><span class="nx">getUTCHours</span><span class="p">())</span><span class="o">+</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="nx">B</span><span class="p">(</span><span class="nx">A</span><span class="p">.</span><span class="nx">getUTCMinutes</span><span class="p">())</span><span class="o">+</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="nx">B</span><span class="p">(</span><span class="nx">A</span><span class="p">.</span><span class="nx">getUTCSeconds</span><span class="p">())</span><span class="o">+</span><span class="s2">&quot;Z&quot;</span><span class="p">;},</span><span class="nx">addField</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">A</span><span class="p">,</span><span class="nx">B</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_fields</span><span class="p">[</span><span class="nx">A</span><span class="p">]</span><span class="o">=</span><span class="nx">B</span><span class="p">;},</span><span class="nx">clearFields</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">_fields</span><span class="o">=</span><span class="k">new</span> <span class="nb">Object</span><span class="p">();},</span><span class="nx">destroy</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_form</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_form</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_form</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_form</span><span class="o">=</span><span class="kc">null</span><span class="p">;}</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_iframe</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_iframe</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_iframe</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_iframe</span><span class="o">=</span><span class="kc">null</span><span class="p">;}</span><span class="k">this</span><span class="p">.</span><span class="nx">_fields</span><span class="o">=</span><span class="kc">null</span><span class="p">;},</span><span class="nx">report</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">A</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">_form</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_form</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;form&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_form</span><span class="p">.</span><span class="nx">method</span><span class="o">=</span><span class="s2">&quot;post&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_form</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">visibility</span><span class="o">=</span><span class="s2">&quot;hidden&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_form</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">position</span><span class="o">=</span><span class="s2">&quot;absolute&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_form</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">top</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_form</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">ua</span><span class="p">.</span><span class="nx">ie</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_iframe</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s1">&#39;&lt;iframe name=&quot;yuiTestTarget&quot; /&gt;&#39;</span><span class="p">);}</span><span class="k">else</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">_iframe</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;iframe&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_iframe</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;yuiTestTarget&quot;</span><span class="p">;}</span><span class="k">this</span><span class="p">.</span><span class="nx">_iframe</span><span class="p">.</span><span class="nx">src</span><span class="o">=</span><span class="s2">&quot;javascript:false&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_iframe</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">visibility</span><span class="o">=</span><span class="s2">&quot;hidden&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_iframe</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">position</span><span class="o">=</span><span class="s2">&quot;absolute&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_iframe</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">top</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_iframe</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_form</span><span class="p">.</span><span class="nx">target</span><span class="o">=</span><span class="s2">&quot;yuiTestTarget&quot;</span><span class="p">;}</span><span class="k">this</span><span class="p">.</span><span class="nx">_form</span><span class="p">.</span><span class="nx">action</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">url</span><span class="p">;</span><span class="k">while</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_form</span><span class="p">.</span><span class="nx">hasChildNodes</span><span class="p">()){</span><span class="k">this</span><span class="p">.</span><span class="nx">_form</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_form</span><span class="p">.</span><span class="nx">lastChild</span><span class="p">);}</span><span class="k">this</span><span class="p">.</span><span class="nx">_fields</span><span class="p">.</span><span class="nx">results</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">format</span><span class="p">(</span><span class="nx">A</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">_fields</span><span class="p">.</span><span class="nx">useragent</span><span class="o">=</span><span class="nx">navigator</span><span class="p">.</span><span class="nx">userAgent</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">_fields</span><span class="p">.</span><span class="nx">timestamp</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_convertToISOString</span><span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">());</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">B</span> <span class="k">in</span> <span class="k">this</span><span class="p">.</span><span class="nx">_fields</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_fields</span><span class="p">,</span><span class="nx">B</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="k">this</span><span class="p">.</span><span class="nx">_fields</span><span class="p">[</span><span class="nx">B</span><span class="p">]</span><span class="o">!=</span><span class="s2">&quot;function&quot;</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">ua</span><span class="p">.</span><span class="nx">ie</span><span class="p">){</span><span class="nx">input</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s1">&#39;&lt;input name=&quot;&#39;</span><span class="o">+</span><span class="nx">B</span><span class="o">+</span><span class="s1">&#39;&quot; &gt;&#39;</span><span class="p">);}</span><span class="k">else</span><span class="p">{</span><span class="nx">input</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;input&quot;</span><span class="p">);</span><span class="nx">input</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="nx">B</span><span class="p">;}</span><span class="nx">input</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="s2">&quot;hidden&quot;</span><span class="p">;</span><span class="nx">input</span><span class="p">.</span><span class="nx">value</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">_fields</span><span class="p">[</span><span class="nx">B</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">_form</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">input</span><span class="p">);}}</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">_fields</span><span class="p">.</span><span class="nx">results</span><span class="p">;</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">_fields</span><span class="p">.</span><span class="nx">useragent</span><span class="p">;</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">_fields</span><span class="p">.</span><span class="nx">timestamp</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">!==</span><span class="kc">false</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">_form</span><span class="p">.</span><span class="nx">submit</span><span class="p">();}}};</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">register</span><span class="p">(</span><span class="s2">&quot;yuitest&quot;</span><span class="p">,</span><span class="nx">YAHOO</span><span class="p">.</span><span class="nx">tool</span><span class="p">.</span><span class="nx">TestRunner</span><span class="p">,{</span><span class="nx">version</span><span class="o">:</span><span class="s2">&quot;2.8.0r4&quot;</span><span class="p">,</span><span class="nx">build</span><span class="o">:</span><span class="s2">&quot;2446&quot;</span><span class="p">});</span>
</pre></div>
