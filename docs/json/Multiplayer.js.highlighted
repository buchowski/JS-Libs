<div class="highlight"><pre><span class="nx">F</span><span class="p">.</span><span class="nx">MChannel</span> <span class="o">=</span> <span class="p">(</span><span class="kd">function</span><span class="p">(){</span>
	<span class="k">return</span><span class="p">{</span>
		<span class="nx">modelRecalc</span><span class="o">:</span> <span class="s2">&quot;&quot;</span><span class="p">,</span>
		
		<span class="nx">decisionMade</span><span class="o">:</span> <span class="s2">&quot;&quot;</span>
		
		
	<span class="p">}</span>
<span class="p">}());</span>

<span class="nx">F</span><span class="p">.</span><span class="nx">Comet</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
	<span class="kd">var</span> <span class="nx">cometd</span> <span class="o">=</span> <span class="nx">$</span><span class="p">.</span><span class="nx">cometd</span><span class="p">;</span>
	 
	<span class="kd">var</span> <span class="nx">activeChannels</span> <span class="o">=</span> <span class="p">{};</span> <span class="c1">// {channelId: [subsObj1, subsObj2]</span>
	<span class="kd">var</span> <span class="nx">subscriptions</span> <span class="o">=</span> <span class="p">{};</span> <span class="c1">// {&lt;subsid&gt;: [fn1, fn2]</span>
	
	<span class="kd">var</span> <span class="nx">isConnected</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span> <span class="c1">//Flag showing status of connection;</span>
	<span class="kd">var</span> <span class="nx">isInitialized</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
	
	<span class="kd">var</span> <span class="nx">connectionSucceeded</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">message</span><span class="p">,</span> <span class="nx">callback</span><span class="p">){</span>
<span class="c1">//		 console.log(&quot;F.Comet: connection success&quot;, message, callback)</span>
		<span class="c1">//Unsubscribe older events and resubscribe them</span>
		<span class="c1">//TODO: why do i have to do this and not the lib?</span>
		<span class="c1">//TODO: why not do _clearSubscriptions(); ?</span>
        <span class="nx">cometd</span><span class="p">.</span><span class="nx">batch</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span>
        	<span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">channel</span> <span class="k">in</span> <span class="nx">activeChannels</span><span class="p">){</span>
        		<span class="kd">var</span> <span class="nx">channelSubscriptions</span> <span class="o">=</span> <span class="nx">activeChannels</span><span class="p">[</span><span class="nx">channel</span><span class="p">];</span>
        		<span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">subscription</span> <span class="k">in</span> <span class="nx">channelSubscriptions</span><span class="p">){</span>
        			<span class="kd">var</span> <span class="nx">thissubs</span> <span class="o">=</span> <span class="nx">channelSubscriptions</span><span class="p">[</span><span class="nx">subscription</span><span class="p">];</span>
        			<span class="nx">cometd</span><span class="p">.</span><span class="nx">unsubscribe</span><span class="p">(</span><span class="nx">thissubs</span><span class="p">)</span>
        		<span class="p">}</span>
        	<span class="p">}</span>
        	
        	<span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">channel</span> <span class="k">in</span> <span class="nx">activeChannels</span><span class="p">){</span>
        		<span class="kd">var</span> <span class="nx">channelSubscriptions</span> <span class="o">=</span> <span class="nx">activeChannels</span><span class="p">[</span><span class="nx">channel</span><span class="p">];</span>
        		<span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">subscription</span> <span class="k">in</span> <span class="nx">channelSubscriptions</span><span class="p">){</span>
        			<span class="kd">var</span> <span class="nx">thissubs</span> <span class="o">=</span> <span class="nx">channelSubscriptions</span><span class="p">[</span><span class="nx">subscription</span><span class="p">];</span>
        			
        			<span class="kd">var</span> <span class="nx">subsFns</span> <span class="o">=</span> <span class="nx">subscriptions</span><span class="p">[</span><span class="nx">thissubs</span><span class="p">];</span>
        			<span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">fn</span> <span class="k">in</span> <span class="nx">subsFns</span><span class="p">){</span>
        				<span class="kd">var</span> <span class="nx">thisFn</span> <span class="o">=</span> <span class="nx">subsFns</span><span class="p">[</span><span class="nx">fn</span><span class="p">];</span>
        				<span class="nx">cometd</span><span class="p">.</span><span class="nx">subscribe</span><span class="p">(</span><span class="nx">channel</span><span class="p">,</span> <span class="nx">thisFn</span><span class="p">);</span>
        			<span class="p">}</span>
        		<span class="p">}</span>
        	<span class="p">}</span>
        	
        	<span class="nx">isInitialized</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
        <span class="p">});</span>
        
        <span class="nx">callback</span><span class="p">(</span><span class="nx">message</span><span class="p">);</span>
	<span class="p">}</span>
	
	<span class="kd">var</span> <span class="nx">connectionBroken</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">message</span><span class="p">,</span> <span class="nx">callback</span><span class="p">){</span>
		<span class="nx">callback</span><span class="p">(</span><span class="nx">message</span><span class="p">);</span>
	<span class="p">}</span>
	
	<span class="c1">// Disconnect when the page unloads</span>
    <span class="nx">$</span><span class="p">(</span><span class="nb">window</span><span class="p">).</span><span class="nx">unload</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span>
    	<span class="k">if</span><span class="p">(</span><span class="nx">cometd</span><span class="p">)</span>
        <span class="nx">cometd</span><span class="p">.</span><span class="nx">disconnect</span><span class="p">();</span>
        <span class="nx">isInitialized</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
    <span class="p">});</span>

	
	<span class="k">return</span><span class="p">{</span>
		<span class="c1">//connectEvent</span>
		<span class="nx">subscribe</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">channel</span><span class="p">,</span> <span class="nx">handler</span><span class="p">){</span>
			<span class="kd">var</span> <span class="nx">thissub</span> <span class="o">=</span> <span class="nx">cometd</span><span class="p">.</span><span class="nx">subscribe</span><span class="p">(</span><span class="nx">channel</span><span class="p">,</span> <span class="nx">handler</span><span class="p">);</span>
			
			<span class="c1">//Add to channels</span>
			<span class="kd">var</span> <span class="nx">subs</span> <span class="o">=</span> <span class="p">(</span><span class="nx">activeChannels</span><span class="p">[</span><span class="nx">channel</span><span class="p">])</span> <span class="o">||</span> <span class="p">[];</span>
			<span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">F</span><span class="p">.</span><span class="nb">Array</span><span class="p">.</span><span class="nx">contains</span><span class="p">(</span><span class="nx">thissub</span><span class="p">,</span> <span class="nx">subs</span><span class="p">)){</span>
				<span class="nx">subs</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">thissub</span><span class="p">);</span>
			<span class="p">}</span>
				
			<span class="nx">activeChannels</span><span class="p">[</span><span class="nx">channel</span><span class="p">]</span> <span class="o">=</span> <span class="nx">subs</span><span class="p">;</span>
			
			<span class="c1">//Add handler to subs</span>
			<span class="kd">var</span> <span class="nx">handlers</span> <span class="o">=</span>  <span class="p">(</span><span class="nx">subscriptions</span><span class="p">[</span><span class="nx">thissub</span><span class="p">])</span> <span class="o">||</span> <span class="p">[];</span>
			<span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">F</span><span class="p">.</span><span class="nb">Array</span><span class="p">.</span><span class="nx">contains</span><span class="p">(</span><span class="nx">handler</span><span class="p">,</span> <span class="nx">handlers</span><span class="p">)){</span>
				<span class="nx">handlers</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">handler</span><span class="p">);</span>
			<span class="p">}</span>
			<span class="nx">subscriptions</span><span class="p">[</span><span class="nx">thissub</span><span class="p">]</span> <span class="o">=</span> <span class="nx">handlers</span><span class="p">;</span>
		<span class="p">},</span>
		
		<span class="nx">publish</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">channel</span><span class="p">,</span> <span class="nx">message</span><span class="p">){</span>
			<span class="nx">cometd</span><span class="p">.</span><span class="nx">publish</span><span class="p">(</span><span class="nx">channel</span><span class="p">,</span> <span class="nx">message</span><span class="p">);</span>
		<span class="p">},</span>
		
		<span class="cm">/**</span>
<span class="cm">		 * @param cometURL - URL of comet server</span>
<span class="cm">		 * @param options</span>
<span class="cm">		 */</span>
		<span class="nx">init</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">cometURL</span><span class="p">,</span> <span class="nx">options</span><span class="p">,</span> <span class="nx">cometOptions</span><span class="p">){</span>
<span class="c1">//			console.log(&quot;F.comet.init&quot;, cometURL, options, cometOptions);</span>
			<span class="c1">//var cometURL = &quot;http://channel1.forio.com/cometd/&quot;;</span>
	      	<span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">cometURL</span><span class="p">){</span>
	      		<span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;F.Comet: No URL provided&quot;</span><span class="p">);</span>	
	      	<span class="p">}</span>
	      	
			<span class="kd">var</span> <span class="nx">defaultCometOptions</span> <span class="o">=</span> <span class="p">{</span>
	            <span class="nx">url</span><span class="o">:</span> <span class="nx">cometURL</span><span class="p">,</span>
	            <span class="nx">logLevel</span><span class="o">:</span> <span class="s1">&#39;info&#39;</span>
	        <span class="p">}</span>
	        <span class="nx">$</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">defaultCometOptions</span><span class="p">,</span> <span class="nx">cometOptions</span><span class="p">);</span>
	        
	        <span class="kd">var</span> <span class="nx">defaults</span> <span class="o">=</span> <span class="p">{</span>
	        	<span class="cm">/** Execute on connection established</span>
<span class="cm">				 * @config onConnect</span>
<span class="cm">				 * @type Function</span>
<span class="cm">				 */</span>
	        	<span class="nx">onConnect</span><span class="o">:</span> <span class="nx">$</span><span class="p">.</span><span class="nx">noop</span><span class="p">,</span>
	        	<span class="nx">onDisconnect</span><span class="o">:</span> <span class="nx">$</span><span class="p">.</span><span class="nx">noop</span>
	        <span class="p">}</span>
	        <span class="nx">$</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">defaults</span><span class="p">,</span> <span class="nx">options</span><span class="p">);</span>
	        
			<span class="nx">cometd</span><span class="p">.</span><span class="nx">configure</span><span class="p">(</span><span class="nx">defaultCometOptions</span><span class="p">);</span>
	
			<span class="cm">/* /meta/connect is a bayeux-defined comet channel</span>
<span class="cm">			 * Use to listen for error messages from server. E.g: Network error</span>
<span class="cm">			 */</span>
	        <span class="nx">cometd</span><span class="p">.</span><span class="nx">addListener</span><span class="p">(</span><span class="s1">&#39;/meta/connect&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">message</span><span class="p">){</span>
	       		<span class="kd">var</span> <span class="nx">wasConnected</span> <span class="o">=</span> <span class="nx">isConnected</span><span class="p">;</span>
	            <span class="nx">isConnected</span> <span class="o">=</span> <span class="p">(</span><span class="nx">message</span><span class="p">.</span><span class="nx">successful</span> <span class="o">===</span> <span class="kc">true</span><span class="p">);</span>
	            <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">wasConnected</span> <span class="o">&amp;&amp;</span> <span class="nx">isConnected</span><span class="p">){</span> <span class="c1">//Connecting for the first time</span>
	                <span class="nx">connectionSucceeded</span><span class="p">(</span><span class="nx">message</span><span class="p">,</span> <span class="nx">defaults</span><span class="p">.</span><span class="nx">onConnect</span><span class="p">);</span>
	            <span class="p">}</span>
	            <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="nx">wasConnected</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="nx">isConnected</span><span class="p">)</span> <span class="p">{</span>
	                <span class="nx">connectionBroken</span><span class="p">(</span><span class="nx">message</span><span class="p">,</span> <span class="nx">defaults</span><span class="p">.</span><span class="nx">onDisconnect</span><span class="p">);</span>
	            <span class="p">}</span>
	        <span class="p">});</span>
	
	        <span class="cm">/* Service channels are for request-response type commn.</span>
<span class="cm">	         * </span>
<span class="cm">	         */</span>
<span class="c1">//	         cometd.addListener(&#39;/meta/connect&#39;, function(message){</span>
<span class="c1">//	        });</span>
<span class="c1">//	        </span>
	        <span class="nx">cometd</span><span class="p">.</span><span class="nx">handshake</span><span class="p">();</span>
		<span class="p">}</span>
	<span class="p">}</span>
<span class="p">}();</span>

<span class="c1">//&quot;&quot;</span>

<span class="kd">var</span> <span class="nx">MChannel</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
	<span class="kd">var</span> <span class="nx">url</span><span class="p">,</span> <span class="nx">teamChannel</span><span class="p">;</span>
	<span class="kd">var</span> <span class="nx">initialized</span><span class="p">;</span>
	
	<span class="kd">var</span> <span class="nx">handleSimulateEvent</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">msg</span><span class="p">){</span>
		<span class="c1">//console.log(&quot;handleSimulateEvent&quot;, msg)</span>
		<span class="kd">var</span> <span class="nx">data</span> <span class="o">=</span> <span class="p">(</span><span class="nx">msg</span><span class="p">.</span><span class="nx">data</span> <span class="o">&amp;&amp;</span> <span class="nx">msg</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span> <span class="o">?</span> <span class="nx">msg</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">:</span> <span class="p">{};</span>
		<span class="kd">var</span> <span class="nx">msgType</span> <span class="o">=</span> <span class="nx">data</span><span class="p">.</span><span class="nx">type</span><span class="p">;</span>
		<span class="k">switch</span><span class="p">(</span><span class="nx">msgType</span><span class="p">){</span>
			<span class="k">case</span> <span class="s2">&quot;MODEL_RECALCULATED&quot;</span><span class="o">:</span>
				<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;MODEL_RECALCULATED&quot;</span><span class="p">,</span> <span class="nx">data</span><span class="p">)</span>
				<span class="nx">MChannel</span><span class="p">.</span><span class="nx">ModelRecalcEvent</span><span class="p">.</span><span class="nx">fire</span><span class="p">(</span><span class="nx">data</span><span class="p">);</span>
				<span class="k">break</span><span class="p">;</span>
			<span class="k">case</span> <span class="s2">&quot;STEP_CHANGED&quot;</span><span class="o">:</span>
				<span class="nx">MChannel</span><span class="p">.</span><span class="nx">StepChangeEvent</span><span class="p">.</span><span class="nx">fire</span><span class="p">(</span><span class="nx">data</span><span class="p">);</span>
				<span class="k">break</span><span class="p">;</span>
			<span class="k">case</span> <span class="s2">&quot;CUSTOM_EVENT&quot;</span><span class="o">:</span>
				<span class="nx">MChannel</span><span class="p">.</span><span class="nx">customMsgEvent</span><span class="p">.</span><span class="nx">fire</span><span class="p">(</span><span class="nx">data</span><span class="p">.</span><span class="nx">msg</span><span class="p">);</span>
				<span class="k">break</span><span class="p">;</span>
			<span class="k">default</span><span class="o">:</span>
				<span class="c1">//console.log(&quot;default msg&quot;);</span>
				<span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span>
		<span class="p">}</span>
	<span class="p">}</span>
	
	<span class="k">return</span><span class="p">{</span>
		<span class="nx">StepChangeEvent</span><span class="o">:</span>  <span class="k">new</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">CustomEvent</span><span class="p">(</span><span class="s2">&quot;stepchanged&quot;</span><span class="p">,</span> <span class="k">this</span><span class="p">,</span> <span class="kc">true</span><span class="p">,</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">CustomEvent</span><span class="p">.</span><span class="nx">FLAT</span><span class="p">),</span>
		<span class="nx">ModelRecalcEvent</span><span class="o">:</span> <span class="k">new</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">CustomEvent</span><span class="p">(</span><span class="s2">&quot;modelchanged&quot;</span><span class="p">,</span> <span class="k">this</span><span class="p">,</span> <span class="kc">true</span><span class="p">,</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">CustomEvent</span><span class="p">.</span><span class="nx">FLAT</span><span class="p">),</span>
		<span class="nx">customMsgEvent</span><span class="o">:</span> <span class="k">new</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">CustomEvent</span><span class="p">(</span><span class="s2">&quot;custommsg&quot;</span><span class="p">,</span> <span class="k">this</span><span class="p">,</span> <span class="kc">true</span><span class="p">,</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">CustomEvent</span><span class="p">.</span><span class="nx">FLAT</span><span class="p">),</span>
		
		<span class="nx">init</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">args</span><span class="p">,</span> <span class="nx">options</span><span class="p">){</span>
			<span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">initialized</span><span class="p">){</span>
				<span class="nx">initialized</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
				<span class="nx">url</span> <span class="o">=</span> <span class="nx">args</span><span class="p">.</span><span class="nx">url</span><span class="p">;</span>
				<span class="nx">teamChannel</span> <span class="o">=</span> <span class="nx">args</span><span class="p">.</span><span class="nx">teamChannel</span><span class="p">;</span>
				
				<span class="nx">F</span><span class="p">.</span><span class="nx">Comet</span><span class="p">.</span><span class="nx">init</span><span class="p">(</span><span class="nx">url</span><span class="p">,</span> <span class="nx">options</span><span class="p">);</span>
				<span class="nx">F</span><span class="p">.</span><span class="nx">Comet</span><span class="p">.</span><span class="nx">subscribe</span><span class="p">(</span><span class="nx">teamChannel</span><span class="p">,</span> <span class="nx">handleSimulateEvent</span><span class="p">);</span>
			<span class="p">}</span>
		<span class="p">},</span>
		
		<span class="nx">broadcastMessage</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">message</span><span class="p">,</span> <span class="nx">channel</span><span class="p">){</span>
			<span class="nx">channel</span> <span class="o">||</span> <span class="p">(</span><span class="nx">channel</span> <span class="o">=</span> <span class="nx">teamChannel</span><span class="p">);</span>
			
			<span class="kd">var</span> <span class="nx">msg</span> <span class="o">=</span> <span class="p">[{</span>
				<span class="nx">autoGenerated</span><span class="o">:</span> <span class="kc">false</span><span class="p">,</span>
				<span class="nx">type</span><span class="o">:</span> <span class="s2">&quot;CUSTOM_EVENT&quot;</span><span class="p">,</span>
				<span class="nx">msg</span><span class="o">:</span> <span class="nx">message</span>
			<span class="p">}]</span>
			<span class="c1">//console.log(&quot;broadcastMessage&quot;, msg)</span>
			<span class="nx">F</span><span class="p">.</span><span class="nx">Comet</span><span class="p">.</span><span class="nx">publish</span><span class="p">(</span><span class="nx">channel</span><span class="p">,</span> <span class="nx">msg</span><span class="p">);</span>
		<span class="p">}</span>
	<span class="p">}</span>
<span class="p">}();</span>

<span class="nx">MChannel</span><span class="p">.</span><span class="nx">Chat</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
	<span class="kd">var</span> <span class="nx">userId</span><span class="p">;</span>
	<span class="kd">var</span> <span class="nx">now</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">();</span>
    <span class="kd">var</span> <span class="nx">currtimeStamp</span> <span class="o">=</span> <span class="nx">now</span><span class="p">.</span><span class="nx">toLocaleTimeString</span><span class="p">();</span>
	<span class="kd">var</span> <span class="nx">Chatmessage</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">msgto</span><span class="p">,</span> <span class="nx">msgdata</span><span class="p">){</span>
		<span class="k">return</span><span class="p">{</span>
			<span class="nx">subtype</span><span class="o">:</span> <span class="s2">&quot;CHAT_MESSAGE&quot;</span><span class="p">,</span>
			<span class="nx">from</span><span class="o">:</span> <span class="nx">userId</span><span class="p">,</span>
			<span class="nx">to</span><span class="o">:</span> <span class="nx">msgto</span> <span class="o">+</span> <span class="s2">&quot;&quot;</span><span class="p">,</span>
			<span class="nx">data</span><span class="o">:</span> <span class="nx">msgdata</span><span class="p">,</span>
			<span class="nx">timeStamp</span> <span class="o">:</span> <span class="nx">currtimeStamp</span>
		<span class="p">}</span>
	<span class="p">}</span>
	
	<span class="k">return</span><span class="p">{</span>
		<span class="nx">incomingMsgEvent</span><span class="o">:</span>  <span class="k">new</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">CustomEvent</span><span class="p">(</span><span class="s2">&quot;incomingMsg&quot;</span><span class="p">,</span> <span class="k">this</span><span class="p">,</span> <span class="kc">true</span><span class="p">,</span> <span class="nx">YAHOO</span><span class="p">.</span><span class="nx">util</span><span class="p">.</span><span class="nx">CustomEvent</span><span class="p">.</span><span class="nx">FLAT</span><span class="p">),</span>
		<span class="nx">sendMessage</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">to</span><span class="p">,</span> <span class="nx">message</span><span class="p">){</span>
			<span class="kd">var</span> <span class="nx">msg</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Chatmessage</span><span class="p">(</span><span class="nx">to</span><span class="p">,</span><span class="nx">message</span><span class="p">);</span>
			<span class="nx">MChannel</span><span class="p">.</span><span class="nx">broadcastMessage</span><span class="p">(</span><span class="nx">msg</span><span class="p">);</span>
			<span class="c1">//TODO: Should i create a new channel for chat?</span>
		<span class="p">},</span>
		<span class="nx">init</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">myId</span><span class="p">,</span> <span class="nx">args</span><span class="p">,</span> <span class="nx">options</span><span class="p">){</span>
			<span class="nx">userId</span> <span class="o">=</span> <span class="nx">myId</span> <span class="o">+</span> <span class="s2">&quot;&quot;</span><span class="p">;</span>
			
			<span class="nx">MChannel</span><span class="p">.</span><span class="nx">init</span><span class="p">(</span><span class="nx">args</span><span class="p">,</span> <span class="nx">options</span><span class="p">);</span>
			<span class="nx">MChannel</span><span class="p">.</span><span class="nx">customMsgEvent</span><span class="p">.</span><span class="nx">subscribe</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">data</span><span class="p">){</span>
				<span class="kd">var</span> <span class="nx">subtype</span> <span class="o">=</span> <span class="nx">data</span><span class="p">.</span><span class="nx">subtype</span><span class="p">;</span>
				
				<span class="k">if</span><span class="p">(</span><span class="nx">subtype</span> <span class="o">&amp;&amp;</span> <span class="nx">subtype</span> <span class="o">==</span> <span class="s2">&quot;CHAT_MESSAGE&quot;</span><span class="p">){</span>
					<span class="kd">var</span> <span class="nx">msgFrom</span> <span class="o">=</span> <span class="nx">data</span><span class="p">.</span><span class="nx">from</span><span class="p">;</span>
					<span class="kd">var</span> <span class="nx">payload</span> <span class="o">=</span> <span class="nx">data</span><span class="p">.</span><span class="nx">data</span><span class="p">;</span>
					<span class="c1">//console.log(&quot;firing&quot;, payload)</span>
					
					<span class="k">if</span><span class="p">(</span><span class="nx">msgFrom</span> <span class="o">!==</span> <span class="nx">userId</span><span class="p">){</span>
						<span class="nx">MChannel</span><span class="p">.</span><span class="nx">Chat</span><span class="p">.</span><span class="nx">incomingMsgEvent</span><span class="p">.</span><span class="nx">fire</span><span class="p">(</span><span class="nx">data</span><span class="p">);</span>
					<span class="p">}</span>
				<span class="p">}</span>
			<span class="p">})</span>
		<span class="p">}</span>
	<span class="p">}</span>
<span class="p">}()</span>

<span class="nx">F</span><span class="p">.</span><span class="nx">API</span><span class="p">.</span><span class="nx">Game</span> <span class="o">=</span> <span class="p">(</span><span class="kd">function</span><span class="p">(){</span>
	<span class="kd">var</span> <span class="nx">url</span> <span class="o">=</span> <span class="nx">F</span><span class="p">.</span><span class="nx">APIUtils</span><span class="p">.</span><span class="nx">getURL</span><span class="p">(</span><span class="s2">&quot;game&quot;</span><span class="p">);</span>

	<span class="k">return</span><span class="p">{</span>
		<span class="nx">create</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">noOfGames</span><span class="p">,</span> <span class="nx">callback</span><span class="p">,</span> <span class="nx">params</span><span class="p">,</span> <span class="nx">options</span><span class="p">){</span>
			<span class="p">(</span><span class="nx">noOfGames</span><span class="p">)</span> <span class="o">||</span> <span class="p">(</span><span class="nx">noOfGames</span> <span class="o">=</span> <span class="mi">1</span><span class="p">);</span>
			<span class="kd">var</span> <span class="nx">defaults</span> <span class="o">=</span> <span class="p">{</span>
				<span class="nx">name</span><span class="o">:</span> <span class="s2">&quot;&quot;</span><span class="p">,</span>
				<span class="nx">key</span><span class="o">:</span> <span class="s2">&quot;&quot;</span><span class="p">,</span>
				<span class="nx">games</span><span class="o">:</span> <span class="nx">noOfGames</span>
			<span class="p">}</span>
			<span class="nx">$</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">defaults</span><span class="p">,</span> <span class="nx">params</span><span class="p">);</span>
			
			<span class="kd">var</span> <span class="nx">ac</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">APIConnection</span><span class="p">(</span><span class="nx">url</span><span class="p">,</span> <span class="nx">options</span><span class="p">);</span>
				<span class="nx">ac</span><span class="p">.</span><span class="nx">post</span><span class="p">(</span><span class="nx">defaults</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">response</span><span class="p">){</span>
					<span class="kd">var</span> <span class="nx">data</span> <span class="o">=</span> <span class="nx">response</span><span class="p">.</span><span class="nx">games</span><span class="p">;</span>
					<span class="p">(</span><span class="nx">callback</span> <span class="o">||</span> <span class="nx">$</span><span class="p">.</span><span class="nx">noop</span><span class="p">)(</span><span class="nx">data</span><span class="p">);</span>
				<span class="p">});</span>
		<span class="p">},</span>
		<span class="nx">join</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">gameId</span><span class="p">,</span> <span class="nx">userId</span><span class="p">,</span> <span class="nx">callback</span><span class="p">,</span> <span class="nx">options</span><span class="p">){</span>
			<span class="kd">var</span> <span class="nx">params</span> <span class="o">=</span> <span class="p">{</span>
				<span class="nx">userPath</span><span class="o">:</span> <span class="nx">userId</span>
			<span class="p">}</span>
			<span class="kd">var</span> <span class="nx">ac</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">APIConnection</span><span class="p">(</span><span class="nx">url</span> <span class="o">+</span> <span class="s2">&quot;/&quot;</span> <span class="o">+</span> <span class="nx">gameId</span><span class="p">,</span> <span class="nx">options</span><span class="p">);</span>
				<span class="nx">ac</span><span class="p">.</span><span class="nx">post</span><span class="p">(</span><span class="nx">params</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">response</span><span class="p">){</span>
					<span class="kd">var</span> <span class="nx">data</span> <span class="o">=</span> <span class="nx">response</span><span class="p">.</span><span class="nx">game</span><span class="p">;</span>
					<span class="p">(</span><span class="nx">callback</span> <span class="o">||</span> <span class="nx">$</span><span class="p">.</span><span class="nx">noop</span><span class="p">)(</span><span class="nx">data</span><span class="p">);</span>
				<span class="p">});</span>
		<span class="p">},</span>
		
		<span class="nx">quit</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">gameId</span><span class="p">,</span> <span class="nx">role</span><span class="p">,</span> <span class="nx">callback</span><span class="p">,</span> <span class="nx">options</span><span class="p">){</span>
			<span class="kd">var</span> <span class="nx">ac</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">APIConnection</span><span class="p">(</span><span class="nx">url</span> <span class="o">+</span> <span class="s2">&quot;/&quot;</span> <span class="o">+</span> <span class="nx">gameId</span> <span class="o">+</span> <span class="s2">&quot;/&quot;</span> <span class="o">+</span> <span class="nx">role</span><span class="p">,</span> <span class="nx">options</span><span class="p">);</span>
				<span class="nx">ac</span><span class="p">.</span><span class="nx">post</span><span class="p">(</span><span class="s2">&quot;method=DELETE&quot;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">response</span><span class="p">){</span>
					<span class="kd">var</span> <span class="nx">data</span> <span class="o">=</span> <span class="nx">response</span><span class="p">.</span><span class="nx">data</span><span class="p">;</span>
					<span class="p">(</span><span class="nx">callback</span> <span class="o">||</span> <span class="nx">$</span><span class="p">.</span><span class="nx">noop</span><span class="p">)(</span><span class="nx">data</span><span class="p">);</span>
				<span class="p">})</span>
		<span class="p">}</span>
	<span class="p">}</span>

<span class="p">}());</span>
</pre></div>
